digraph graphname {
n1533 [shape=box,label="(1533)\nlist.prev = null\nhaxe.MainLoop.pending = list"];
n1532 [shape=box,label="(1532)\ninsize = insize * 2"];
n1531 [shape=box,label="(1531)\nbreak"];
n1530 [shape=box,label="(1530)\ntail.next = null\nvar _hx_tmp = nmerges <= 1\n@:cond-branch _hx_tmp"];
n1530 -> n1531[style="dashed",color="gray",label="then"];
n1530 -> n1532[style="dashed",color="gray",label="next"];
n1529 [shape=box,label="(1529)\np = q"];
n1528 [shape=box,label="(1528)\ne.prev = tail\ntail = e"];
n1527 [shape=box,label="(1527)\nlist = e"];
n1526 [shape=box,label="(1526)\ntail.next = e"];
n1525 [shape=box,label="(1525)\nvar _hx_tmp = tail != null\n@:cond-branch _hx_tmp"];
n1525 -> n1526[style="dashed",color="gray",label="then"];
n1525 -> n1527[style="dashed",color="gray",label="else"];
n1525 -> n1528[style="dashed",color="gray",label="next"];
n1524 [shape=box,label="(1524)"];
n1523 [shape=box,label="(1523)"];
n1522 [shape=box,label="(1522)\nqsize = qsize - 1"];
n1521 [shape=box,label="(1521)"];
n1520 [shape=box,label="(1520)\npsize = psize - 1"];
n1519 [shape=box,label="(1519)\ne = q\nq = q.next"];
n1519 -> n1522[style="dashed",color="gray",label="sub"];
n1519 -> n1523[style="dashed",color="gray",label="next"];
n1518 [shape=box,label="(1518)\ne = p\np = p.next"];
n1518 -> n1520[style="dashed",color="gray",label="sub"];
n1518 -> n1521[style="dashed",color="gray",label="next"];
n1517 [shape=box,label="(1517)\n@:cond-branch _hx_tmp"];
n1517 -> n1518[style="dashed",color="gray",label="then"];
n1517 -> n1519[style="dashed",color="gray",label="else"];
n1517 -> n1524[style="dashed",color="gray",label="next"];
n1516 [shape=box,label="(1516)"];
n1515 [shape=box,label="(1515)"];
n1514 [shape=box,label="(1514)\n_hx_tmp = false"];
n1513 [shape=box,label="(1513)\n_hx_tmp = p.nextRun <= q.nextRun"];
n1512 [shape=box,label="(1512)\n_hx_tmp = true"];
n1511 [shape=box,label="(1511)\nvar _hx_tmp = p.priority == q.priority\n@:cond-branch _hx_tmp"];
n1511 -> n1513[style="dashed",color="gray",label="then"];
n1511 -> n1514[style="dashed",color="gray",label="else"];
n1511 -> n1515[style="dashed",color="gray",label="next"];
n1510 [shape=box,label="(1510)\n_hx_tmp = true"];
n1509 [shape=box,label="(1509)\nvar _hx_tmp = ! p.priority > q.priority\n@:cond-branch _hx_tmp"];
n1509 -> n1511[style="dashed",color="gray",label="then"];
n1509 -> n1512[style="dashed",color="gray",label="else"];
n1509 -> n1516[style="dashed",color="gray",label="next"];
n1508 [shape=box,label="(1508)\nvar _hx_tmp = ! _hx_tmp\n@:cond-branch _hx_tmp"];
n1508 -> n1509[style="dashed",color="gray",label="then"];
n1508 -> n1510[style="dashed",color="gray",label="else"];
n1508 -> n1517[style="dashed",color="gray",label="next"];
n1507 [shape=box,label="(1507)\n_hx_tmp = true"];
n1506 [shape=box,label="(1506)\n_hx_tmp = q == null"];
n1505 [shape=box,label="(1505)"];
n1504 [shape=box,label="(1504)\nqsize = qsize - 1"];
n1503 [shape=box,label="(1503)\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp = ! qsize == 0\n@:cond-branch _hx_tmp"];
n1503 -> n1506[style="dashed",color="gray",label="then"];
n1503 -> n1507[style="dashed",color="gray",label="else"];
n1503 -> n1508[style="dashed",color="gray",label="next"];
n1502 [shape=box,label="(1502)\ne = q\nq = q.next"];
n1502 -> n1504[style="dashed",color="gray",label="sub"];
n1502 -> n1505[style="dashed",color="gray",label="next"];
n1501 [shape=box,label="(1501)\nvar _hx_tmp = psize == 0\n@:cond-branch _hx_tmp"];
n1501 -> n1502[style="dashed",color="gray",label="then"];
n1501 -> n1503[style="dashed",color="gray",label="else"];
n1501 -> n1525[style="dashed",color="gray",label="next"];
n1500 [shape=box,label="(1500)\nbreak"];
n1499 [shape=box,label="(1499)\nvar _hx_tmp = ! ((_hx_tmp))\n@:cond-branch _hx_tmp"];
n1499 -> n1500[style="dashed",color="gray",label="then"];
n1499 -> n1501[style="dashed",color="gray",label="next"];
n1498 [shape=box,label="(1498)"];
n1497 [shape=box,label="(1497)\n_hx_tmp = false"];
n1496 [shape=box,label="(1496)\n_hx_tmp = q != null"];
n1495 [shape=box,label="(1495)\n_hx_tmp = true"];
n1494 [shape=box,label="(1494)\nvar _hx_tmp = qsize > 0\n@:cond-branch _hx_tmp"];
n1494 -> n1496[style="dashed",color="gray",label="then"];
n1494 -> n1497[style="dashed",color="gray",label="else"];
n1494 -> n1498[style="dashed",color="gray",label="next"];
n1493 [shape=box,label="(1493)\nvar _hx_tmp\nvar _hx_tmp = ! psize > 0\n@:cond-branch _hx_tmp"];
n1493 -> n1494[style="dashed",color="gray",label="then"];
n1493 -> n1495[style="dashed",color="gray",label="else"];
n1493 -> n1499[style="dashed",color="gray",label="next"];
n1492 [shape=box,label="<loop-head>
(1492)"];
n1491 [shape=box,label="(1491)\nwhile ((true)) @:block 1493"];
n1491 -> n1492[style="dashed",color="gray",label="loop-head"];
n1491 -> n1493[style="dashed",color="gray",label="loop-body"];
n1491 -> n1529[style="dashed",color="gray",label="next"];
n1490 [shape=box,label="(1490)\nqsize = insize"];
n1490 -> n1491[style="dashed",color="gray",label="merge"];
n1489 [shape=box,label="(1489)"];
n1488 [shape=box,label="(1488)"];
n1487 [shape=box,label="(1487)\nbreak"];
n1486 [shape=box,label="(1486)\nq = q.next\nvar _hx_tmp = q == null\n@:cond-branch _hx_tmp"];
n1486 -> n1487[style="dashed",color="gray",label="then"];
n1486 -> n1488[style="dashed",color="gray",label="next"];
n1485 [shape=box,label="(1485)\npsize = psize + 1"];
n1484 [shape=box,label="(1484)\n`1 = `1 + 1\nvar i = `1 - 1"];
n1484 -> n1485[style="dashed",color="gray",label="sub"];
n1484 -> n1486[style="dashed",color="gray",label="next"];
n1483 [shape=box,label="(1483)\nbreak"];
n1482 [shape=box,label="(1482)\nvar _hx_tmp = ! ((`1 < `))\n@:cond-branch _hx_tmp"];
n1482 -> n1483[style="dashed",color="gray",label="then"];
n1482 -> n1484[style="dashed",color="gray",label="next"];
n1481 [shape=box,label="<loop-head>
(1481)"];
n1480 [shape=box,label="(1480)\nwhile ((true)) @:block 1482"];
n1480 -> n1481[style="dashed",color="gray",label="loop-head"];
n1480 -> n1482[style="dashed",color="gray",label="loop-body"];
n1480 -> n1489[style="dashed",color="gray",label="next"];
n1479 [shape=box,label="(1479)\nvar `1 = 0\nvar ` = insize"];
n1479 -> n1480[style="dashed",color="gray",label="merge"];
n1478 [shape=box,label="(1478)\nq = p\npsize = 0"];
n1478 -> n1479[style="dashed",color="gray",label="sub"];
n1478 -> n1490[style="dashed",color="gray",label="next"];
n1477 [shape=box,label="(1477)\nnmerges = nmerges + 1"];
n1476 [shape=box,label="(1476)"];
n1476 -> n1477[style="dashed",color="gray",label="sub"];
n1476 -> n1478[style="dashed",color="gray",label="next"];
n1475 [shape=box,label="(1475)\nbreak"];
n1474 [shape=box,label="(1474)\nvar _hx_tmp = ! ((p != null))\n@:cond-branch _hx_tmp"];
n1474 -> n1475[style="dashed",color="gray",label="then"];
n1474 -> n1476[style="dashed",color="gray",label="next"];
n1473 [shape=box,label="<loop-head>
(1473)"];
n1472 [shape=box,label="(1472)\nwhile ((true)) @:block 1474"];
n1472 -> n1473[style="dashed",color="gray",label="loop-head"];
n1472 -> n1474[style="dashed",color="gray",label="loop-body"];
n1472 -> n1530[style="dashed",color="gray",label="next"];
n1471 [shape=box,label="(1471)\np = list\nlist = null\ntail = null\nnmerges = 0"];
n1471 -> n1472[style="dashed",color="gray",label="merge"];
n1470 [shape=box,label="<loop-head>
(1470)"];
n1469 [shape=box,label="(1469)\nwhile ((true)) @:block 1471"];
n1469 -> n1470[style="dashed",color="gray",label="loop-head"];
n1469 -> n1471[style="dashed",color="gray",label="loop-body"];
n1469 -> n1533[style="dashed",color="gray",label="next"];
n1468 [shape=box,label="(1468)\nvar insize = 1\nvar nmerges\nvar psize = 0\nvar qsize = 0\nvar p\nvar q\nvar e\nvar tail"];
n1468 -> n1469[style="dashed",color="gray",label="merge"];
n1467 [shape=box,label="(1467)\nreturn"];
n1466 [shape=box,label="<function-end>
(1466)"];
n1465 [shape=box,label="<function-begin>
(1465)\nvar list = haxe.MainLoop.pending\nvar _hx_tmp = list == null\n@:cond-branch _hx_tmp"];
n1465 -> n1467[style="dashed",color="gray",label="then"];
n1465 -> n1468[style="dashed",color="gray",label="next"];
n1 [shape=box,label="<root>
(1)"];
}
