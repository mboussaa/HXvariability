// Generated by Haxe 3.3.0
package haxe.ds._HashMap;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class HashMap_Impl_
{
	public static <K, V> haxe.ds._HashMap.HashMapData<K, V> _new()
	{
		//line 35 "/usr/lib/haxe/std/haxe/ds/HashMap.hx"
		haxe.ds._HashMap.HashMapData<K, V> this1 = new haxe.ds._HashMap.HashMapData<K, V>();
		//line 35 "/usr/lib/haxe/std/haxe/ds/HashMap.hx"
		return ((haxe.ds._HashMap.HashMapData<K, V>) (this1) );
	}
	
	
	public static <K, V> void set(haxe.ds._HashMap.HashMapData<K, V> this1, K k, V v)
	{
		//line 43 "/usr/lib/haxe/std/haxe/ds/HashMap.hx"
		this1.keys.set(((int) (k.hashCode()) ), ((K) (k) ));
		//line 44 "/usr/lib/haxe/std/haxe/ds/HashMap.hx"
		this1.values.set(((int) (k.hashCode()) ), ((V) (v) ));
	}
	
	
	public static <K, V> java.lang.Object get(haxe.ds._HashMap.HashMapData<K, V> this1, K k)
	{
		//line 51 "/usr/lib/haxe/std/haxe/ds/HashMap.hx"
		return this1.values.get(((int) (k.hashCode()) ));
	}
	
	
	public static <K, V> boolean exists(haxe.ds._HashMap.HashMapData<K, V> this1, K k)
	{
		//line 58 "/usr/lib/haxe/std/haxe/ds/HashMap.hx"
		return this1.values.exists(((int) (k.hashCode()) ));
	}
	
	
	public static <K, V> boolean remove(haxe.ds._HashMap.HashMapData<K, V> this1, K k)
	{
		//line 65 "/usr/lib/haxe/std/haxe/ds/HashMap.hx"
		this1.values.remove(((int) (k.hashCode()) ));
		//line 66 "/usr/lib/haxe/std/haxe/ds/HashMap.hx"
		return this1.keys.remove(((int) (k.hashCode()) ));
	}
	
	
	public static <K, V> java.lang.Object keys(haxe.ds._HashMap.HashMapData<K, V> this1)
	{
		//line 73 "/usr/lib/haxe/std/haxe/ds/HashMap.hx"
		return this1.keys.iterator();
	}
	
	
	public static <K, V> java.lang.Object iterator(haxe.ds._HashMap.HashMapData<K, V> this1)
	{
		//line 80 "/usr/lib/haxe/std/haxe/ds/HashMap.hx"
		return this1.values.iterator();
	}
	
	
}


