// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.color._Xyz {
	public sealed class Xyz_Impl_ {
		
		static Xyz_Impl_() {
			unchecked {
				global::thx.color._Xyz.Xyz_Impl_.whiteReference = ((global::Array<double>) (new global::Array<double>(new double[]{0.95047, ((double) (1) ), 1.08883})) );
			}
		}
		
		
		public static global::Array<double> whiteReference;
		
		
		
		
		
		
		
		
		
		
		
		public static global::Array<double> toLab(global::Array<double> this1) {
			unchecked {
				global::haxe.lang.Function f = ( (( global::thx.color._Xyz.Xyz_Impl__toLab_105__Fun.__hx_current != null )) ? (global::thx.color._Xyz.Xyz_Impl__toLab_105__Fun.__hx_current) : (global::thx.color._Xyz.Xyz_Impl__toLab_105__Fun.__hx_current = ((global::thx.color._Xyz.Xyz_Impl__toLab_105__Fun) (new global::thx.color._Xyz.Xyz_Impl__toLab_105__Fun()) )) );
				double x1 = ( ((global::Array<double>) (this1) )[0] / ((global::Array<double>) (global::thx.color._Xyz.Xyz_Impl_.whiteReference) )[0] );
				double y1 = ( ((global::Array<double>) (this1) )[1] / ((global::Array<double>) (global::thx.color._Xyz.Xyz_Impl_.whiteReference) )[1] );
				double z1 = ( ((global::Array<double>) (this1) )[2] / ((global::Array<double>) (global::thx.color._Xyz.Xyz_Impl_.whiteReference) )[2] );
				double fy1 = ((double) (f.__hx_invoke1_f(y1, global::haxe.lang.Runtime.undefined)) );
				return ((global::Array<double>) (new global::Array<double>(new double[]{( ( 116 * fy1 ) - 16 ), ( 500 * (( ((double) (f.__hx_invoke1_f(x1, global::haxe.lang.Runtime.undefined)) ) - fy1 )) ), ( 200 * (( fy1 - ((double) (f.__hx_invoke1_f(z1, global::haxe.lang.Runtime.undefined)) ) )) )})) );
			}
		}
		
		
		public static global::Array<double> toHunterLab(global::Array<double> this1) {
			unchecked {
				return ((global::Array<double>) (new global::Array<double>(new double[]{( 10.0 * global::System.Math.Sqrt(((double) (((global::Array<double>) (this1) )[1]) )) ), ( (( ((global::Array<double>) (this1) )[1] != 0 )) ? (( 17.5 * (( (( ( 1.02 * ((global::Array<double>) (this1) )[0] ) - ((global::Array<double>) (this1) )[1] )) / global::System.Math.Sqrt(((double) (((global::Array<double>) (this1) )[1]) )) )) )) : (((double) (0) )) ), ( (( ((global::Array<double>) (this1) )[1] != 0 )) ? (( 7.0 * (( (( ((global::Array<double>) (this1) )[1] - ( .847 * ((global::Array<double>) (this1) )[2] ) )) / global::System.Math.Sqrt(((double) (((global::Array<double>) (this1) )[1]) )) )) )) : (((double) (0) )) )})) );
			}
		}
		
		
		public static global::Array<double> toYxy(global::Array<double> this1) {
			unchecked {
				double sum = ( ( ((global::Array<double>) (this1) )[0] + ((global::Array<double>) (this1) )[1] ) + ((global::Array<double>) (this1) )[2] );
				return ((global::Array<double>) (new global::Array<double>(new double[]{((global::Array<double>) (this1) )[1], ( (( sum == 0 )) ? (((double) (1) )) : (( ((global::Array<double>) (this1) )[0] / sum )) ), ( (( sum == 0 )) ? (((double) (1) )) : (( ((global::Array<double>) (this1) )[1] / sum )) )})) );
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx.color._Xyz {
	public class Xyz_Impl__toLab_105__Fun : global::haxe.lang.Function {
		
		public Xyz_Impl__toLab_105__Fun() : base(1, 1) {
		}
		
		
		public static global::thx.color._Xyz.Xyz_Impl__toLab_105__Fun __hx_current;
		
		public override double __hx_invoke1_f(double __fn_float1, object __fn_dyn1) {
			double t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((double) (__fn_float1) )) : (((double) (global::haxe.lang.Runtime.toDouble(__fn_dyn1)) )) );
			if (( t > 0.0088564516790356311 )) {
				return global::System.Math.Pow(((double) (t) ), ((double) (0.333333333333333315) ));
			}
			else {
				return ( ( 7.78703703703703543 * t ) + 0.137931034482758619 );
			}
			
		}
		
		
	}
}


