<?php

// Generated by Haxe 3.3.0
class thx_color_TestRoundTrip {
	public function __construct($i) {
		if(!php_Boot::$skip_constructor) {
		$this->x = $i;
		$this->tests = _hx_deref((new _hx_array(array((new _hx_array(array(0.05, 0.10, 0.15))), (new _hx_array(array(1, 0, 0))), (new _hx_array(array(0, 1, 0))), (new _hx_array(array(0.2, 0.2, 1))), (new _hx_array(array(0.9, 0.9, 1))), (new _hx_array(array(0.2, 0.4, 0.52)))))))->map(array(new _hx_lambda(array(), "thx_color_TestRoundTrip_0"), 'execute'));
	}}
	public $x;
	public $tests;
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return 'thx.color.TestRoundTrip'; }
}
function thx_color_TestRoundTrip_0($_) {
	{
		$tmp = thx_color__Rgbx_Rgbx_Impl_::toRgb($_);
		$tmp1 = thx_color__Rgbx_Rgbx_Impl_::toLab($_);
		$tmp2 = thx_color__Rgbx_Rgbx_Impl_::toLCh($_);
		$tmp3 = thx_color__Rgbx_Rgbx_Impl_::toCmyk($_);
		$tmp4 = thx_color__Rgbx_Rgbx_Impl_::toCubeHelixWithGamma($_, 1);
		$tmp5 = thx_color__Rgbx_Rgbx_Impl_::toHsl($_);
		$tmp6 = thx_color__Rgbx_Rgbx_Impl_::toHsv($_);
		$tmp7 = thx_color__Rgbx_Rgbx_Impl_::toHunterLab($_);
		$tmp8 = thx_color__Rgbx_Rgbx_Impl_::toXyz($_);
		return _hx_anonymous(array("rgbx" => $_, "rgb" => $tmp, "lab" => $tmp1, "lch" => $tmp2, "cmy" => thx_color__Rgbx_Rgbx_Impl_::toCmy($_), "cmyk" => $tmp3, "ch" => $tmp4, "g" => thx_color__Rgbx_Rgbx_Impl_::toGrey($_), "hsl" => $tmp5, "hsv" => $tmp6, "hl" => $tmp7, "xyz" => $tmp8, "yuv" => thx_color__Rgbx_Rgbx_Impl_::toYuv($_), "yxy" => thx_color__Rgbx_Rgbx_Impl_::toYxy($_)));
	}
}
