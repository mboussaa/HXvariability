<?php

// Generated by Haxe 3.3.0
class thx_fp__Writer_Writer_Impl_ {
	public function __construct(){}
	static function _new($t3) {
		return $t3;
	}
	static function repr($this1) {
		return $this1;
	}
	static function void($mw) {
		return thx_fp__Writer_Writer_Impl_::_new(_hx_anonymous(array("_0" => $mw, "_1" => thx__Monoid_Monoid_Impl_::get_zero($mw), "_2" => thx_Unit::$unit)));
	}
	static function pure($a, $mw) {
		return thx_fp__Writer_Writer_Impl_::_new(_hx_anonymous(array("_0" => $mw, "_1" => thx__Monoid_Monoid_Impl_::get_zero($mw), "_2" => $a)));
	}
	static function tell($w, $mw) {
		return thx_fp__Writer_Writer_Impl_::_new(_hx_anonymous(array("_0" => $mw, "_1" => $w, "_2" => thx_Unit::$unit)));
	}
	static function map($this1, $f) {
		$tmp = thx__Tuple_Tuple3_Impl_::map($this1, $f);
		return thx_fp__Writer_Writer_Impl_::_new($tmp);
	}
	static function ap($this1, $s2) {
		return thx_fp__Writer_Writer_Impl_::flatMap($this1, array(new _hx_lambda(array(&$s2), "thx_fp__Writer_Writer_Impl__0"), 'execute'));
	}
	static function flatMap($this1, $f) {
		$this2 = call_user_func_array($f, array($this1->_2));
		$_1 = thx__Monoid_Monoid_Impl_::append($this1->_0, $this1->_1, $this2->_1);
		return thx_fp__Writer_Writer_Impl_::_new(_hx_anonymous(array("_0" => $this1->_0, "_1" => $_1, "_2" => $this2->_2)));
	}
	static function log($this1, $w) {
		$_1 = thx__Monoid_Monoid_Impl_::append($this1->_0, $this1->_1, $w);
		return thx_fp__Writer_Writer_Impl_::_new(_hx_anonymous(array("_0" => $this1->_0, "_1" => $_1, "_2" => $this1->_2)));
	}
	static function then($this1, $next) {
		return thx_fp__Writer_Writer_Impl_::flatMap($this1, thx_fp_Functions::hconst($next));
	}
	static function foreachM($this1, $f) {
		$res0 = thx_fp__Writer_Writer_Impl_::flatMap($this1, $f);
		return thx_fp__Writer_Writer_Impl_::_new(_hx_anonymous(array("_0" => $this1->_0, "_1" => $res0->_1, "_2" => $this1->_2)));
	}
	static function voided($this1) {
		$tmp = thx__Tuple_Tuple3_Impl_::map($this1, thx_fp_Functions::hconst(thx_Unit::$unit));
		return thx_fp__Writer_Writer_Impl_::_new($tmp);
	}
	static function run($this1) {
		return _hx_anonymous(array("_0" => $this1->_1, "_1" => $this1->_2));
	}
	static function runLog($this1) {
		return $this1->_1;
	}
	static function ap2($f, $s1, $s2) {
		$f1 = thx_Functions2::curry($f);
		$tmp = thx__Tuple_Tuple3_Impl_::map($s1, $f1);
		$s21 = thx_fp__Writer_Writer_Impl_::_new($tmp);
		return thx_fp__Writer_Writer_Impl_::flatMap($s2, array(new _hx_lambda(array(&$s21), "thx_fp__Writer_Writer_Impl__1"), 'execute'));
	}
	static function ap3($f, $s1, $s2, $s3) {
		$tmp = thx_Functions3::curry($f);
		$tmp1 = thx_fp__Writer_Writer_Impl_::ap2($tmp, $s1, $s2);
		return thx_fp__Writer_Writer_Impl_::ap($s3, $tmp1);
	}
	static function ap4($f, $s1, $s2, $s3, $s4) {
		$f1 = thx_Functions4::curry($f);
		$tmp = thx_Functions3::curry($f1);
		$tmp1 = thx_fp__Writer_Writer_Impl_::ap2($tmp, $s1, $s2);
		$tmp2 = thx_fp__Writer_Writer_Impl_::ap($s3, $tmp1);
		return thx_fp__Writer_Writer_Impl_::ap($s4, $tmp2);
	}
	static function ap5($f, $s1, $s2, $s3, $s4, $s5) {
		$f1 = thx_Functions5::curry($f);
		$f2 = thx_Functions4::curry($f1);
		$tmp = thx_Functions3::curry($f2);
		$tmp1 = thx_fp__Writer_Writer_Impl_::ap2($tmp, $s1, $s2);
		$tmp2 = thx_fp__Writer_Writer_Impl_::ap($s3, $tmp1);
		$tmp3 = thx_fp__Writer_Writer_Impl_::ap($s4, $tmp2);
		return thx_fp__Writer_Writer_Impl_::ap($s5, $tmp3);
	}
	static function ap6($f, $s1, $s2, $s3, $s4, $s5, $s6) {
		$f1 = thx_Functions6::curry($f);
		$f2 = thx_Functions5::curry($f1);
		$f3 = thx_Functions4::curry($f2);
		$tmp = thx_Functions3::curry($f3);
		$tmp1 = thx_fp__Writer_Writer_Impl_::ap2($tmp, $s1, $s2);
		$tmp2 = thx_fp__Writer_Writer_Impl_::ap($s3, $tmp1);
		$tmp3 = thx_fp__Writer_Writer_Impl_::ap($s4, $tmp2);
		$tmp4 = thx_fp__Writer_Writer_Impl_::ap($s5, $tmp3);
		return thx_fp__Writer_Writer_Impl_::ap($s6, $tmp4);
	}
	static function ap7($f, $s1, $s2, $s3, $s4, $s5, $s6, $s7) {
		$f1 = thx_Functions7::curry($f);
		$f2 = thx_Functions6::curry($f1);
		$f3 = thx_Functions5::curry($f2);
		$f4 = thx_Functions4::curry($f3);
		$tmp = thx_Functions3::curry($f4);
		$tmp1 = thx_fp__Writer_Writer_Impl_::ap2($tmp, $s1, $s2);
		$tmp2 = thx_fp__Writer_Writer_Impl_::ap($s3, $tmp1);
		$tmp3 = thx_fp__Writer_Writer_Impl_::ap($s4, $tmp2);
		$tmp4 = thx_fp__Writer_Writer_Impl_::ap($s5, $tmp3);
		$tmp5 = thx_fp__Writer_Writer_Impl_::ap($s6, $tmp4);
		return thx_fp__Writer_Writer_Impl_::ap($s7, $tmp5);
	}
	static function ap8($f, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8) {
		$f1 = thx_Functions8::curry($f);
		$f2 = thx_Functions7::curry($f1);
		$f3 = thx_Functions6::curry($f2);
		$f4 = thx_Functions5::curry($f3);
		$f5 = thx_Functions4::curry($f4);
		$tmp = thx_Functions3::curry($f5);
		$tmp1 = thx_fp__Writer_Writer_Impl_::ap2($tmp, $s1, $s2);
		$tmp2 = thx_fp__Writer_Writer_Impl_::ap($s3, $tmp1);
		$tmp3 = thx_fp__Writer_Writer_Impl_::ap($s4, $tmp2);
		$tmp4 = thx_fp__Writer_Writer_Impl_::ap($s5, $tmp3);
		$tmp5 = thx_fp__Writer_Writer_Impl_::ap($s6, $tmp4);
		$tmp6 = thx_fp__Writer_Writer_Impl_::ap($s7, $tmp5);
		return thx_fp__Writer_Writer_Impl_::ap($s8, $tmp6);
	}
	function __toString() { return 'thx.fp._Writer.Writer_Impl_'; }
}
function thx_fp__Writer_Writer_Impl__0(&$s2, $a) {
	{
		$tmp = thx__Tuple_Tuple3_Impl_::map($s2, array(new _hx_lambda(array(&$a), "thx_fp__Writer_Writer_Impl__2"), 'execute'));
		return thx_fp__Writer_Writer_Impl_::_new($tmp);
	}
}
function thx_fp__Writer_Writer_Impl__1(&$s21, $a) {
	{
		$tmp1 = thx__Tuple_Tuple3_Impl_::map($s21, array(new _hx_lambda(array(&$a), "thx_fp__Writer_Writer_Impl__3"), 'execute'));
		return thx_fp__Writer_Writer_Impl_::_new($tmp1);
	}
}
function thx_fp__Writer_Writer_Impl__2(&$a, $f) {
	{
		return call_user_func_array($f, array($a));
	}
}
function thx_fp__Writer_Writer_Impl__3(&$a, $f2) {
	{
		return call_user_func_array($f2, array($a));
	}
}
