// Generated by Haxe 3.3.0
package thx.fp;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestList extends haxe.lang.HxObject
{
	public TestList(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestList(int i)
	{
		//line 10 "/HXvariability/core/test/thx/fp/TestList.hx"
		thx.fp.TestList.__hx_ctor_thx_fp_TestList(this, i);
	}
	
	
	public static void __hx_ctor_thx_fp_TestList(thx.fp.TestList __temp_me118, int i)
	{
		//line 11 "/HXvariability/core/test/thx/fp/TestList.hx"
		__temp_me118.x = i;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
		return new thx.fp.TestList(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
		return new thx.fp.TestList(((int) (haxe.lang.Runtime.toInt(arr.__get(0))) ));
	}
	
	
	public int x;
	
	public void testFoldLeft()
	{
		//line 15 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g1 = 0;
		//line 15 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g = this.x;
		//line 15 "/HXvariability/core/test/thx/fp/TestList.hx"
		while (( _g1 < _g ))
		{
			//line 15 "/HXvariability/core/test/thx/fp/TestList.hx"
			 ++ _g1;
			//line 16 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl list = thx.fp.ListImpl.Cons(1, thx.fp.ListImpl.Cons(2, thx.fp.ListImpl.Cons(3, thx.fp.ListImpl.Nil)));
			//line 17 "/HXvariability/core/test/thx/fp/TestList.hx"
			utest.Assert.equals(6, ((int) (haxe.lang.Runtime.toInt(thx.fp._List.List_Impl_.foldLeft(((thx.fp.ListImpl) (list) ), ((java.lang.Object) (0) ), ((haxe.lang.Function) (( (( thx.fp.TestList_testFoldLeft_17__Fun.__hx_current != null )) ? (thx.fp.TestList_testFoldLeft_17__Fun.__hx_current) : (thx.fp.TestList_testFoldLeft_17__Fun.__hx_current = ((thx.fp.TestList_testFoldLeft_17__Fun) (new thx.fp.TestList_testFoldLeft_17__Fun()) )) )) )))) ), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp.TestList", "TestList.hx", "testFoldLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (17) )) )}));
			//line 19 "/HXvariability/core/test/thx/fp/TestList.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{1, 2, 3}), ((haxe.root.Array<java.lang.Object>) (thx.fp._List.List_Impl_.foldLeft(((thx.fp.ListImpl) (list) ), ((java.lang.Object) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{})) ), ((haxe.lang.Function) (( (( thx.fp.TestList_testFoldLeft_19__Fun.__hx_current != null )) ? (thx.fp.TestList_testFoldLeft_19__Fun.__hx_current) : (thx.fp.TestList_testFoldLeft_19__Fun.__hx_current = ((thx.fp.TestList_testFoldLeft_19__Fun) (new thx.fp.TestList_testFoldLeft_19__Fun()) )) )) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp.TestList", "TestList.hx", "testFoldLeft"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (19) )) )}));
		}
		
	}
	
	
	public void testToArray()
	{
		//line 26 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g1 = 0;
		//line 26 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g = this.x;
		//line 26 "/HXvariability/core/test/thx/fp/TestList.hx"
		while (( _g1 < _g ))
		{
			//line 26 "/HXvariability/core/test/thx/fp/TestList.hx"
			 ++ _g1;
			//line 27 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl list = thx.fp.ListImpl.Cons(1, thx.fp.ListImpl.Cons(2, thx.fp.ListImpl.Cons(3, thx.fp.ListImpl.Nil)));
			//line 28 "/HXvariability/core/test/thx/fp/TestList.hx"
			utest.Assert.same(new haxe.root.Array(new java.lang.Object[]{1, 2, 3}), ((haxe.root.Array<java.lang.Object>) (thx.fp._List.List_Impl_.foldLeft(((thx.fp.ListImpl) (list) ), ((java.lang.Object) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{})) ), ((haxe.lang.Function) (( (( thx.fp.TestList_testToArray_28__Fun.__hx_current != null )) ? (thx.fp.TestList_testToArray_28__Fun.__hx_current) : (thx.fp.TestList_testToArray_28__Fun.__hx_current = ((thx.fp.TestList_testToArray_28__Fun) (new thx.fp.TestList_testToArray_28__Fun()) )) )) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp.TestList", "TestList.hx", "testToArray"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (28) )) )}));
		}
		
	}
	
	
	public void testIntersperse()
	{
		//line 32 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g1 = 0;
		//line 32 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g = this.x;
		//line 32 "/HXvariability/core/test/thx/fp/TestList.hx"
		while (( _g1 < _g ))
		{
			//line 32 "/HXvariability/core/test/thx/fp/TestList.hx"
			 ++ _g1;
			//line 33 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl list = thx.fp.ListImpl.Cons(1, thx.fp.ListImpl.Cons(2, thx.fp.ListImpl.Cons(3, thx.fp.ListImpl.Nil)));
			//line 33 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl interspersed = ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.intersperse(((thx.fp.ListImpl) (list) ), ((java.lang.Object) (0) ))) );
			//line 35 "/HXvariability/core/test/thx/fp/TestList.hx"
			utest.Assert.same(thx.fp.ListImpl.Cons(1, thx.fp.ListImpl.Cons(0, thx.fp.ListImpl.Cons(2, thx.fp.ListImpl.Cons(0, thx.fp.ListImpl.Cons(3, thx.fp.ListImpl.Nil))))), interspersed, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp.TestList", "TestList.hx", "testIntersperse"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (35) )) )}));
		}
		
	}
	
	
	public void testFromArray()
	{
		//line 39 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g1 = 0;
		//line 39 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g = this.x;
		//line 39 "/HXvariability/core/test/thx/fp/TestList.hx"
		while (( _g1 < _g ))
		{
			//line 39 "/HXvariability/core/test/thx/fp/TestList.hx"
			 ++ _g1;
			//line 40 "/HXvariability/core/test/thx/fp/TestList.hx"
			haxe.root.Array<java.lang.Object> arr = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 3, 4});
			//line 41 "/HXvariability/core/test/thx/fp/TestList.hx"
			haxe.root.Array<java.lang.Object> _e = arr;
			//line 41 "/HXvariability/core/test/thx/fp/TestList.hx"
			utest.Assert.same(arr, ((haxe.root.Array<java.lang.Object>) (thx.fp._List.List_Impl_.foldLeft(((thx.fp.ListImpl) ((new thx.fp.TestList_testFromArray_41__Fun_0(_e)).__hx_invoke2_o(0.0, ( (( thx.fp.TestList_testFromArray_41__Fun_1.__hx_current != null )) ? (thx.fp.TestList_testFromArray_41__Fun_1.__hx_current) : (thx.fp.TestList_testFromArray_41__Fun_1.__hx_current = ((thx.fp.TestList_testFromArray_41__Fun_1) (new thx.fp.TestList_testFromArray_41__Fun_1()) )) ), 0.0, ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.empty()) ))) ), ((java.lang.Object) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{})) ), ((haxe.lang.Function) (( (( thx.fp.TestList_testFromArray_41__Fun.__hx_current != null )) ? (thx.fp.TestList_testFromArray_41__Fun.__hx_current) : (thx.fp.TestList_testFromArray_41__Fun.__hx_current = ((thx.fp.TestList_testFromArray_41__Fun) (new thx.fp.TestList_testFromArray_41__Fun()) )) )) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp.TestList", "TestList.hx", "testFromArray"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (41) )) )}));
		}
		
	}
	
	
	public void testConcat()
	{
		//line 45 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g1 = 0;
		//line 45 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g = this.x;
		//line 45 "/HXvariability/core/test/thx/fp/TestList.hx"
		while (( _g1 < _g ))
		{
			//line 45 "/HXvariability/core/test/thx/fp/TestList.hx"
			 ++ _g1;
			//line 46 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl l1 = thx.fp.ListImpl.Cons(1, thx.fp.ListImpl.Cons(2, thx.fp.ListImpl.Nil));
			//line 46 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl l2 = thx.fp.ListImpl.Cons(3, thx.fp.ListImpl.Cons(4, thx.fp.ListImpl.Nil));
			//line 46 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl l = ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.concat(((thx.fp.ListImpl) (l1) ), ((thx.fp.ListImpl) (l2) ))) );
			//line 49 "/HXvariability/core/test/thx/fp/TestList.hx"
			utest.Assert.same(thx.fp.ListImpl.Cons(1, thx.fp.ListImpl.Cons(2, thx.fp.ListImpl.Cons(3, thx.fp.ListImpl.Cons(4, thx.fp.ListImpl.Nil)))), l, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp.TestList", "TestList.hx", "testConcat"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (49) )) )}));
		}
		
	}
	
	
	public void testToString()
	{
		//line 53 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g1 = 0;
		//line 53 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g = this.x;
		//line 53 "/HXvariability/core/test/thx/fp/TestList.hx"
		while (( _g1 < _g ))
		{
			//line 53 "/HXvariability/core/test/thx/fp/TestList.hx"
			 ++ _g1;
			//line 54 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl list = thx.fp.ListImpl.Cons(1, thx.fp.ListImpl.Cons(2, thx.fp.ListImpl.Cons(3, thx.fp.ListImpl.Nil)));
			//line 55 "/HXvariability/core/test/thx/fp/TestList.hx"
			utest.Assert.same("[1,2,3]", thx.fp.IntList.toString(list), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp.TestList", "TestList.hx", "testToString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
			//line 57 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl list1 = thx.fp.ListImpl.Cons("1", thx.fp.ListImpl.Cons("2", thx.fp.ListImpl.Cons("3", thx.fp.ListImpl.Nil)));
			//line 58 "/HXvariability/core/test/thx/fp/TestList.hx"
			utest.Assert.same("[1,2,3]", thx.fp.StringList.toString(list1), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp.TestList", "TestList.hx", "testToString"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (58) )) )}));
		}
		
	}
	
	
	public void testMap()
	{
		//line 62 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g1 = 0;
		//line 62 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g = this.x;
		//line 62 "/HXvariability/core/test/thx/fp/TestList.hx"
		while (( _g1 < _g ))
		{
			//line 62 "/HXvariability/core/test/thx/fp/TestList.hx"
			 ++ _g1;
			//line 63 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl list = thx.fp.ListImpl.Cons(1, thx.fp.ListImpl.Cons(2, thx.fp.ListImpl.Cons(3, thx.fp.ListImpl.Nil)));
			//line 64 "/HXvariability/core/test/thx/fp/TestList.hx"
			utest.Assert.same(thx.fp.ListImpl.Cons(2, thx.fp.ListImpl.Cons(4, thx.fp.ListImpl.Cons(6, thx.fp.ListImpl.Nil))), ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.map(((thx.fp.ListImpl) (list) ), ((haxe.lang.Function) (( (( thx.fp.TestList_testMap_64__Fun.__hx_current != null )) ? (thx.fp.TestList_testMap_64__Fun.__hx_current) : (thx.fp.TestList_testMap_64__Fun.__hx_current = ((thx.fp.TestList_testMap_64__Fun) (new thx.fp.TestList_testMap_64__Fun()) )) )) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp.TestList", "TestList.hx", "testMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (64) )) )}));
		}
		
	}
	
	
	public void testFlatMap()
	{
		//line 68 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g1 = 0;
		//line 68 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g = this.x;
		//line 68 "/HXvariability/core/test/thx/fp/TestList.hx"
		while (( _g1 < _g ))
		{
			//line 68 "/HXvariability/core/test/thx/fp/TestList.hx"
			int i = _g1++;
			//line 69 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl list = thx.fp.ListImpl.Cons(1, thx.fp.ListImpl.Cons(2, thx.fp.ListImpl.Cons(3, thx.fp.ListImpl.Nil)));
			//line 70 "/HXvariability/core/test/thx/fp/TestList.hx"
			haxe.lang.Function[] map = new haxe.lang.Function[]{null};
			//line 70 "/HXvariability/core/test/thx/fp/TestList.hx"
			map[0] = new thx.fp.TestList_testFlatMap_70__Fun(map);
			//line 70 "/HXvariability/core/test/thx/fp/TestList.hx"
			haxe.lang.Function map1 = map[0];
			//line 76 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl slist = ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.flatMap(((thx.fp.ListImpl) (list) ), ((haxe.lang.Function) (map1) ))) );
			//line 77 "/HXvariability/core/test/thx/fp/TestList.hx"
			utest.Assert.same(thx.fp.ListImpl.Cons(1, thx.fp.ListImpl.Cons(2, thx.fp.ListImpl.Cons(1, thx.fp.ListImpl.Cons(3, thx.fp.ListImpl.Cons(2, thx.fp.ListImpl.Cons(1, thx.fp.ListImpl.Nil)))))), slist, null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp.TestList", "TestList.hx", "testFlatMap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (77) )) )}));
		}
		
	}
	
	
	public void testZip5Ap()
	{
		//line 82 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g1 = 0;
		//line 82 "/HXvariability/core/test/thx/fp/TestList.hx"
		int _g = this.x;
		//line 82 "/HXvariability/core/test/thx/fp/TestList.hx"
		while (( _g1 < _g ))
		{
			//line 82 "/HXvariability/core/test/thx/fp/TestList.hx"
			 ++ _g1;
			//line 83 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl tmp = ((thx.fp.ListImpl) (thx.Arrays.reduceRight(((haxe.root.Array<java.lang.String>) (new haxe.root.Array<java.lang.String>(new java.lang.String[]{"a", "b", "c"})) ), ((haxe.lang.Function) (( (( thx.fp.TestList_testZip5Ap_83__Fun.__hx_current != null )) ? (thx.fp.TestList_testZip5Ap_83__Fun.__hx_current) : (thx.fp.TestList_testZip5Ap_83__Fun.__hx_current = ((thx.fp.TestList_testZip5Ap_83__Fun) (new thx.fp.TestList_testZip5Ap_83__Fun()) )) )) ), ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.empty()) ))) );
			//line 84 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl tmp1 = ((thx.fp.ListImpl) (thx.Arrays.reduceRight(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2})) )) ), ((haxe.lang.Function) (( (( thx.fp.TestList_testZip5Ap_84__Fun.__hx_current != null )) ? (thx.fp.TestList_testZip5Ap_84__Fun.__hx_current) : (thx.fp.TestList_testZip5Ap_84__Fun.__hx_current = ((thx.fp.TestList_testZip5Ap_84__Fun) (new thx.fp.TestList_testZip5Ap_84__Fun()) )) )) ), ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.empty()) ))) );
			//line 85 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl tmp2 = ((thx.fp.ListImpl) (thx.Arrays.reduceRight(((haxe.root.Array<java.lang.String>) (new haxe.root.Array<java.lang.String>(new java.lang.String[]{"x", "y", "z"})) ), ((haxe.lang.Function) (( (( thx.fp.TestList_testZip5Ap_85__Fun.__hx_current != null )) ? (thx.fp.TestList_testZip5Ap_85__Fun.__hx_current) : (thx.fp.TestList_testZip5Ap_85__Fun.__hx_current = ((thx.fp.TestList_testZip5Ap_85__Fun) (new thx.fp.TestList_testZip5Ap_85__Fun()) )) )) ), ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.empty()) ))) );
			//line 86 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl tmp3 = ((thx.fp.ListImpl) (thx.Arrays.reduceRight(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{3, 4})) )) ), ((haxe.lang.Function) (( (( thx.fp.TestList_testZip5Ap_86__Fun.__hx_current != null )) ? (thx.fp.TestList_testZip5Ap_86__Fun.__hx_current) : (thx.fp.TestList_testZip5Ap_86__Fun.__hx_current = ((thx.fp.TestList_testZip5Ap_86__Fun) (new thx.fp.TestList_testZip5Ap_86__Fun()) )) )) ), ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.empty()) ))) );
			//line 87 "/HXvariability/core/test/thx/fp/TestList.hx"
			thx.fp.ListImpl tmp4 = ((thx.fp.ListImpl) (thx.Arrays.reduceRight(((haxe.root.Array<java.lang.Object>) (((haxe.root.Array) (new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{true, false, true})) )) ), ((haxe.lang.Function) (( (( thx.fp.TestList_testZip5Ap_87__Fun.__hx_current != null )) ? (thx.fp.TestList_testZip5Ap_87__Fun.__hx_current) : (thx.fp.TestList_testZip5Ap_87__Fun.__hx_current = ((thx.fp.TestList_testZip5Ap_87__Fun) (new thx.fp.TestList_testZip5Ap_87__Fun()) )) )) ), ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.empty()) ))) );
			//line 89 "/HXvariability/core/test/thx/fp/TestList.hx"
			utest.Assert.same(((thx.fp.ListImpl) (thx.Arrays.reduceRight(((haxe.root.Array<java.lang.String>) (new haxe.root.Array<java.lang.String>(new java.lang.String[]{"a1x3true", "b2y4false"})) ), ((haxe.lang.Function) (( (( thx.fp.TestList_testZip5Ap_89__Fun_0.__hx_current != null )) ? (thx.fp.TestList_testZip5Ap_89__Fun_0.__hx_current) : (thx.fp.TestList_testZip5Ap_89__Fun_0.__hx_current = ((thx.fp.TestList_testZip5Ap_89__Fun_0) (new thx.fp.TestList_testZip5Ap_89__Fun_0()) )) )) ), ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.empty()) ))) ), ((thx.fp.ListImpl) (thx.fp._List.List_Impl_.zip5Ap(((haxe.lang.Function) (( (( thx.fp.TestList_testZip5Ap_89__Fun.__hx_current != null )) ? (thx.fp.TestList_testZip5Ap_89__Fun.__hx_current) : (thx.fp.TestList_testZip5Ap_89__Fun.__hx_current = ((thx.fp.TestList_testZip5Ap_89__Fun) (new thx.fp.TestList_testZip5Ap_89__Fun()) )) )) ), ((thx.fp.ListImpl) (tmp) ), ((thx.fp.ListImpl) (tmp1) ), ((thx.fp.ListImpl) (tmp2) ), ((thx.fp.ListImpl) (tmp3) ), ((thx.fp.ListImpl) (tmp4) ))) ), null, null, null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"thx.fp.TestList", "TestList.hx", "testZip5Ap"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (89) )) )}));
		}
		
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
		{
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			boolean __temp_executeDef1 = true;
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("x")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						this.x = ((int) (value) );
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return value;
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
			}
			
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			if (__temp_executeDef1) 
			{
				//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
		{
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			boolean __temp_executeDef1 = true;
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("x")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						this.x = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return value;
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
			}
			
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			if (__temp_executeDef1) 
			{
				//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
		{
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			boolean __temp_executeDef1 = true;
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			switch (field.hashCode())
			{
				case 1917883317:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testZip5Ap")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testZip5Ap")) );
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case 120:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("x")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return this.x;
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case -1171441103:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testFlatMap")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFlatMap")) );
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case 1007693402:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testFoldLeft")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFoldLeft")) );
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case -1422473366:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testMap")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testMap")) );
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case -1574980692:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testToArray")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToArray")) );
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case -1062581986:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testToString")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testToString")) );
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case 1711521670:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testIntersperse")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testIntersperse")) );
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case 1264939590:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testConcat")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testConcat")) );
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case 722633821:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testFromArray")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testFromArray")) );
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
			}
			
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			if (__temp_executeDef1) 
			{
				//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
		{
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			boolean __temp_executeDef1 = true;
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			switch (field.hashCode())
			{
				case 120:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("x")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						return ((double) (this.x) );
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
			}
			
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			if (__temp_executeDef1) 
			{
				//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
		{
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			boolean __temp_executeDef1 = true;
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			switch (field.hashCode())
			{
				case 1917883317:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testZip5Ap")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						this.testZip5Ap();
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case 1007693402:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testFoldLeft")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						this.testFoldLeft();
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case -1171441103:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testFlatMap")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						this.testFlatMap();
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case -1574980692:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testToArray")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						this.testToArray();
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case -1422473366:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testMap")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						this.testMap();
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case 1711521670:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testIntersperse")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						this.testIntersperse();
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case -1062581986:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testToString")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						this.testToString();
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case 722633821:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testFromArray")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						this.testFromArray();
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
				case 1264939590:
				{
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					if (field.equals("testConcat")) 
					{
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						__temp_executeDef1 = false;
						//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
						this.testConcat();
					}
					
					//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
					break;
				}
				
				
			}
			
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			if (__temp_executeDef1) 
			{
				//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
		baseArr.push("x");
		//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
		{
			//line 8 "/HXvariability/core/test/thx/fp/TestList.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


