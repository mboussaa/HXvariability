<?php

// Generated by Haxe 3.3.0
class DateTools {
	public function __construct(){}
	static function format($d, $f) {
		return strftime($f, $d->__t);
	}
	static function delta($d, $t) {
		$tmp = $d->getTime();
		return Date::fromTime($tmp + $t);
	}
	static $DAYS_OF_MONTH;
	static function getMonthDays($d) {
		$month = $d->getMonth();
		$year = $d->getFullYear();
		if($month !== 1) {
			return DateTools::$DAYS_OF_MONTH[$month];
		}
		$isB = null;
		$tmp = null;
		if(_hx_mod($year, 4) === 0) {
			$tmp = _hx_mod($year, 100) !== 0;
		} else {
			$tmp = false;
		}
		if(!$tmp) {
			$isB = _hx_mod($year, 400) === 0;
		} else {
			$isB = true;
		}
		if($isB) {
			return 29;
		} else {
			return 28;
		}
	}
	static function seconds($n) {
		return $n * 1000.0;
	}
	static function minutes($n) {
		return $n * 60.0 * 1000.0;
	}
	static function hours($n) {
		return $n * 60.0 * 60.0 * 1000.0;
	}
	static function days($n) {
		return $n * 24.0 * 60.0 * 60.0 * 1000.0;
	}
	static function parse($t) {
		$s = $t / 1000;
		$m = $s / 60;
		$h = $m / 60;
		$tmp = _hx_mod($t, 1000);
		$tmp1 = Std::int(_hx_mod($s, 60));
		$tmp2 = Std::int(_hx_mod($m, 60));
		$tmp3 = Std::int(_hx_mod($h, 24));
		$tmp4 = Std::int($h / 24);
		return _hx_anonymous(array("ms" => $tmp, "seconds" => $tmp1, "minutes" => $tmp2, "hours" => $tmp3, "days" => $tmp4));
	}
	static function make($o) {
		return $o->ms + 1000.0 * ($o->seconds + 60.0 * ($o->minutes + 60.0 * ($o->hours + 24.0 * $o->days)));
	}
	static function makeUtc($year, $month, $day, $hour, $min, $sec) {
		$tmp = gmmktime($hour, $min, $sec, $month + 1, $day, $year);
		return $tmp * 1000;
	}
	function __toString() { return 'DateTools'; }
}
DateTools::$DAYS_OF_MONTH = (new _hx_array(array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)));
