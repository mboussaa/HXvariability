// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace thx {
	public class TestDateTime : global::haxe.lang.HxObject {
		
		public TestDateTime(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TestDateTime(int i) {
			global::thx.TestDateTime.__hx_ctor_thx_TestDateTime(this, i);
		}
		
		
		public static void __hx_ctor_thx_TestDateTime(global::thx.TestDateTime __temp_me39, int i) {
			unchecked {
				__temp_me39.x = i;
				__temp_me39.offset = global::thx._Time.Time_Impl_.create(-6, new global::haxe.lang.Null<int>(0, true), new global::haxe.lang.Null<int>(0, true), new global::haxe.lang.Null<int>(0, true));
				long offset = __temp_me39.offset;
				global::Array<long> this1 = new global::Array<long>(new long[]{((long) (global::thx._DateTimeUtc.DateTimeUtc_Impl_.create(2015, 7, 26, new global::haxe.lang.Null<int>(21, true), new global::haxe.lang.Null<int>(40, true), new global::haxe.lang.Null<int>(30, true), new global::haxe.lang.Null<int>(0, true))) ), ((long) (offset) )});
				__temp_me39.date = ((global::Array<long>) (new global::Array<long>(new long[]{((long) (global::thx._DateTimeUtc.DateTimeUtc_Impl_.fromInt64(((long) (( ((long) (((global::Array<long>) (this1) )[0]) ) - ((long) (offset) ) )) ))) ), ((long) (((global::Array<long>) (this1) )[1]) )})) );
				long offset1 = __temp_me39.offset;
				global::Array<long> this2 = new global::Array<long>(new long[]{((long) (global::thx._DateTimeUtc.DateTimeUtc_Impl_.create(2015, 7, 27, new global::haxe.lang.Null<int>(16, true), new global::haxe.lang.Null<int>(40, true), new global::haxe.lang.Null<int>(30, true), new global::haxe.lang.Null<int>(0, true))) ), ((long) (offset1) )});
				__temp_me39.tomorrow = ((global::Array<long>) (new global::Array<long>(new long[]{((long) (global::thx._DateTimeUtc.DateTimeUtc_Impl_.fromInt64(((long) (( ((long) (((global::Array<long>) (this2) )[0]) ) - ((long) (offset1) ) )) ))) ), ((long) (((global::Array<long>) (this2) )[1]) )})) );
				long offset2 = global::thx._Time.Time_Impl_.zero;
				global::Array<long> this3 = new global::Array<long>(new long[]{((long) (global::thx._DateTimeUtc.DateTimeUtc_Impl_.create(2015, 7, 27, new global::haxe.lang.Null<int>(3, true), new global::haxe.lang.Null<int>(40, true), new global::haxe.lang.Null<int>(30, true), new global::haxe.lang.Null<int>(0, true))) ), ((long) (offset2) )});
				__temp_me39.dateutc = ((global::Array<long>) (new global::Array<long>(new long[]{((long) (global::thx._DateTimeUtc.DateTimeUtc_Impl_.fromInt64(((long) (( ((long) (((global::Array<long>) (this3) )[0]) ) - ((long) (offset2) ) )) ))) ), ((long) (((global::Array<long>) (this3) )[1]) )})) );
			}
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::thx.TestDateTime(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::thx.TestDateTime(((int) (global::haxe.lang.Runtime.toInt(arr[0])) ));
		}
		
		
		public long offset;
		
		public global::Array<long> date;
		
		public global::Array<long> tomorrow;
		
		public global::Array<long> dateutc;
		
		public int x;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 120:
					{
						this.x = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 120:
					{
						this.x = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 345466806:
					{
						this.dateutc = ((global::Array<long>) (global::Array<object>.__hx_cast<long>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 1018962181:
					{
						this.tomorrow = ((global::Array<long>) (global::Array<object>.__hx_cast<long>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 1113806382:
					{
						this.date = ((global::Array<long>) (global::Array<object>.__hx_cast<long>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 1614780307:
					{
						this.offset = ((long) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 120:
					{
						return this.x;
					}
					
					
					case 345466806:
					{
						return this.dateutc;
					}
					
					
					case 1018962181:
					{
						return this.tomorrow;
					}
					
					
					case 1113806382:
					{
						return this.date;
					}
					
					
					case 1614780307:
					{
						return this.offset;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 120:
					{
						return ((double) (this.x) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("x");
			baseArr.push("dateutc");
			baseArr.push("tomorrow");
			baseArr.push("date");
			baseArr.push("offset");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}


