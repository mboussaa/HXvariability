// Generated by Haxe 3.3.0
package _Map;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class Map_Impl_
{
	public static <K, V> void set(haxe.IMap<K, V> this1, K key, V value)
	{
		//line 73 "/usr/lib/haxe/std/Map.hx"
		this1.set(key, value);
	}
	
	
	public static <K, V> java.lang.Object get(haxe.IMap<K, V> this1, K key)
	{
		//line 90 "/usr/lib/haxe/std/Map.hx"
		return this1.get(key);
	}
	
	
	public static <K, V> boolean exists(haxe.IMap<K, V> this1, K key)
	{
		//line 97 "/usr/lib/haxe/std/Map.hx"
		return this1.exists(key);
	}
	
	
	public static <K, V> boolean remove(haxe.IMap<K, V> this1, K key)
	{
		//line 105 "/usr/lib/haxe/std/Map.hx"
		return this1.remove(key);
	}
	
	
	public static <K, V> java.lang.Object keys(haxe.IMap<K, V> this1)
	{
		//line 113 "/usr/lib/haxe/std/Map.hx"
		return this1.keys();
	}
	
	
	public static <K, V> java.lang.Object iterator(haxe.IMap<K, V> this1)
	{
		//line 122 "/usr/lib/haxe/std/Map.hx"
		return this1.iterator();
	}
	
	
	public static <K, V> java.lang.String toString(haxe.IMap<K, V> this1)
	{
		//line 131 "/usr/lib/haxe/std/Map.hx"
		return this1.toString();
	}
	
	
	public static <K, V> V arrayWrite(haxe.IMap<K, V> this1, K k, V v)
	{
		//line 135 "/usr/lib/haxe/std/Map.hx"
		this1.set(k, v);
		//line 136 "/usr/lib/haxe/std/Map.hx"
		return v;
	}
	
	
	public static <K, V> haxe.ds.StringMap<V> toStringMap(haxe.IMap<K, V> t)
	{
		//line 140 "/usr/lib/haxe/std/Map.hx"
		return new haxe.ds.StringMap<V>();
	}
	
	
	public static <K, V> haxe.ds.IntMap<V> toIntMap(haxe.IMap<K, V> t)
	{
		//line 144 "/usr/lib/haxe/std/Map.hx"
		return new haxe.ds.IntMap<V>();
	}
	
	
	public static <K, V> haxe.ds.EnumValueMap<K, V> toEnumValueMapMap(haxe.IMap<K, V> t)
	{
		//line 148 "/usr/lib/haxe/std/Map.hx"
		return new haxe.ds.EnumValueMap<K, V>();
	}
	
	
	public static <K, V> haxe.ds.ObjectMap<K, V> toObjectMap(haxe.IMap<K, V> t)
	{
		//line 152 "/usr/lib/haxe/std/Map.hx"
		return new haxe.ds.ObjectMap<K, V>();
	}
	
	
	public static <V> haxe.ds.StringMap<V> fromStringMap(haxe.ds.StringMap<V> map)
	{
		//line 156 "/usr/lib/haxe/std/Map.hx"
		return ((haxe.ds.StringMap<V>) (map) );
	}
	
	
	public static <V> haxe.ds.IntMap<V> fromIntMap(haxe.ds.IntMap<V> map)
	{
		//line 160 "/usr/lib/haxe/std/Map.hx"
		return ((haxe.ds.IntMap<V>) (map) );
	}
	
	
	public static <K, V> haxe.ds.ObjectMap<K, V> fromObjectMap(haxe.ds.ObjectMap<K, V> map)
	{
		//line 164 "/usr/lib/haxe/std/Map.hx"
		return ((haxe.ds.ObjectMap<K, V>) (map) );
	}
	
	
}


