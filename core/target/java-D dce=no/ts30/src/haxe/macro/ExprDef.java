// Generated by Haxe 3.3.0
package haxe.macro;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class ExprDef extends haxe.lang.ParamEnum
{
	public ExprDef(int index, java.lang.Object[] params)
	{
		//line 100 "/usr/lib/haxe/std/java/internal/HxObject.hx"
		super(index, params);
	}
	
	
	public static final java.lang.String[] __hx_constructs = new java.lang.String[]{"EConst", "EArray", "EBinop", "EField", "EParenthesis", "EObjectDecl", "EArrayDecl", "ECall", "ENew", "EUnop", "EVars", "EFunction", "EBlock", "EFor", "EIn", "EIf", "EWhile", "ESwitch", "ETry", "EReturn", "EBreak", "EContinue", "EUntyped", "EThrow", "ECast", "EDisplay", "EDisplayNew", "ETernary", "ECheckType", "EMeta"};
	
	public static haxe.macro.ExprDef EConst(haxe.macro.Constant c)
	{
		//line 341 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(0, new java.lang.Object[]{c});
	}
	
	
	public static haxe.macro.ExprDef EArray(java.lang.Object e1, java.lang.Object e2)
	{
		//line 346 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(1, new java.lang.Object[]{e1, e2});
	}
	
	
	public static haxe.macro.ExprDef EBinop(haxe.macro.Binop op, java.lang.Object e1, java.lang.Object e2)
	{
		//line 351 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(2, new java.lang.Object[]{op, e1, e2});
	}
	
	
	public static haxe.macro.ExprDef EField(java.lang.Object e, java.lang.String field)
	{
		//line 356 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(3, new java.lang.Object[]{e, field});
	}
	
	
	public static haxe.macro.ExprDef EParenthesis(java.lang.Object e)
	{
		//line 361 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(4, new java.lang.Object[]{e});
	}
	
	
	public static haxe.macro.ExprDef EObjectDecl(haxe.root.Array<java.lang.Object> fields)
	{
		//line 366 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(5, new java.lang.Object[]{fields});
	}
	
	
	public static haxe.macro.ExprDef EArrayDecl(haxe.root.Array<java.lang.Object> values)
	{
		//line 371 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(6, new java.lang.Object[]{values});
	}
	
	
	public static haxe.macro.ExprDef ECall(java.lang.Object e, haxe.root.Array<java.lang.Object> params)
	{
		//line 376 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(7, new java.lang.Object[]{e, params});
	}
	
	
	public static haxe.macro.ExprDef ENew(java.lang.Object t, haxe.root.Array<java.lang.Object> params)
	{
		//line 381 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(8, new java.lang.Object[]{t, params});
	}
	
	
	public static haxe.macro.ExprDef EUnop(haxe.macro.Unop op, boolean postFix, java.lang.Object e)
	{
		//line 394 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(9, new java.lang.Object[]{op, postFix, e});
	}
	
	
	public static haxe.macro.ExprDef EVars(haxe.root.Array<java.lang.Object> vars)
	{
		//line 399 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(10, new java.lang.Object[]{vars});
	}
	
	
	public static haxe.macro.ExprDef EFunction(java.lang.String name, java.lang.Object f)
	{
		//line 404 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(11, new java.lang.Object[]{name, f});
	}
	
	
	public static haxe.macro.ExprDef EBlock(haxe.root.Array<java.lang.Object> exprs)
	{
		//line 409 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(12, new java.lang.Object[]{exprs});
	}
	
	
	public static haxe.macro.ExprDef EFor(java.lang.Object it, java.lang.Object expr)
	{
		//line 414 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(13, new java.lang.Object[]{it, expr});
	}
	
	
	public static haxe.macro.ExprDef EIn(java.lang.Object e1, java.lang.Object e2)
	{
		//line 419 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(14, new java.lang.Object[]{e1, e2});
	}
	
	
	public static haxe.macro.ExprDef EIf(java.lang.Object econd, java.lang.Object eif, java.lang.Object eelse)
	{
		//line 424 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(15, new java.lang.Object[]{econd, eif, eelse});
	}
	
	
	public static haxe.macro.ExprDef EWhile(java.lang.Object econd, java.lang.Object e, boolean normalWhile)
	{
		//line 431 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(16, new java.lang.Object[]{econd, e, normalWhile});
	}
	
	
	public static haxe.macro.ExprDef ESwitch(java.lang.Object e, haxe.root.Array<java.lang.Object> cases, java.lang.Object edef)
	{
		//line 437 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(17, new java.lang.Object[]{e, cases, edef});
	}
	
	
	public static haxe.macro.ExprDef ETry(java.lang.Object e, haxe.root.Array<java.lang.Object> catches)
	{
		//line 442 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(18, new java.lang.Object[]{e, catches});
	}
	
	
	public static haxe.macro.ExprDef EReturn(java.lang.Object e)
	{
		//line 447 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(19, new java.lang.Object[]{e});
	}
	
	
	public static final haxe.macro.ExprDef EBreak = new haxe.macro.ExprDef(20, null);
	
	public static final haxe.macro.ExprDef EContinue = new haxe.macro.ExprDef(21, null);
	
	public static haxe.macro.ExprDef EUntyped(java.lang.Object e)
	{
		//line 462 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(22, new java.lang.Object[]{e});
	}
	
	
	public static haxe.macro.ExprDef EThrow(java.lang.Object e)
	{
		//line 467 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(23, new java.lang.Object[]{e});
	}
	
	
	public static haxe.macro.ExprDef ECast(java.lang.Object e, haxe.macro.ComplexType t)
	{
		//line 472 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(24, new java.lang.Object[]{e, t});
	}
	
	
	public static haxe.macro.ExprDef EDisplay(java.lang.Object e, boolean isCall)
	{
		//line 477 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(25, new java.lang.Object[]{e, isCall});
	}
	
	
	public static haxe.macro.ExprDef EDisplayNew(java.lang.Object t)
	{
		//line 482 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(26, new java.lang.Object[]{t});
	}
	
	
	public static haxe.macro.ExprDef ETernary(java.lang.Object econd, java.lang.Object eif, java.lang.Object eelse)
	{
		//line 487 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(27, new java.lang.Object[]{econd, eif, eelse});
	}
	
	
	public static haxe.macro.ExprDef ECheckType(java.lang.Object e, haxe.macro.ComplexType t)
	{
		//line 492 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(28, new java.lang.Object[]{e, t});
	}
	
	
	public static haxe.macro.ExprDef EMeta(java.lang.Object s, java.lang.Object e)
	{
		//line 497 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.ExprDef(29, new java.lang.Object[]{s, e});
	}
	
	
	@Override public java.lang.String getTag()
	{
		//line 337 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return haxe.macro.ExprDef.__hx_constructs[this.index];
	}
	
	
}


