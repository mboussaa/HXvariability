// Generated by Haxe 3.3.0
package haxe.macro;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class FieldAccess extends haxe.lang.ParamEnum
{
	public FieldAccess(int index, java.lang.Object[] params)
	{
		//line 100 "/usr/lib/haxe/std/java/internal/HxObject.hx"
		super(index, params);
	}
	
	
	public static final java.lang.String[] __hx_constructs = new java.lang.String[]{"FInstance", "FStatic", "FAnon", "FDynamic", "FClosure", "FEnum"};
	
	public static haxe.macro.FieldAccess FInstance(java.lang.Object c, haxe.root.Array<haxe.macro.Type> params, java.lang.Object cf)
	{
		//line 793 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.FieldAccess(0, new java.lang.Object[]{c, params, cf});
	}
	
	
	public static haxe.macro.FieldAccess FStatic(java.lang.Object c, java.lang.Object cf)
	{
		//line 798 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.FieldAccess(1, new java.lang.Object[]{c, cf});
	}
	
	
	public static haxe.macro.FieldAccess FAnon(java.lang.Object cf)
	{
		//line 803 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.FieldAccess(2, new java.lang.Object[]{cf});
	}
	
	
	public static haxe.macro.FieldAccess FDynamic(java.lang.String s)
	{
		//line 808 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.FieldAccess(3, new java.lang.Object[]{s});
	}
	
	
	public static haxe.macro.FieldAccess FClosure(java.lang.Object c, java.lang.Object cf)
	{
		//line 814 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.FieldAccess(4, new java.lang.Object[]{c, cf});
	}
	
	
	public static haxe.macro.FieldAccess FEnum(java.lang.Object e, java.lang.Object ef)
	{
		//line 819 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.FieldAccess(5, new java.lang.Object[]{e, ef});
	}
	
	
	@Override public java.lang.String getTag()
	{
		//line 788 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return haxe.macro.FieldAccess.__hx_constructs[this.index];
	}
	
	
}


