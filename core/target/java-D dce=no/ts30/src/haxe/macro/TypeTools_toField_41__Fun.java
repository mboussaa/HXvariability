// Generated by Haxe 3.3.0
package haxe.macro;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TypeTools_toField_41__Fun extends haxe.lang.Function
{
	public TypeTools_toField_41__Fun()
	{
		//line 42 "/usr/lib/haxe/std/haxe/macro/TypeTools.hx"
		super(2, 0);
	}
	
	
	public static haxe.macro.TypeTools_toField_41__Fun __hx_current;
	
	@Override public java.lang.Object __hx_invoke2_o(double __fn_float1, java.lang.Object __fn_dyn1, double __fn_float2, java.lang.Object __fn_dyn2)
	{
		//line 41 "/usr/lib/haxe/std/haxe/macro/TypeTools.hx"
		java.lang.String getOrSet = ( (( __fn_dyn2 == haxe.lang.Runtime.undefined )) ? (haxe.lang.Runtime.toString(__fn_float2)) : (haxe.lang.Runtime.toString(__fn_dyn2)) );
		//line 41 "/usr/lib/haxe/std/haxe/macro/TypeTools.hx"
		haxe.macro.VarAccess va = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (((haxe.macro.VarAccess) (((java.lang.Object) (__fn_float1) )) )) : (((haxe.macro.VarAccess) (__fn_dyn1) )) );
		//line 42 "/usr/lib/haxe/std/haxe/macro/TypeTools.hx"
		switch (va.index)
		{
			case 0:
			{
				//line 41 "/usr/lib/haxe/std/haxe/macro/TypeTools.hx"
				return "default";
			}
			
			
			case 1:
			{
				//line 41 "/usr/lib/haxe/std/haxe/macro/TypeTools.hx"
				return "null";
			}
			
			
			case 2:
			{
				//line 41 "/usr/lib/haxe/std/haxe/macro/TypeTools.hx"
				return "never";
			}
			
			
			case 3:
			{
				//line 46 "/usr/lib/haxe/std/haxe/macro/TypeTools.hx"
				throw haxe.lang.HaxeException.wrap("Invalid TAnonymous");
			}
			
			
			case 4:
			{
				//line 41 "/usr/lib/haxe/std/haxe/macro/TypeTools.hx"
				return getOrSet;
			}
			
			
			case 5:
			{
				//line 41 "/usr/lib/haxe/std/haxe/macro/TypeTools.hx"
				return "default";
			}
			
			
			case 6:
			{
				//line 41 "/usr/lib/haxe/std/haxe/macro/TypeTools.hx"
				return "default";
			}
			
			
		}
		
		//line 41 "/usr/lib/haxe/std/haxe/macro/TypeTools.hx"
		return null;
	}
	
	
}


