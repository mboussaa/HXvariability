// Generated by Haxe 3.3.0
package haxe.macro;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TypedExprDef extends haxe.lang.ParamEnum
{
	public TypedExprDef(int index, java.lang.Object[] params)
	{
		//line 100 "/usr/lib/haxe/std/java/internal/HxObject.hx"
		super(index, params);
	}
	
	
	public static final java.lang.String[] __hx_constructs = new java.lang.String[]{"TConst", "TLocal", "TArray", "TBinop", "TField", "TTypeExpr", "TParenthesis", "TObjectDecl", "TArrayDecl", "TCall", "TNew", "TUnop", "TFunction", "TVar", "TBlock", "TFor", "TIf", "TWhile", "TSwitch", "TTry", "TReturn", "TBreak", "TContinue", "TThrow", "TCast", "TMeta", "TEnumParameter"};
	
	public static haxe.macro.TypedExprDef TConst(haxe.macro.TConstant c)
	{
		//line 829 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(0, new java.lang.Object[]{c});
	}
	
	
	public static haxe.macro.TypedExprDef TLocal(java.lang.Object v)
	{
		//line 834 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(1, new java.lang.Object[]{v});
	}
	
	
	public static haxe.macro.TypedExprDef TArray(java.lang.Object e1, java.lang.Object e2)
	{
		//line 839 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(2, new java.lang.Object[]{e1, e2});
	}
	
	
	public static haxe.macro.TypedExprDef TBinop(haxe.macro.Binop op, java.lang.Object e1, java.lang.Object e2)
	{
		//line 845 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(3, new java.lang.Object[]{op, e1, e2});
	}
	
	
	public static haxe.macro.TypedExprDef TField(java.lang.Object e, haxe.macro.FieldAccess fa)
	{
		//line 850 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(4, new java.lang.Object[]{e, fa});
	}
	
	
	public static haxe.macro.TypedExprDef TTypeExpr(haxe.macro.ModuleType m)
	{
		//line 855 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(5, new java.lang.Object[]{m});
	}
	
	
	public static haxe.macro.TypedExprDef TParenthesis(java.lang.Object e)
	{
		//line 860 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(6, new java.lang.Object[]{e});
	}
	
	
	public static haxe.macro.TypedExprDef TObjectDecl(haxe.root.Array<java.lang.Object> fields)
	{
		//line 865 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(7, new java.lang.Object[]{fields});
	}
	
	
	public static haxe.macro.TypedExprDef TArrayDecl(haxe.root.Array<java.lang.Object> el)
	{
		//line 870 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(8, new java.lang.Object[]{el});
	}
	
	
	public static haxe.macro.TypedExprDef TCall(java.lang.Object e, haxe.root.Array<java.lang.Object> el)
	{
		//line 875 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(9, new java.lang.Object[]{e, el});
	}
	
	
	public static haxe.macro.TypedExprDef TNew(java.lang.Object c, haxe.root.Array<haxe.macro.Type> params, haxe.root.Array<java.lang.Object> el)
	{
		//line 880 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(10, new java.lang.Object[]{c, params, el});
	}
	
	
	public static haxe.macro.TypedExprDef TUnop(haxe.macro.Unop op, boolean postFix, java.lang.Object e)
	{
		//line 893 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(11, new java.lang.Object[]{op, postFix, e});
	}
	
	
	public static haxe.macro.TypedExprDef TFunction(java.lang.Object tfunc)
	{
		//line 898 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(12, new java.lang.Object[]{tfunc});
	}
	
	
	public static haxe.macro.TypedExprDef TVar(java.lang.Object v, java.lang.Object expr)
	{
		//line 903 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(13, new java.lang.Object[]{v, expr});
	}
	
	
	public static haxe.macro.TypedExprDef TBlock(haxe.root.Array<java.lang.Object> el)
	{
		//line 908 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(14, new java.lang.Object[]{el});
	}
	
	
	public static haxe.macro.TypedExprDef TFor(java.lang.Object v, java.lang.Object e1, java.lang.Object e2)
	{
		//line 913 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(15, new java.lang.Object[]{v, e1, e2});
	}
	
	
	public static haxe.macro.TypedExprDef TIf(java.lang.Object econd, java.lang.Object eif, java.lang.Object eelse)
	{
		//line 918 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(16, new java.lang.Object[]{econd, eif, eelse});
	}
	
	
	public static haxe.macro.TypedExprDef TWhile(java.lang.Object econd, java.lang.Object e, boolean normalWhile)
	{
		//line 925 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(17, new java.lang.Object[]{econd, e, normalWhile});
	}
	
	
	public static haxe.macro.TypedExprDef TSwitch(java.lang.Object e, haxe.root.Array<java.lang.Object> cases, java.lang.Object edef)
	{
		//line 931 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(18, new java.lang.Object[]{e, cases, edef});
	}
	
	
	public static haxe.macro.TypedExprDef TTry(java.lang.Object e, haxe.root.Array<java.lang.Object> catches)
	{
		//line 936 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(19, new java.lang.Object[]{e, catches});
	}
	
	
	public static haxe.macro.TypedExprDef TReturn(java.lang.Object e)
	{
		//line 941 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(20, new java.lang.Object[]{e});
	}
	
	
	public static final haxe.macro.TypedExprDef TBreak = new haxe.macro.TypedExprDef(21, null);
	
	public static final haxe.macro.TypedExprDef TContinue = new haxe.macro.TypedExprDef(22, null);
	
	public static haxe.macro.TypedExprDef TThrow(java.lang.Object e)
	{
		//line 956 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(23, new java.lang.Object[]{e});
	}
	
	
	public static haxe.macro.TypedExprDef TCast(java.lang.Object e, haxe.macro.ModuleType m)
	{
		//line 961 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(24, new java.lang.Object[]{e, m});
	}
	
	
	public static haxe.macro.TypedExprDef TMeta(java.lang.Object m, java.lang.Object e1)
	{
		//line 966 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(25, new java.lang.Object[]{m, e1});
	}
	
	
	public static haxe.macro.TypedExprDef TEnumParameter(java.lang.Object e1, java.lang.Object ef, int index)
	{
		//line 971 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return new haxe.macro.TypedExprDef(26, new java.lang.Object[]{e1, ef, index});
	}
	
	
	@Override public java.lang.String getTag()
	{
		//line 825 "/usr/lib/haxe/std/haxe/macro/Type.hx"
		return haxe.macro.TypedExprDef.__hx_constructs[this.index];
	}
	
	
}


