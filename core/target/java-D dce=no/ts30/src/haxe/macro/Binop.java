// Generated by Haxe 3.3.0
package haxe.macro;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Binop extends haxe.lang.ParamEnum
{
	public Binop(int index, java.lang.Object[] params)
	{
		//line 100 "/usr/lib/haxe/std/java/internal/HxObject.hx"
		super(index, params);
	}
	
	
	public static final java.lang.String[] __hx_constructs = new java.lang.String[]{"OpAdd", "OpMult", "OpDiv", "OpSub", "OpAssign", "OpEq", "OpNotEq", "OpGt", "OpGte", "OpLt", "OpLte", "OpAnd", "OpOr", "OpXor", "OpBoolAnd", "OpBoolOr", "OpShl", "OpShr", "OpUShr", "OpMod", "OpAssignOp", "OpInterval", "OpArrow"};
	
	public static final haxe.macro.Binop OpAdd = new haxe.macro.Binop(0, null);
	
	public static final haxe.macro.Binop OpMult = new haxe.macro.Binop(1, null);
	
	public static final haxe.macro.Binop OpDiv = new haxe.macro.Binop(2, null);
	
	public static final haxe.macro.Binop OpSub = new haxe.macro.Binop(3, null);
	
	public static final haxe.macro.Binop OpAssign = new haxe.macro.Binop(4, null);
	
	public static final haxe.macro.Binop OpEq = new haxe.macro.Binop(5, null);
	
	public static final haxe.macro.Binop OpNotEq = new haxe.macro.Binop(6, null);
	
	public static final haxe.macro.Binop OpGt = new haxe.macro.Binop(7, null);
	
	public static final haxe.macro.Binop OpGte = new haxe.macro.Binop(8, null);
	
	public static final haxe.macro.Binop OpLt = new haxe.macro.Binop(9, null);
	
	public static final haxe.macro.Binop OpLte = new haxe.macro.Binop(10, null);
	
	public static final haxe.macro.Binop OpAnd = new haxe.macro.Binop(11, null);
	
	public static final haxe.macro.Binop OpOr = new haxe.macro.Binop(12, null);
	
	public static final haxe.macro.Binop OpXor = new haxe.macro.Binop(13, null);
	
	public static final haxe.macro.Binop OpBoolAnd = new haxe.macro.Binop(14, null);
	
	public static final haxe.macro.Binop OpBoolOr = new haxe.macro.Binop(15, null);
	
	public static final haxe.macro.Binop OpShl = new haxe.macro.Binop(16, null);
	
	public static final haxe.macro.Binop OpShr = new haxe.macro.Binop(17, null);
	
	public static final haxe.macro.Binop OpUShr = new haxe.macro.Binop(18, null);
	
	public static final haxe.macro.Binop OpMod = new haxe.macro.Binop(19, null);
	
	public static haxe.macro.Binop OpAssignOp(haxe.macro.Binop op)
	{
		//line 204 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.Binop(20, new java.lang.Object[]{op});
	}
	
	
	public static final haxe.macro.Binop OpInterval = new haxe.macro.Binop(21, null);
	
	public static final haxe.macro.Binop OpArrow = new haxe.macro.Binop(22, null);
	
	@Override public java.lang.String getTag()
	{
		//line 90 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return haxe.macro.Binop.__hx_constructs[this.index];
	}
	
	
}


