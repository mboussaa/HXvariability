// Generated by Haxe 3.3.0
package haxe.macro;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TypeDefKind extends haxe.lang.ParamEnum
{
	public TypeDefKind(int index, java.lang.Object[] params)
	{
		//line 100 "/usr/lib/haxe/std/java/internal/HxObject.hx"
		super(index, params);
	}
	
	
	public static final java.lang.String[] __hx_constructs = new java.lang.String[]{"TDEnum", "TDStructure", "TDClass", "TDAlias", "TDAbstract"};
	
	public static final haxe.macro.TypeDefKind TDEnum = new haxe.macro.TypeDefKind(0, null);
	
	public static final haxe.macro.TypeDefKind TDStructure = new haxe.macro.TypeDefKind(1, null);
	
	public static haxe.macro.TypeDefKind TDClass(java.lang.Object superClass, haxe.root.Array<java.lang.Object> interfaces, java.lang.Object isInterface)
	{
		//line 859 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.TypeDefKind(2, new java.lang.Object[]{superClass, interfaces, isInterface});
	}
	
	
	public static haxe.macro.TypeDefKind TDAlias(haxe.macro.ComplexType t)
	{
		//line 864 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.TypeDefKind(3, new java.lang.Object[]{t});
	}
	
	
	public static haxe.macro.TypeDefKind TDAbstract(haxe.macro.ComplexType tthis, haxe.root.Array<haxe.macro.ComplexType> from, haxe.root.Array<haxe.macro.ComplexType> to)
	{
		//line 869 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return new haxe.macro.TypeDefKind(4, new java.lang.Object[]{tthis, from, to});
	}
	
	
	@Override public java.lang.String getTag()
	{
		//line 845 "/usr/lib/haxe/std/haxe/macro/Expr.hx"
		return haxe.macro.TypeDefKind.__hx_constructs[this.index];
	}
	
	
}


