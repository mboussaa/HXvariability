// Generated by Haxe 3.3.0
package haxe.macro;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Printer extends haxe.lang.HxObject
{
	public Printer(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Printer(java.lang.String tabString)
	{
		//line 37 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		haxe.macro.Printer.__hx_ctor_haxe_macro_Printer(this, tabString);
	}
	
	
	public static void __hx_ctor_haxe_macro_Printer(haxe.macro.Printer __temp_me44, java.lang.String tabString)
	{
		//line 37 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		if (( tabString == null )) 
		{
			//line 37 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			tabString = "\t";
		}
		
		//line 38 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		__temp_me44.tabs = "";
		//line 39 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		__temp_me44.tabString = tabString;
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return new haxe.macro.Printer(((haxe.lang.EmptyObject) (haxe.lang.EmptyObject.EMPTY) ));
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return new haxe.macro.Printer(haxe.lang.Runtime.toString(arr.__get(0)));
	}
	
	
	public java.lang.String tabs;
	
	public java.lang.String tabString;
	
	public java.lang.String printUnop(haxe.macro.Unop op)
	{
		//line 42 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		switch (op)
		{
			case OpIncrement:
			{
				//line 42 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "++";
			}
			
			
			case OpDecrement:
			{
				//line 42 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "--";
			}
			
			
			case OpNot:
			{
				//line 42 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "!";
			}
			
			
			case OpNeg:
			{
				//line 42 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "-";
			}
			
			
			case OpNegBits:
			{
				//line 42 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "~";
			}
			
			
		}
		
		//line 42 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return null;
	}
	
	
	public java.lang.String printBinop(haxe.macro.Binop op)
	{
		//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		switch (op.index)
		{
			case 0:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "+";
			}
			
			
			case 1:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "*";
			}
			
			
			case 2:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "/";
			}
			
			
			case 3:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "-";
			}
			
			
			case 4:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "=";
			}
			
			
			case 5:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "==";
			}
			
			
			case 6:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "!=";
			}
			
			
			case 7:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return ">";
			}
			
			
			case 8:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return ">=";
			}
			
			
			case 9:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "<";
			}
			
			
			case 10:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "<=";
			}
			
			
			case 11:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "&";
			}
			
			
			case 12:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "|";
			}
			
			
			case 13:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "^";
			}
			
			
			case 14:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "&&";
			}
			
			
			case 15:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "||";
			}
			
			
			case 16:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "<<";
			}
			
			
			case 17:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return ">>";
			}
			
			
			case 18:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return ">>>";
			}
			
			
			case 19:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "%";
			}
			
			
			case 20:
			{
				//line 73 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				haxe.macro.Binop op1 = ((haxe.macro.Binop) (op.params[0]) );
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return ( this.printBinop(op1) + "=" );
			}
			
			
			case 21:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "...";
			}
			
			
			case 22:
			{
				//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "=>";
			}
			
			
		}
		
		//line 50 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return null;
	}
	
	
	public java.lang.String escapeString(java.lang.String s, java.lang.String delim)
	{
		//line 79 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return ( ( delim + haxe.root.StringTools.replace(haxe.root.StringTools.replace(haxe.root.StringTools.replace(haxe.root.StringTools.replace(haxe.root.StringTools.replace(s, "\n", "\\n"), "\t", "\\t"), "\'", "\\\'"), "\"", "\\\""), "\u0000", "\\x00") ) + delim );
	}
	
	
	public java.lang.String printFormatString(java.lang.String s)
	{
		//line 83 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return this.escapeString(s, "\'");
	}
	
	
	public java.lang.String printString(java.lang.String s)
	{
		//line 87 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return this.escapeString(s, "\"");
	}
	
	
	public java.lang.String printConstant(haxe.macro.Constant c)
	{
		//line 90 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		switch (c.index)
		{
			case 0:
			{
				//line 93 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.String s = haxe.lang.Runtime.toString(c.params[0]);
				//line 90 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return s;
			}
			
			
			case 1:
			{
				//line 94 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.String s1 = haxe.lang.Runtime.toString(c.params[0]);
				//line 90 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return s1;
			}
			
			
			case 2:
			{
				//line 91 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.String s2 = haxe.lang.Runtime.toString(c.params[0]);
				//line 90 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return this.printString(s2);
			}
			
			
			case 3:
			{
				//line 92 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.String s3 = haxe.lang.Runtime.toString(c.params[0]);
				//line 90 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return s3;
			}
			
			
			case 4:
			{
				//line 96 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.String opt = haxe.lang.Runtime.toString(c.params[1]);
				//line 96 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.String s4 = haxe.lang.Runtime.toString(c.params[0]);
				//line 90 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return ( ( ( "~/" + s4 ) + "/" ) + opt );
			}
			
			
		}
		
		//line 90 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return null;
	}
	
	
	public java.lang.String printTypeParam(haxe.macro.TypeParam param)
	{
		//line 99 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		switch (param.index)
		{
			case 0:
			{
				//line 100 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				haxe.macro.ComplexType ct = ((haxe.macro.ComplexType) (param.params[0]) );
				//line 99 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return this.printComplexType(ct);
			}
			
			
			case 1:
			{
				//line 101 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.Object e = param.params[0];
				//line 99 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return this.printExpr(e);
			}
			
			
		}
		
		//line 99 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return null;
	}
	
	
	public java.lang.String printTypePath(java.lang.Object tp)
	{
		//line 104 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return ( ( ( (( (( ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(tp, "pack", true)) ).length > 0 )) ? (( ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(tp, "pack", true)) ).join(".") + "." )) : ("") )) + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tp, "name", true)) ) + (( (( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tp, "sub", true)) != null )) ? (( "." + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tp, "sub", true)) )) : ("") )) ) + (( (( ((haxe.root.Array<haxe.macro.TypeParam>) (haxe.lang.Runtime.getField(tp, "params", true)) ) == null )) ? ("") : (( (( ((haxe.root.Array<haxe.macro.TypeParam>) (haxe.lang.Runtime.getField(tp, "params", true)) ).length > 0 )) ? (( ( "<" + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<haxe.macro.TypeParam>) (haxe.lang.Runtime.getField(tp, "params", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypeParam")) ))) )) ).join(", ") ) + ">" )) : ("") )) )) );
	}
	
	
	public java.lang.String printComplexType(haxe.macro.ComplexType ct)
	{
		//line 111 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		switch (ct.index)
		{
			case 0:
			{
				//line 112 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.Object tp = ct.params[0];
				//line 111 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return this.printTypePath(tp);
			}
			
			
			case 1:
			{
				//line 113 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				haxe.macro.ComplexType ret = ((haxe.macro.ComplexType) (ct.params[1]) );
				//line 113 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				haxe.root.Array<haxe.macro.ComplexType> args = ((haxe.root.Array<haxe.macro.ComplexType>) (ct.params[0]) );
				//line 111 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return ( ( (( (( args.length > 0 )) ? (((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (args.map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printComplexType")) ))) )) ).join(" -> ")) : ("Void") )) + " -> " ) + this.printComplexType(ret) );
			}
			
			
			case 2:
			{
				//line 114 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				haxe.root.Array<java.lang.Object> fields = ((haxe.root.Array<java.lang.Object>) (ct.params[0]) );
				//line 114 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				haxe.root.Array<java.lang.String> _g = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
				//line 114 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				{
					//line 114 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					int _g1 = 0;
					//line 114 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					while (( _g1 < fields.length ))
					{
						//line 114 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						java.lang.Object f = fields.__get(_g1);
						//line 114 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						 ++ _g1;
						//line 114 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						_g.push(( this.printField(f) + "; " ));
					}
					
				}
				
				//line 111 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return ( ( "{ " + _g.join("") ) + "}" );
			}
			
			
			case 3:
			{
				//line 115 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				haxe.macro.ComplexType ct1 = ((haxe.macro.ComplexType) (ct.params[0]) );
				//line 111 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return ( ( "(" + this.printComplexType(ct1) ) + ")" );
			}
			
			
			case 4:
			{
				//line 117 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				haxe.root.Array<java.lang.Object> fields1 = ((haxe.root.Array<java.lang.Object>) (ct.params[1]) );
				//line 117 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				haxe.root.Array<java.lang.Object> tpl = ((haxe.root.Array<java.lang.Object>) (ct.params[0]) );
				//line 111 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return ( ( ( ( "{> " + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (tpl.map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypePath")) ))) )) ).join(" >, ") ) + ", " ) + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (fields1.map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printField")) ))) )) ).join(", ") ) + " }" );
			}
			
			
			case 5:
			{
				//line 116 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				haxe.macro.ComplexType ct2 = ((haxe.macro.ComplexType) (ct.params[0]) );
				//line 111 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return ( "?" + this.printComplexType(ct2) );
			}
			
			
		}
		
		//line 111 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return null;
	}
	
	
	public java.lang.String printMetadata(java.lang.Object meta)
	{
		//line 120 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return ( ( "@" + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(meta, "name", true)) ) + (( (( ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(meta, "params", true)) ) != null ) && ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(meta, "params", true)) ).length > 0 ) )) ? (( ( "(" + this.printExprs(((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(meta, "params", true)) ), ", ") ) + ")" )) : ("") )) );
	}
	
	
	public java.lang.String printAccess(haxe.macro.Access access)
	{
		//line 124 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		switch (access)
		{
			case APublic:
			{
				//line 124 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "public";
			}
			
			
			case APrivate:
			{
				//line 124 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "private";
			}
			
			
			case AStatic:
			{
				//line 124 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "static";
			}
			
			
			case AOverride:
			{
				//line 124 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "override";
			}
			
			
			case ADynamic:
			{
				//line 124 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "dynamic";
			}
			
			
			case AInline:
			{
				//line 124 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "inline";
			}
			
			
			case AMacro:
			{
				//line 124 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return "macro";
			}
			
			
		}
		
		//line 124 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return null;
	}
	
	
	public java.lang.String printField(java.lang.Object field)
	{
		//line 135 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		java.lang.String tmp = ( ( (( (( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(field, "doc", true)) != null ) &&  ! (haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(field, "doc", true)), ""))  )) ? (( ( ( ( ( ( ( "/**\n" + this.tabs ) + this.tabString ) + haxe.root.StringTools.replace(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(field, "doc", true)), "\n", ( ( "\n" + this.tabs ) + this.tabString )) ) + "\n" ) + this.tabs ) + "**/\n" ) + this.tabs )) : ("") )) + (( (( ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(field, "meta", true)) ) != null ) && ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(field, "meta", true)) ).length > 0 ) )) ? (( ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(field, "meta", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printMetadata")) ))) )) ).join(( "\n" + this.tabs )) + (( "\n" + this.tabs )) )) : ("") )) ) + (( (( ( ((haxe.root.Array<haxe.macro.Access>) (haxe.lang.Runtime.getField(field, "access", true)) ) != null ) && ( ((haxe.root.Array<haxe.macro.Access>) (haxe.lang.Runtime.getField(field, "access", true)) ).length > 0 ) )) ? (( ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<haxe.macro.Access>) (haxe.lang.Runtime.getField(field, "access", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printAccess")) ))) )) ).join(" ") + " " )) : ("") )) );
		//line 138 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		haxe.macro.FieldType _g = ((haxe.macro.FieldType) (haxe.lang.Runtime.getField(field, "kind", true)) );
		//line 138 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		java.lang.String tmp1 = null;
		//line 138 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		switch (_g.index)
		{
			case 0:
			{
				//line 139 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.Object eo = _g.params[1];
				//line 139 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				haxe.macro.ComplexType t = ((haxe.macro.ComplexType) (_g.params[0]) );
				//line 138 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				tmp1 = ( ( ( "var " + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(field, "name", true)) ) + haxe.lang.Runtime.toString(this.opt(((haxe.macro.ComplexType) (t) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "printComplexType")) ), haxe.lang.Runtime.toString(" : "))) ) + haxe.lang.Runtime.toString(this.opt(((java.lang.Object) (eo) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "printExpr")) ), haxe.lang.Runtime.toString(" = "))) );
				//line 139 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				break;
			}
			
			
			case 1:
			{
				//line 141 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.Object func = _g.params[0];
				//line 138 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				tmp1 = ( ( "function " + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(field, "name", true)) ) + this.printFunction(func) );
				//line 141 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				break;
			}
			
			
			case 2:
			{
				//line 140 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.Object eo1 = _g.params[3];
				//line 140 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				haxe.macro.ComplexType t1 = ((haxe.macro.ComplexType) (_g.params[2]) );
				//line 140 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.String set = haxe.lang.Runtime.toString(_g.params[1]);
				//line 140 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				java.lang.String get = haxe.lang.Runtime.toString(_g.params[0]);
				//line 138 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				tmp1 = ( ( ( ( ( ( ( ( "var " + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(field, "name", true)) ) + "(" ) + get ) + ", " ) + set ) + ")" ) + haxe.lang.Runtime.toString(this.opt(((haxe.macro.ComplexType) (t1) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "printComplexType")) ), haxe.lang.Runtime.toString(" : "))) ) + haxe.lang.Runtime.toString(this.opt(((java.lang.Object) (eo1) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "printExpr")) ), haxe.lang.Runtime.toString(" = "))) );
				//line 140 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				break;
			}
			
			
		}
		
		//line 134 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return ( tmp + tmp1 );
	}
	
	
	public java.lang.String printTypeParamDecl(java.lang.Object tpd)
	{
		//line 144 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return ( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(tpd, "name", true)) + (( (( ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(tpd, "params", true)) ) != null ) && ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(tpd, "params", true)) ).length > 0 ) )) ? (( ( "<" + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(tpd, "params", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypeParamDecl")) ))) )) ).join(", ") ) + ">" )) : ("") )) ) + (( (( ( ((haxe.root.Array<haxe.macro.ComplexType>) (haxe.lang.Runtime.getField(tpd, "constraints", true)) ) != null ) && ( ((haxe.root.Array<haxe.macro.ComplexType>) (haxe.lang.Runtime.getField(tpd, "constraints", true)) ).length > 0 ) )) ? (( ( ":(" + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<haxe.macro.ComplexType>) (haxe.lang.Runtime.getField(tpd, "constraints", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printComplexType")) ))) )) ).join(", ") ) + ")" )) : ("") )) );
	}
	
	
	public java.lang.String printFunctionArg(java.lang.Object arg)
	{
		//line 149 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return ( ( ( (( (haxe.lang.Runtime.toBool((haxe.lang.Runtime.getField(arg, "opt", true)))) ? ("?") : ("") )) + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(arg, "name", true)) ) + haxe.lang.Runtime.toString(this.opt(((haxe.macro.ComplexType) (haxe.lang.Runtime.getField(arg, "type", true)) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "printComplexType")) ), haxe.lang.Runtime.toString(":"))) ) + haxe.lang.Runtime.toString(this.opt(((java.lang.Object) (haxe.lang.Runtime.getField(arg, "value", true)) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "printExpr")) ), haxe.lang.Runtime.toString(" = "))) );
	}
	
	
	public java.lang.String printFunction(java.lang.Object func)
	{
		//line 155 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return ( ( ( ( ( (( (( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(func, "params", true)) ) == null )) ? ("") : (( (( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(func, "params", true)) ).length > 0 )) ? (( ( "<" + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(func, "params", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypeParamDecl")) ))) )) ).join(", ") ) + ">" )) : ("") )) )) + "(" ) + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(func, "args", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printFunctionArg")) ))) )) ).join(", ") ) + ")" ) + haxe.lang.Runtime.toString(this.opt(((haxe.macro.ComplexType) (haxe.lang.Runtime.getField(func, "ret", true)) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "printComplexType")) ), haxe.lang.Runtime.toString(":"))) ) + haxe.lang.Runtime.toString(this.opt(((java.lang.Object) (haxe.lang.Runtime.getField(func, "expr", true)) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "printExpr")) ), haxe.lang.Runtime.toString(" "))) );
	}
	
	
	public java.lang.String printVar(java.lang.Object v)
	{
		//line 161 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return ( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(v, "name", true)) + haxe.lang.Runtime.toString(this.opt(((haxe.macro.ComplexType) (haxe.lang.Runtime.getField(v, "type", true)) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "printComplexType")) ), haxe.lang.Runtime.toString(":"))) ) + haxe.lang.Runtime.toString(this.opt(((java.lang.Object) (haxe.lang.Runtime.getField(v, "expr", true)) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "printExpr")) ), haxe.lang.Runtime.toString(" = "))) );
	}
	
	
	public java.lang.String printExpr(java.lang.Object e)
	{
		//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		haxe.macro.Printer _gthis = this;
		//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		if (( e == null )) 
		{
			//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			return "#NULL";
		}
		else
		{
			//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			haxe.macro.ExprDef _g = ((haxe.macro.ExprDef) (haxe.lang.Runtime.getField(e, "expr", true)) );
			//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			switch (_g.index)
			{
				case 0:
				{
					//line 171 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.macro.Constant c = ((haxe.macro.Constant) (_g.params[0]) );
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return this.printConstant(c);
				}
				
				
				case 1:
				{
					//line 172 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e2 = _g.params[1];
					//line 172 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e1 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( ( ( "" + this.printExpr(e1) ) + "[" ) + this.printExpr(e2) ) + "]" );
				}
				
				
				case 2:
				{
					//line 173 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e21 = _g.params[2];
					//line 173 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e11 = _g.params[1];
					//line 173 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.macro.Binop op = ((haxe.macro.Binop) (_g.params[0]) );
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( ( ( ( "" + this.printExpr(e11) ) + " " ) + this.printBinop(op) ) + " " ) + this.printExpr(e21) );
				}
				
				
				case 3:
				{
					//line 174 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String n = haxe.lang.Runtime.toString(_g.params[1]);
					//line 174 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e12 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( ( "" + this.printExpr(e12) ) + "." ) + n );
				}
				
				
				case 4:
				{
					//line 175 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e13 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( "(" + this.printExpr(e13) ) + ")" );
				}
				
				
				case 5:
				{
					//line 176 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<java.lang.Object> fl = ((haxe.root.Array<java.lang.Object>) (_g.params[0]) );
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( "{ " + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (fl.map(((haxe.lang.Function) (new haxe.macro.Printer_printExpr_177__Fun(_gthis)) ))) )) ).join(", ") ) + " }" );
				}
				
				
				case 6:
				{
					//line 178 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<java.lang.Object> el = ((haxe.root.Array<java.lang.Object>) (_g.params[0]) );
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( "[" + this.printExprs(el, ", ") ) + "]" );
				}
				
				
				case 7:
				{
					//line 179 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<java.lang.Object> el1 = ((haxe.root.Array<java.lang.Object>) (_g.params[1]) );
					//line 179 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e14 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( ( ( "" + this.printExpr(e14) ) + "(" ) + this.printExprs(el1, ", ") ) + ")" );
				}
				
				
				case 8:
				{
					//line 180 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<java.lang.Object> el2 = ((haxe.root.Array<java.lang.Object>) (_g.params[1]) );
					//line 180 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object tp = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( ( ( "new " + this.printTypePath(tp) ) + "(" ) + this.printExprs(el2, ", ") ) + ")" );
				}
				
				
				case 9:
				{
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					{
						//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						boolean __temp_switch1 = (haxe.lang.Runtime.toBool(_g.params[1]));
						//line 182 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						if (( __temp_switch1 == false )) 
						{
							//line 182 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.Object e15 = _g.params[2];
							//line 182 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							haxe.macro.Unop op1 = ((haxe.macro.Unop) (_g.params[0]) );
							//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							return ( this.printUnop(op1) + this.printExpr(e15) );
						}
						else
						{
							//line 181 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							if (( __temp_switch1 == true )) 
							{
								//line 181 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								java.lang.Object e16 = _g.params[2];
								//line 181 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								haxe.macro.Unop op2 = ((haxe.macro.Unop) (_g.params[0]) );
								//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								return ( this.printExpr(e16) + this.printUnop(op2) );
							}
							
						}
						
					}
					
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 10:
				{
					//line 185 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<java.lang.Object> vl = ((haxe.root.Array<java.lang.Object>) (_g.params[0]) );
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( "var " + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (vl.map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printVar")) ))) )) ).join(", ") );
				}
				
				
				case 11:
				{
					//line 183 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object func = _g.params[1];
					//line 183 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String no = haxe.lang.Runtime.toString(_g.params[0]);
					//line 183 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (( no != null )) 
					{
						//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ( ( "function " + no ) + this.printFunction(func) );
					}
					else
					{
						//line 184 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						java.lang.Object func1 = _g.params[1];
						//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ( "function" + this.printFunction(func1) );
					}
					
				}
				
				
				case 12:
				{
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					switch (((haxe.root.Array<java.lang.Object>) (_g.params[0]) ).length)
					{
						case 0:
						{
							//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							return "{ }";
						}
						
						
						default:
						{
							//line 187 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							haxe.root.Array<java.lang.Object> el3 = ((haxe.root.Array<java.lang.Object>) (_g.params[0]) );
							//line 188 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.String old = this.tabs;
							//line 189 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							this.tabs += this.tabString;
							//line 190 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.String s = ( ( "{\n" + this.tabs ) + this.printExprs(el3, ( ";\n" + this.tabs )) );
							//line 191 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							this.tabs = old;
							//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							return ( s + (( ( ";\n" + this.tabs ) + "}" )) );
						}
						
					}
					
				}
				
				
				case 13:
				{
					//line 193 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e22 = _g.params[1];
					//line 193 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e17 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( ( "for (" + this.printExpr(e17) ) + ") " ) + this.printExpr(e22) );
				}
				
				
				case 14:
				{
					//line 194 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e23 = _g.params[1];
					//line 194 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e18 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( ( "" + this.printExpr(e18) ) + " in " ) + this.printExpr(e23) );
				}
				
				
				case 15:
				{
					//line 195 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (( _g.params[2] == null )) 
					{
						//line 195 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						java.lang.Object econd = _g.params[0];
						//line 195 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						java.lang.Object eif = _g.params[1];
						//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ( ( ( "if (" + this.printExpr(econd) ) + ") " ) + this.printExpr(eif) );
					}
					else
					{
						//line 196 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						java.lang.Object econd1 = _g.params[0];
						//line 196 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						java.lang.Object eif1 = _g.params[1];
						//line 196 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						java.lang.Object eelse = _g.params[2];
						//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ( ( ( ( ( "if (" + this.printExpr(econd1) ) + ") " ) + this.printExpr(eif1) ) + " else " ) + this.printExpr(eelse) );
					}
					
				}
				
				
				case 16:
				{
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					{
						//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						boolean __temp_switch2 = (haxe.lang.Runtime.toBool(_g.params[2]));
						//line 198 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						if (( __temp_switch2 == false )) 
						{
							//line 198 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.Object econd2 = _g.params[0];
							//line 198 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.Object e19 = _g.params[1];
							//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							return ( ( ( ( "do " + this.printExpr(e19) ) + " while (" ) + this.printExpr(econd2) ) + ")" );
						}
						else
						{
							//line 197 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							if (( __temp_switch2 == true )) 
							{
								//line 197 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								java.lang.Object econd3 = _g.params[0];
								//line 197 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								java.lang.Object e110 = _g.params[1];
								//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								return ( ( ( "while (" + this.printExpr(econd3) ) + ") " ) + this.printExpr(e110) );
							}
							
						}
						
					}
					
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 17:
				{
					//line 199 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object edef = _g.params[2];
					//line 199 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<java.lang.Object> cl = ((haxe.root.Array<java.lang.Object>) (_g.params[1]) );
					//line 199 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e111 = _g.params[0];
					//line 200 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String old1 = this.tabs;
					//line 201 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					this.tabs += this.tabString;
					//line 202 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String s1 = ( ( ( ( "switch " + this.printExpr(e111) ) + " {\n" ) + this.tabs ) + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (cl.map(((haxe.lang.Function) (new haxe.macro.Printer_printExpr_203__Fun(_gthis)) ))) )) ).join(( "\n" + this.tabs )) );
					//line 208 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (( ! (( edef == null )) )) 
					{
						//line 209 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						s1 += ( ( ( "\n" + this.tabs ) + "default:" ) + (( (( ((haxe.macro.ExprDef) (haxe.lang.Runtime.getField(edef, "expr", true)) ) == null )) ? ("") : (( this.printExpr(edef) + ";" )) )) );
					}
					
					//line 210 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					this.tabs = old1;
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( s1 + (( ( "\n" + this.tabs ) + "}" )) );
				}
				
				
				case 18:
				{
					//line 212 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<java.lang.Object> cl1 = ((haxe.root.Array<java.lang.Object>) (_g.params[1]) );
					//line 212 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e112 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( "try " + this.printExpr(e112) ) + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (cl1.map(((haxe.lang.Function) (new haxe.macro.Printer_printExpr_214__Fun(_gthis)) ))) )) ).join("") );
				}
				
				
				case 19:
				{
					//line 215 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object eo = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( "return" + haxe.lang.Runtime.toString(this.opt(((java.lang.Object) (eo) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "printExpr")) ), haxe.lang.Runtime.toString(" "))) );
				}
				
				
				case 20:
				{
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return "break";
				}
				
				
				case 21:
				{
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return "continue";
				}
				
				
				case 22:
				{
					//line 218 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e113 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( "untyped " + this.printExpr(e113) );
				}
				
				
				case 23:
				{
					//line 219 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e114 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( "throw " + this.printExpr(e114) );
				}
				
				
				case 24:
				{
					//line 220 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.macro.ComplexType cto = ((haxe.macro.ComplexType) (_g.params[1]) );
					//line 220 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e115 = _g.params[0];
					//line 220 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (( cto != null )) 
					{
						//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ( ( ( ( "cast(" + this.printExpr(e115) ) + ", " ) + this.printComplexType(cto) ) + ")" );
					}
					else
					{
						//line 221 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						java.lang.Object e116 = _g.params[0];
						//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ( "cast " + this.printExpr(e116) );
					}
					
				}
				
				
				case 25:
				{
					//line 222 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e117 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( "#DISPLAY(" + this.printExpr(e117) ) + ")" );
				}
				
				
				case 26:
				{
					//line 223 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object tp1 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( "#DISPLAY(" + this.printTypePath(tp1) ) + ")" );
				}
				
				
				case 27:
				{
					//line 224 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object eelse1 = _g.params[2];
					//line 224 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object eif2 = _g.params[1];
					//line 224 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object econd4 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( ( ( ( "" + this.printExpr(econd4) ) + " ? " ) + this.printExpr(eif2) ) + " : " ) + this.printExpr(eelse1) );
				}
				
				
				case 28:
				{
					//line 225 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.macro.ComplexType ct = ((haxe.macro.ComplexType) (_g.params[1]) );
					//line 225 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e118 = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( ( ( "(" + this.printExpr(e118) ) + " : " ) + this.printComplexType(ct) ) + ")" );
				}
				
				
				case 29:
				{
					//line 226 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object e119 = _g.params[1];
					//line 226 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object meta = _g.params[0];
					//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					return ( ( this.printMetadata(meta) + " " ) + this.printExpr(e119) );
				}
				
				
			}
			
		}
		
		//line 167 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return null;
	}
	
	
	public java.lang.String printExprs(haxe.root.Array<java.lang.Object> el, java.lang.String sep)
	{
		//line 230 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (el.map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printExpr")) ))) )) ).join(sep);
	}
	
	
	public java.lang.String printExtension(haxe.root.Array<java.lang.Object> tpl, haxe.root.Array<java.lang.Object> fields)
	{
		//line 234 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return ( ( ( ( ( "{\n" + this.tabs ) + ">" ) + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (tpl.map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypePath")) ))) )) ).join(( ( ",\n" + this.tabs ) + ">" )) ) + "," ) + (( (( fields.length > 0 )) ? (( ( ( "\n" + this.tabs ) + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (fields.map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printField")) ))) )) ).join(( ";\n" + this.tabs )) ) + ";\n}" )) : ("\n}") )) );
	}
	
	
	public java.lang.String printStructure(haxe.root.Array<java.lang.Object> fields)
	{
		//line 239 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		if (( fields.length == 0 )) 
		{
			//line 239 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			return "{ }";
		}
		else
		{
			//line 239 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			return ( ( ( "{\n" + this.tabs ) + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (fields.map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printField")) ))) )) ).join(( ";\n" + this.tabs )) ) + ";\n}" );
		}
		
	}
	
	
	public java.lang.String printTypeDefinition(java.lang.Object t, java.lang.Object printPackage)
	{
		//line 243 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		boolean __temp_printPackage43 = ( (haxe.lang.Runtime.eq(printPackage, null)) ? (true) : (haxe.lang.Runtime.toBool(printPackage)) );
		//line 244 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		java.lang.String old = this.tabs;
		//line 245 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		this.tabs = this.tabString;
		//line 247 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		java.lang.String str = null;
		//line 247 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		if (( t == null )) 
		{
			//line 247 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			str = "#NULL";
		}
		else
		{
			//line 248 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			java.lang.String tmp = ( ( (( (( ( __temp_printPackage43 && ( ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(t, "pack", true)) ).length > 0 ) ) &&  ! (haxe.lang.Runtime.valEq(((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(t, "pack", true)) ).__get(0), ""))  )) ? (( ( "package " + ((haxe.root.Array<java.lang.String>) (haxe.lang.Runtime.getField(t, "pack", true)) ).join(".") ) + ";\n" )) : ("") )) + (( (( ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "meta", true)) ) != null ) && ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "meta", true)) ).length > 0 ) )) ? (( ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "meta", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printMetadata")) ))) )) ).join(" ") + " " )) : ("") )) ) + (( (haxe.lang.Runtime.toBool((haxe.lang.Runtime.getField(t, "isExtern", true)))) ? ("extern ") : ("") )) );
			//line 249 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			haxe.macro.TypeDefKind _g = ((haxe.macro.TypeDefKind) (haxe.lang.Runtime.getField(t, "kind", true)) );
			//line 249 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			java.lang.String tmp1 = null;
			//line 249 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			switch (_g.index)
			{
				case 0:
				{
					//line 251 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String tmp2 = ( ( ( "enum " + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(t, "name", true)) ) + (( (( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "params", true)) ).length > 0 )) ? (( ( "<" + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "params", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypeParamDecl")) ))) )) ).join(", ") ) + ">" )) : ("") )) ) + " {\n" );
					//line 252 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<java.lang.String> _g1 = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
					//line 252 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					{
						//line 252 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						int _g11 = 0;
						//line 252 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						haxe.root.Array<java.lang.Object> _g2 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "fields", true)) );
						//line 252 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						while (( _g11 < _g2.length ))
						{
							//line 252 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.Object field = _g2.__get(_g11);
							//line 252 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							 ++ _g11;
							//line 253 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.String tmp3 = ( ( this.tabs + (( (( ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(field, "doc", true)) != null ) &&  ! (haxe.lang.Runtime.valEq(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(field, "doc", true)), ""))  )) ? (( ( ( ( ( ( ( "/**\n" + this.tabs ) + this.tabString ) + haxe.root.StringTools.replace(haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(field, "doc", true)), "\n", ( ( "\n" + this.tabs ) + this.tabString )) ) + "\n" ) + this.tabs ) + "**/\n" ) + this.tabs )) : ("") )) ) + (( (( ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(field, "meta", true)) ) != null ) && ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(field, "meta", true)) ).length > 0 ) )) ? (( ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(field, "meta", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printMetadata")) ))) )) ).join(" ") + " " )) : ("") )) );
							//line 255 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							haxe.macro.FieldType _g3 = ((haxe.macro.FieldType) (haxe.lang.Runtime.getField(field, "kind", true)) );
							//line 255 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.String tmp4 = null;
							//line 255 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							switch (_g3.index)
							{
								case 0:
								{
									//line 256 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									haxe.macro.ComplexType t1 = ((haxe.macro.ComplexType) (_g3.params[0]) );
									//line 255 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									tmp4 = ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(field, "name", true)) + haxe.lang.Runtime.toString(this.opt(((haxe.macro.ComplexType) (t1) ), ((haxe.lang.Function) (new haxe.lang.Closure(this, "printComplexType")) ), haxe.lang.Runtime.toString(":"))) );
									//line 256 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									break;
								}
								
								
								case 1:
								{
									//line 258 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									java.lang.Object func = _g3.params[0];
									//line 255 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									tmp4 = ( haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(field, "name", true)) + this.printFunction(func) );
									//line 258 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									break;
								}
								
								
								case 2:
								{
									//line 257 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									throw haxe.lang.HaxeException.wrap("FProp is invalid for TDEnum.");
								}
								
								
							}
							
							//line 253 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							_g1.push(( ( tmp3 + tmp4 ) + ";" ));
						}
						
					}
					
					//line 249 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					tmp1 = ( ( tmp2 + _g1.join("\n") ) + "\n}" );
					//line 249 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 1:
				{
					//line 263 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String tmp5 = ( ( ( "typedef " + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(t, "name", true)) ) + (( (( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "params", true)) ).length > 0 )) ? (( ( "<" + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "params", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypeParamDecl")) ))) )) ).join(", ") ) + ">" )) : ("") )) ) + " = {\n" );
					//line 264 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<java.lang.String> _g4 = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
					//line 264 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					{
						//line 264 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						int _g12 = 0;
						//line 264 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						haxe.root.Array<java.lang.Object> _g21 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "fields", true)) );
						//line 264 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						while (( _g12 < _g21.length ))
						{
							//line 264 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.Object f = _g21.__get(_g12);
							//line 264 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							 ++ _g12;
							//line 265 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							_g4.push(( ( this.tabs + this.printField(f) ) + ";" ));
						}
						
					}
					
					//line 249 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					tmp1 = ( ( tmp5 + _g4.join("\n") ) + "\n}" );
					//line 249 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 2:
				{
					//line 268 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object isInterface = _g.params[2];
					//line 268 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<java.lang.Object> interfaces = ((haxe.root.Array<java.lang.Object>) (_g.params[1]) );
					//line 268 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.Object superClass = _g.params[0];
					//line 269 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String tmp6 = ( ( ( (( (haxe.lang.Runtime.toBool((isInterface))) ? ("interface ") : ("class ") )) + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(t, "name", true)) ) + (( (( ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "params", true)) ) != null ) && ( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "params", true)) ).length > 0 ) )) ? (( ( "<" + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "params", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypeParamDecl")) ))) )) ).join(", ") ) + ">" )) : ("") )) ) + (( (( ! (( superClass == null )) )) ? (( " extends " + this.printTypePath(superClass) )) : ("") )) );
					//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String tmp7 = null;
					//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (( interfaces != null )) 
					{
						//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						haxe.root.Array<java.lang.String> tmp8 = null;
						//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						if (haxe.lang.Runtime.toBool((isInterface))) 
						{
							//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							haxe.root.Array<java.lang.String> _g5 = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
							//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							{
								//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								int _g13 = 0;
								//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								while (( _g13 < interfaces.length ))
								{
									//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									java.lang.Object tp = interfaces.__get(_g13);
									//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									 ++ _g13;
									//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									_g5.push(( " extends " + this.printTypePath(tp) ));
								}
								
							}
							
							//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							tmp8 = _g5;
						}
						else
						{
							//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							haxe.root.Array<java.lang.String> _g6 = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
							//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							{
								//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								int _g14 = 0;
								//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								while (( _g14 < interfaces.length ))
								{
									//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									java.lang.Object tp1 = interfaces.__get(_g14);
									//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									 ++ _g14;
									//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									_g6.push(( " implements " + this.printTypePath(tp1) ));
								}
								
							}
							
							//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							tmp8 = _g6;
						}
						
						//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						tmp7 = tmp8.join("");
					}
					else
					{
						//line 271 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						tmp7 = "";
					}
					
					//line 269 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String tmp9 = ( ( tmp6 + tmp7 ) + " {\n" );
					//line 273 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<java.lang.String> _g7 = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
					//line 273 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					{
						//line 273 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						int _g15 = 0;
						//line 273 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						haxe.root.Array<java.lang.Object> _g22 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "fields", true)) );
						//line 273 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						while (( _g15 < _g22.length ))
						{
							//line 273 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.Object f1 = _g22.__get(_g15);
							//line 273 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							 ++ _g15;
							//line 274 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.String fstr = this.printField(f1);
							//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.String tmp10 = ( this.tabs + fstr );
							//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							haxe.macro.FieldType _g31 = ((haxe.macro.FieldType) (haxe.lang.Runtime.getField(f1, "kind", true)) );
							//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.String tmp11 = null;
							//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							switch (_g31.index)
							{
								case 1:
								{
									//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									if (( haxe.lang.Runtime.getField(_g31.params[0], "expr", true) == null )) 
									{
										//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
										tmp11 = ";";
									}
									else
									{
										//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
										switch (((haxe.macro.ExprDef) (haxe.lang.Runtime.getField(haxe.lang.Runtime.getField(_g31.params[0], "expr", true), "expr", true)) ).index)
										{
											case 12:
											{
												//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
												tmp11 = "";
												//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
												break;
											}
											
											
											default:
											{
												//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
												tmp11 = ";";
												//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
												break;
											}
											
										}
										
									}
									
									//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									break;
								}
								
								
								case 0:
								case 2:
								{
									//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									tmp11 = ";";
									//line 275 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									break;
								}
								
								
							}
							
							//line 273 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							_g7.push(( tmp10 + tmp11 ));
						}
						
					}
					
					//line 249 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					tmp1 = ( ( tmp9 + _g7.join("\n") ) + "\n}" );
					//line 268 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 3:
				{
					//line 284 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.macro.ComplexType ct = ((haxe.macro.ComplexType) (_g.params[0]) );
					//line 285 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String tmp12 = ( ( ( "typedef " + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(t, "name", true)) ) + (( (( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "params", true)) ).length > 0 )) ? (( ( "<" + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "params", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypeParamDecl")) ))) )) ).join(", ") ) + ">" )) : ("") )) ) + " = " );
					//line 286 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String tmp13 = null;
					//line 286 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					switch (ct.index)
					{
						case 2:
						{
							//line 288 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							haxe.root.Array<java.lang.Object> fields = ((haxe.root.Array<java.lang.Object>) (ct.params[0]) );
							//line 286 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							tmp13 = this.printStructure(fields);
							//line 288 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							break;
						}
						
						
						case 4:
						{
							//line 287 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							haxe.root.Array<java.lang.Object> fields1 = ((haxe.root.Array<java.lang.Object>) (ct.params[1]) );
							//line 287 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							haxe.root.Array<java.lang.Object> tpl = ((haxe.root.Array<java.lang.Object>) (ct.params[0]) );
							//line 286 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							tmp13 = this.printExtension(tpl, fields1);
							//line 287 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							break;
						}
						
						
						default:
						{
							//line 286 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							tmp13 = this.printComplexType(ct);
							//line 286 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							break;
						}
						
					}
					
					//line 249 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					tmp1 = ( ( tmp12 + tmp13 ) + ";" );
					//line 284 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 4:
				{
					//line 292 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<haxe.macro.ComplexType> to = ((haxe.root.Array<haxe.macro.ComplexType>) (_g.params[2]) );
					//line 292 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<haxe.macro.ComplexType> from = ((haxe.root.Array<haxe.macro.ComplexType>) (_g.params[1]) );
					//line 292 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.macro.ComplexType tthis = ((haxe.macro.ComplexType) (_g.params[0]) );
					//line 293 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String tmp14 = ( ( ( "abstract " + haxe.lang.Runtime.toString(haxe.lang.Runtime.getField(t, "name", true)) ) + (( (( ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "params", true)) ).length > 0 )) ? (( ( "<" + ((haxe.root.Array<java.lang.String>) (((haxe.root.Array) (((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "params", true)) ).map(((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypeParamDecl")) ))) )) ).join(", ") ) + ">" )) : ("") )) ) + (( (( tthis == null )) ? ("") : (( ( "(" + this.printComplexType(tthis) ) + ")" )) )) );
					//line 296 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String tmp15 = null;
					//line 296 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (( from == null )) 
					{
						//line 296 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						tmp15 = "";
					}
					else
					{
						//line 296 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						haxe.root.Array<java.lang.String> _g8 = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
						//line 296 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						{
							//line 296 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							int _g16 = 0;
							//line 296 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							while (( _g16 < from.length ))
							{
								//line 296 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								haxe.macro.ComplexType f2 = from.__get(_g16);
								//line 296 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								 ++ _g16;
								//line 296 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								_g8.push(( " from " + this.printComplexType(f2) ));
							}
							
						}
						
						//line 296 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						tmp15 = _g8.join("");
					}
					
					//line 293 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String tmp16 = ( tmp14 + tmp15 );
					//line 297 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String tmp17 = null;
					//line 297 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (( to == null )) 
					{
						//line 297 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						tmp17 = "";
					}
					else
					{
						//line 297 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						haxe.root.Array<java.lang.String> _g9 = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
						//line 297 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						{
							//line 297 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							int _g17 = 0;
							//line 297 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							while (( _g17 < to.length ))
							{
								//line 297 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								haxe.macro.ComplexType t2 = to.__get(_g17);
								//line 297 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								 ++ _g17;
								//line 297 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
								_g9.push(( " to " + this.printComplexType(t2) ));
							}
							
						}
						
						//line 297 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						tmp17 = _g9.join("");
					}
					
					//line 293 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					java.lang.String tmp18 = ( ( tmp16 + tmp17 ) + " {\n" );
					//line 299 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					haxe.root.Array<java.lang.String> _g10 = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
					//line 299 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					{
						//line 299 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						int _g18 = 0;
						//line 299 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						haxe.root.Array<java.lang.Object> _g23 = ((haxe.root.Array<java.lang.Object>) (haxe.lang.Runtime.getField(t, "fields", true)) );
						//line 299 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						while (( _g18 < _g23.length ))
						{
							//line 299 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.Object f3 = _g23.__get(_g18);
							//line 299 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							 ++ _g18;
							//line 300 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.String fstr1 = this.printField(f3);
							//line 301 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.String tmp19 = ( this.tabs + fstr1 );
							//line 301 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							haxe.macro.FieldType _g32 = ((haxe.macro.FieldType) (haxe.lang.Runtime.getField(f3, "kind", true)) );
							//line 301 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							java.lang.String tmp20 = null;
							//line 301 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							switch (_g32.index)
							{
								case 1:
								{
									//line 303 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									java.lang.Object func1 = _g32.params[0];
									//line 303 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									if (( haxe.lang.Runtime.getField(func1, "expr", true) == null )) 
									{
										//line 301 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
										tmp20 = ";";
									}
									else
									{
										//line 301 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
										tmp20 = "";
									}
									
									//line 303 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									break;
								}
								
								
								case 0:
								case 2:
								{
									//line 301 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									tmp20 = ";";
									//line 301 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									break;
								}
								
								
								default:
								{
									//line 301 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									tmp20 = "";
									//line 301 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
									break;
								}
								
							}
							
							//line 299 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
							_g10.push(( tmp19 + tmp20 ));
						}
						
					}
					
					//line 249 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					tmp1 = ( ( tmp18 + _g10.join("\n") ) + "\n}" );
					//line 292 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
			}
			
			//line 247 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			str = ( tmp + tmp1 );
		}
		
		//line 310 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		this.tabs = old;
		//line 311 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		return str;
	}
	
	
	public <T> java.lang.String opt(T v, haxe.lang.Function f, java.lang.String prefix)
	{
		//line 314 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		if (( prefix == null )) 
		{
			//line 314 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			prefix = "";
		}
		
		//line 314 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		if (( v == null )) 
		{
			//line 314 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			return "";
		}
		else
		{
			//line 314 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			return ( prefix + haxe.lang.Runtime.toString(f.__hx_invoke1_o(0.0, v)) );
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		{
			//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			boolean __temp_executeDef1 = true;
			//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			switch (field.hashCode())
			{
				case 1605453830:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("tabString")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						this.tabString = haxe.lang.Runtime.toString(value);
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return value;
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 3552126:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("tabs")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						this.tabs = haxe.lang.Runtime.toString(value);
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return value;
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
			}
			
			//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			if (__temp_executeDef1) 
			{
				//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		{
			//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			boolean __temp_executeDef1 = true;
			//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			switch (field.hashCode())
			{
				case 110259:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("opt")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "opt")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 3552126:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("tabs")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.tabs;
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 1816734778:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printTypeDefinition")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypeDefinition")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 1605453830:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("tabString")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.tabString;
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 1524190534:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printStructure")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printStructure")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -1796939129:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printUnop")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printUnop")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 767114258:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printExtension")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printExtension")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 111765115:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printBinop")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printBinop")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 114984561:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printExprs")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printExprs")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 2008721394:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("escapeString")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "escapeString")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -1797406142:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printExpr")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printExpr")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 895719989:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printFormatString")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printFormatString")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -1166343878:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printVar")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printVar")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -333280994:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printString")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printString")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 1425444261:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printFunction")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printFunction")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -523305615:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printConstant")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printConstant")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 1068390001:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printFunctionArg")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printFunctionArg")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 1884630342:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printTypeParam")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypeParam")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -1141798128:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printTypeParamDecl")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypeParamDecl")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -631942068:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printTypePath")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printTypePath")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 115450445:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printField")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printField")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -874445027:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printComplexType")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printComplexType")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -864756111:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printAccess")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printAccess")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -405498628:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printMetadata")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "printMetadata")) );
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
			}
			
			//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			if (__temp_executeDef1) 
			{
				//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		{
			//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			boolean __temp_executeDef1 = true;
			//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			switch (field.hashCode())
			{
				case 110259:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("opt")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return haxe.lang.Runtime.toString(this.opt(((java.lang.Object) (dynargs.__get(0)) ), ((haxe.lang.Function) (dynargs.__get(1)) ), haxe.lang.Runtime.toString(dynargs.__get(2))));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -1796939129:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printUnop")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printUnop(((haxe.macro.Unop) (dynargs.__get(0)) ));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 1816734778:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printTypeDefinition")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printTypeDefinition(dynargs.__get(0), dynargs.__get(1));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 111765115:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printBinop")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printBinop(((haxe.macro.Binop) (dynargs.__get(0)) ));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 1524190534:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printStructure")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printStructure(((haxe.root.Array<java.lang.Object>) (dynargs.__get(0)) ));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 2008721394:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("escapeString")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.escapeString(haxe.lang.Runtime.toString(dynargs.__get(0)), haxe.lang.Runtime.toString(dynargs.__get(1)));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 767114258:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printExtension")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printExtension(((haxe.root.Array<java.lang.Object>) (dynargs.__get(0)) ), ((haxe.root.Array<java.lang.Object>) (dynargs.__get(1)) ));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 895719989:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printFormatString")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printFormatString(haxe.lang.Runtime.toString(dynargs.__get(0)));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 114984561:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printExprs")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printExprs(((haxe.root.Array<java.lang.Object>) (dynargs.__get(0)) ), haxe.lang.Runtime.toString(dynargs.__get(1)));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -333280994:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printString")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printString(haxe.lang.Runtime.toString(dynargs.__get(0)));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -1797406142:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printExpr")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printExpr(dynargs.__get(0));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -523305615:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printConstant")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printConstant(((haxe.macro.Constant) (dynargs.__get(0)) ));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -1166343878:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printVar")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printVar(dynargs.__get(0));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 1884630342:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printTypeParam")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printTypeParam(((haxe.macro.TypeParam) (dynargs.__get(0)) ));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 1425444261:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printFunction")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printFunction(dynargs.__get(0));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -631942068:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printTypePath")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printTypePath(dynargs.__get(0));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 1068390001:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printFunctionArg")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printFunctionArg(dynargs.__get(0));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -874445027:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printComplexType")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printComplexType(((haxe.macro.ComplexType) (dynargs.__get(0)) ));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -1141798128:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printTypeParamDecl")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printTypeParamDecl(dynargs.__get(0));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -405498628:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printMetadata")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printMetadata(dynargs.__get(0));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case 115450445:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printField")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printField(dynargs.__get(0));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
				case -864756111:
				{
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					if (field.equals("printAccess")) 
					{
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						__temp_executeDef1 = false;
						//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
						return this.printAccess(((haxe.macro.Access) (dynargs.__get(0)) ));
					}
					
					//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
					break;
				}
				
				
			}
			
			//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			if (__temp_executeDef1) 
			{
				//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		baseArr.push("tabString");
		//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		baseArr.push("tabs");
		//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
		{
			//line 33 "/usr/lib/haxe/std/haxe/macro/Printer.hx"
			super.__hx_getFields(baseArr);
		}
		
	}
	
	
}


