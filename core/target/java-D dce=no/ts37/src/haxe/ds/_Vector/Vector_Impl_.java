// Generated by Haxe 3.3.0
package haxe.ds._Vector;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Vector_Impl_
{
	public static <T1> T1[] _new(int length)
	{
		//line 58 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		T1[] this1 = ((T1[]) (((java.lang.Object) (new java.lang.Object[length]) )) );
		//line 58 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		return ((T1[]) (this1) );
	}
	
	
	public static <T1> T1 get(T1[] this1, int index)
	{
		//line 92 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		return this1[index];
	}
	
	
	public static <T1> T1 set(T1[] this1, int index, T1 val)
	{
		//line 108 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		return this1[index] = val;
	}
	
	
	
	
	public static <T1> int get_length(T1[] this1)
	{
		//line 123 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		return this1.length;
	}
	
	
	public static <T> void blit(T[] src, int srcPos, T[] dest, int destPos, int len)
	{
		//line 143 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		java.lang.System.arraycopy(((java.lang.Object) (src) ), ((int) (srcPos) ), ((java.lang.Object) (dest) ), ((int) (destPos) ), ((int) (len) ));
	}
	
	
	public static <T1> haxe.root.Array<T1> toArray(T1[] this1)
	{
		//line 165 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		haxe.root.Array<T1> a = new haxe.root.Array<T1>();
		//line 166 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		int len = ((T1[]) (this1) ).length;
		//line 171 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		{
			//line 171 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
			int _g1 = 0;
			//line 171 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
			while (( _g1 < len ))
			{
				//line 171 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
				int i = _g1++;
				//line 172 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
				a.__set(i, ((T1) (((T1[]) (this1) )[i]) ));
			}
			
		}
		
		//line 173 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		return a;
	}
	
	
	public static <T1> T1[] toData(T1[] this1)
	{
		//line 183 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		return ((T1[]) (this1) );
	}
	
	
	public static <T> T[] fromData(T[] data)
	{
		//line 193 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		return ((T[]) (data) );
	}
	
	
	public static <T> T[] fromArrayCopy(haxe.root.Array<T> array)
	{
		//line 213 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		T[] ret = ((T[]) (((java.lang.Object) (new java.lang.Object[array.length]) )) );
		//line 213 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		{
			//line 213 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
			int _g1 = 0;
			//line 213 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
			int _g = array.length;
			//line 213 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
			while (( _g1 < _g ))
			{
				//line 213 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
				int i = _g1++;
				//line 213 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
				ret[i] = array.__get(i);
			}
			
		}
		
		//line 213 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		return ((T[]) (ret) );
	}
	
	
	public static <T, T1> T[] copy(T[] this1)
	{
		//line 235 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		T[] this2 = ((T[]) (((java.lang.Object) (new java.lang.Object[((T[]) (this1) ).length]) )) );
		//line 235 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		T[] r = ((T[]) (this2) );
		//line 236 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		java.lang.System.arraycopy(((T[]) (this1) ), ((int) (0) ), ((java.lang.Object) (r) ), ((int) (0) ), ((int) (((T1[]) (((java.lang.Object[]) (this1) )) ).length) ));
		//line 237 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		return r;
	}
	
	
	public static <T, T1> java.lang.String join(T[] this1, java.lang.String sep)
	{
		//line 257 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		haxe.root.StringBuf b = new haxe.root.StringBuf();
		//line 259 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		int len = ((T1[]) (((java.lang.Object[]) (this1) )) ).length;
		//line 260 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		{
			//line 260 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
			int _g1 = 0;
			//line 260 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
			while (( _g1 < len ))
			{
				//line 260 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
				int i = _g1++;
				//line 261 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
				b.add(haxe.lang.Runtime.toString(haxe.root.Std.string(((T1) (((T1[]) (this1) )[i]) ))));
				//line 262 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
				if (( i < ( len - 1 ) )) 
				{
					//line 263 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
					b.add(haxe.lang.Runtime.toString(sep));
				}
				
			}
			
		}
		
		//line 266 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		return b.toString();
	}
	
	
	public static <S, T1> S[] map(T1[] this1, haxe.lang.Function f)
	{
		//line 278 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		int length = ((T1[]) (this1) ).length;
		//line 279 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		S[] this2 = ((S[]) (((java.lang.Object) (new java.lang.Object[length]) )) );
		//line 279 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		S[] r = ((S[]) (this2) );
		//line 282 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		{
			//line 282 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
			int _g1 = 0;
			//line 282 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
			while (( _g1 < length ))
			{
				//line 282 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
				int i = _g1++;
				//line 283 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
				S v = ((S) (f.__hx_invoke1_o(0.0, ((T1) (((T1[]) (this1) )[i]) ))) );
				//line 284 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
				((S[]) (r) )[i] = v;
			}
			
		}
		
		//line 286 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		return r;
	}
	
	
	public static <T, T1> void sort(T[] this1, haxe.lang.Function f)
	{
		//line 303 "/usr/lib/haxe/std/haxe/ds/Vector.hx"
		throw haxe.lang.HaxeException.wrap("not yet supported");
	}
	
	
}


