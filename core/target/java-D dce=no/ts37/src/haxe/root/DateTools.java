// Generated by Haxe 3.3.0
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class DateTools extends haxe.lang.HxObject
{
	static
	{
		//line 136 "/usr/lib/haxe/std/DateTools.hx"
		haxe.root.DateTools.DAYS_OF_MONTH = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31});
	}
	
	public DateTools(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public DateTools()
	{
		//line 30 "/usr/lib/haxe/std/DateTools.hx"
		haxe.root.DateTools.__hx_ctor__DateTools(this);
	}
	
	
	public static void __hx_ctor__DateTools(haxe.root.DateTools __temp_me4)
	{
	}
	
	
	public static java.lang.String __format_get(haxe.root.Date d, java.lang.String e)
	{
		//line 37 "/usr/lib/haxe/std/DateTools.hx"
		{
			//line 37 "/usr/lib/haxe/std/DateTools.hx"
			java.lang.String __temp_svar1 = (e);
			//line 37 "/usr/lib/haxe/std/DateTools.hx"
			int __temp_hash3 = __temp_svar1.hashCode();
			//line 37 "/usr/lib/haxe/std/DateTools.hx"
			boolean __temp_executeDef2 = true;
			//line 37 "/usr/lib/haxe/std/DateTools.hx"
			switch (__temp_hash3)
			{
				case 37:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("%")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return "%";
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 121:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("y")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.StringTools.lpad(haxe.root.Std.string(( (( d.date.getYear() + 1900 )) % 100 )), "0", 2);
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 67:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("C")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.StringTools.lpad(haxe.root.Std.string(((int) (( (( d.date.getYear() + 1900 )) / 100 )) )), "0", 2);
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 119:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("w")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.Std.string(d.date.getDay());
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 68:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("D")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.DateTools.__format(d, "%m/%d/%y");
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 117:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("u")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 77 "/usr/lib/haxe/std/DateTools.hx"
						int t = d.date.getDay();
						//line 78 "/usr/lib/haxe/std/DateTools.hx"
						if (( t == 0 )) 
						{
							//line 37 "/usr/lib/haxe/std/DateTools.hx"
							return "7";
						}
						else
						{
							//line 37 "/usr/lib/haxe/std/DateTools.hx"
							return haxe.root.Std.string(t);
						}
						
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 70:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("F")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.DateTools.__format(d, "%Y-%m-%d");
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 116:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("t")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return "\t";
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 108:
				case 73:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (( (( ( __temp_hash3 == 108 ) && __temp_svar1.equals("l") )) || __temp_svar1.equals("I") )) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 53 "/usr/lib/haxe/std/DateTools.hx"
						int hour = ( d.date.getHours() % 12 );
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.StringTools.lpad(haxe.root.Std.string(( (( hour == 0 )) ? (12) : (hour) )), ( (haxe.lang.Runtime.valEq(e, "I")) ? ("0") : (" ") ), 2);
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 115:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("s")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.Std.string(((int) (( ((double) (d.date.getTime()) ) / 1000 )) ));
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 77:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("M")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.StringTools.lpad(haxe.root.Std.string(d.date.getMinutes()), "0", 2);
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 114:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("r")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.DateTools.__format(d, "%I:%M:%S %p");
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 82:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("R")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.DateTools.__format(d, "%H:%M");
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 112:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("p")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 62 "/usr/lib/haxe/std/DateTools.hx"
						if (( d.date.getHours() > 11 )) 
						{
							//line 37 "/usr/lib/haxe/std/DateTools.hx"
							return "PM";
						}
						else
						{
							//line 37 "/usr/lib/haxe/std/DateTools.hx"
							return "AM";
						}
						
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 83:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("S")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.StringTools.lpad(haxe.root.Std.string(d.date.getSeconds()), "0", 2);
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 110:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("n")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return "\n";
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 84:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("T")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.DateTools.__format(d, "%H:%M:%S");
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 109:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("m")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.StringTools.lpad(haxe.root.Std.string(( d.date.getMonth() + 1 )), "0", 2);
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 89:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("Y")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.Std.string(( d.date.getYear() + 1900 ));
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 107:
				case 72:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (( (( ( __temp_hash3 == 107 ) && __temp_svar1.equals("k") )) || __temp_svar1.equals("H") )) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.StringTools.lpad(haxe.root.Std.string(d.date.getHours()), ( (haxe.lang.Runtime.valEq(e, "H")) ? ("0") : (" ") ), 2);
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 100:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("d")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.StringTools.lpad(haxe.root.Std.string(d.date.getDate()), "0", 2);
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
				case 101:
				{
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					if (__temp_svar1.equals("e")) 
					{
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						__temp_executeDef2 = false;
						//line 37 "/usr/lib/haxe/std/DateTools.hx"
						return haxe.root.Std.string(d.date.getDate());
					}
					
					//line 37 "/usr/lib/haxe/std/DateTools.hx"
					break;
				}
				
				
			}
			
			//line 87 "/usr/lib/haxe/std/DateTools.hx"
			if (__temp_executeDef2) 
			{
				//line 87 "/usr/lib/haxe/std/DateTools.hx"
				throw haxe.lang.HaxeException.wrap(( ( "Date.format %" + e ) + "- not implemented yet." ));
			}
			else
			{
				//line 87 "/usr/lib/haxe/std/DateTools.hx"
				throw null;
			}
			
		}
		
	}
	
	
	public static java.lang.String __format(haxe.root.Date d, java.lang.String f)
	{
		//line 92 "/usr/lib/haxe/std/DateTools.hx"
		haxe.root.StringBuf r = new haxe.root.StringBuf();
		//line 93 "/usr/lib/haxe/std/DateTools.hx"
		int p = 0;
		//line 94 "/usr/lib/haxe/std/DateTools.hx"
		while (true)
		{
			//line 95 "/usr/lib/haxe/std/DateTools.hx"
			int np = haxe.lang.StringExt.indexOf(f, "%", p);
			//line 96 "/usr/lib/haxe/std/DateTools.hx"
			if (( np < 0 )) 
			{
				//line 97 "/usr/lib/haxe/std/DateTools.hx"
				break;
			}
			
			//line 99 "/usr/lib/haxe/std/DateTools.hx"
			r.addSub(f, p, ( np - p ));
			//line 100 "/usr/lib/haxe/std/DateTools.hx"
			r.add(haxe.lang.Runtime.toString(haxe.root.DateTools.__format_get(d, haxe.lang.StringExt.substr(f, ( np + 1 ), 1))));
			//line 102 "/usr/lib/haxe/std/DateTools.hx"
			p = ( np + 2 );
		}
		
		//line 104 "/usr/lib/haxe/std/DateTools.hx"
		r.addSub(f, p, ( f.length() - p ));
		//line 105 "/usr/lib/haxe/std/DateTools.hx"
		return r.toString();
	}
	
	
	public static java.lang.String format(haxe.root.Date d, java.lang.String f)
	{
		//line 122 "/usr/lib/haxe/std/DateTools.hx"
		return haxe.root.DateTools.__format(d, f);
	}
	
	
	public static haxe.root.Date delta(haxe.root.Date d, double t)
	{
		//line 133 "/usr/lib/haxe/std/DateTools.hx"
		return haxe.root.Date.fromTime(( ((double) (d.date.getTime()) ) + t ));
	}
	
	
	public static haxe.root.Array<java.lang.Object> DAYS_OF_MONTH;
	
	public static int getMonthDays(haxe.root.Date d)
	{
		//line 144 "/usr/lib/haxe/std/DateTools.hx"
		int month = d.date.getMonth();
		//line 145 "/usr/lib/haxe/std/DateTools.hx"
		int year = ( d.date.getYear() + 1900 );
		//line 147 "/usr/lib/haxe/std/DateTools.hx"
		if (( month != 1 )) 
		{
			//line 148 "/usr/lib/haxe/std/DateTools.hx"
			return ((int) (haxe.lang.Runtime.toInt(haxe.root.DateTools.DAYS_OF_MONTH.__get(month))) );
		}
		
		//line 150 "/usr/lib/haxe/std/DateTools.hx"
		boolean isB = ( ( ( ( year % 4 ) == 0 ) && ( ( year % 100 ) != 0 ) ) || ( ( year % 400 ) == 0 ) );
		//line 151 "/usr/lib/haxe/std/DateTools.hx"
		if (isB) 
		{
			//line 151 "/usr/lib/haxe/std/DateTools.hx"
			return 29;
		}
		else
		{
			//line 151 "/usr/lib/haxe/std/DateTools.hx"
			return 28;
		}
		
	}
	
	
	public static double seconds(double n)
	{
		//line 158 "/usr/lib/haxe/std/DateTools.hx"
		return ( n * 1000.0 );
	}
	
	
	public static double minutes(double n)
	{
		//line 165 "/usr/lib/haxe/std/DateTools.hx"
		return ( ( n * 60.0 ) * 1000.0 );
	}
	
	
	public static double hours(double n)
	{
		//line 172 "/usr/lib/haxe/std/DateTools.hx"
		return ( ( ( n * 60.0 ) * 60.0 ) * 1000.0 );
	}
	
	
	public static double days(double n)
	{
		//line 179 "/usr/lib/haxe/std/DateTools.hx"
		return ( ( ( ( n * 24.0 ) * 60.0 ) * 60.0 ) * 1000.0 );
	}
	
	
	public static java.lang.Object parse(double t)
	{
		//line 186 "/usr/lib/haxe/std/DateTools.hx"
		double s = ( t / 1000 );
		//line 187 "/usr/lib/haxe/std/DateTools.hx"
		double m = ( s / 60 );
		//line 188 "/usr/lib/haxe/std/DateTools.hx"
		double h = ( m / 60 );
		//line 189 "/usr/lib/haxe/std/DateTools.hx"
		return new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"days", "hours", "minutes", "ms", "seconds"}, new double[]{((double) (((double) (((int) (( h / 24 )) )) )) ), ((double) (((double) (((int) (( h % 24 )) )) )) ), ((double) (((double) (((int) (( m % 60 )) )) )) ), ((double) (( t % 1000 )) ), ((double) (((double) (((int) (( s % 60 )) )) )) )});
	}
	
	
	public static double make(java.lang.Object o)
	{
		//line 202 "/usr/lib/haxe/std/DateTools.hx"
		return ( haxe.lang.Runtime.getField_f(o, "ms", true) + ( 1000.0 * (( ((int) (haxe.lang.Runtime.getField_f(o, "seconds", true)) ) + ( 60.0 * (( ((int) (haxe.lang.Runtime.getField_f(o, "minutes", true)) ) + ( 60.0 * (( ((int) (haxe.lang.Runtime.getField_f(o, "hours", true)) ) + ( ((double) (24.0) ) * ((double) (((int) (haxe.lang.Runtime.getField_f(o, "days", true)) )) ) ) )) ) )) ) )) ) );
	}
	
	
	public static java.lang.Object __hx_createEmpty()
	{
		//line 30 "/usr/lib/haxe/std/DateTools.hx"
		return new haxe.root.DateTools(haxe.lang.EmptyObject.EMPTY);
	}
	
	
	public static java.lang.Object __hx_create(haxe.root.Array arr)
	{
		//line 30 "/usr/lib/haxe/std/DateTools.hx"
		return new haxe.root.DateTools();
	}
	
	
}


