// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.macro {
	public class TypeTools : global::haxe.lang.HxObject {
		
		public TypeTools(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public TypeTools() {
			global::haxe.macro.TypeTools.__hx_ctor_haxe_macro_TypeTools(this);
		}
		
		
		public static void __hx_ctor_haxe_macro_TypeTools(global::haxe.macro.TypeTools __temp_me90) {
		}
		
		
		public static global::haxe.macro.ComplexType nullable(global::haxe.macro.ComplexType complexType) {
			object __temp_stmt3 = null;
			{
				global::Array<object> __temp_odecl1 = new global::Array<object>(new object[]{global::haxe.macro.TypeParam.TPType(complexType)});
				__temp_stmt3 = new global::haxe.lang.DynamicObject(new int[]{1224700491, 1246877401, 1836776262}, new object[]{"Null", new global::Array<object>(new object[]{}), __temp_odecl1}, new int[]{}, new double[]{});
			}
			
			global::haxe.macro.ComplexType __temp_stmt2 = global::haxe.macro.ComplexType.TPath(__temp_stmt3);
			return ((global::haxe.macro.ComplexType) (__temp_stmt2) );
		}
		
		
		public static object toField(object cf) {
			unchecked {
				global::haxe.lang.Function varAccessToString = ( (( global::haxe.macro.TypeTools_toField_41__Fun.__hx_current != null )) ? (global::haxe.macro.TypeTools_toField_41__Fun.__hx_current) : (global::haxe.macro.TypeTools_toField_41__Fun.__hx_current = ((global::haxe.macro.TypeTools_toField_41__Fun) (new global::haxe.macro.TypeTools_toField_41__Fun()) )) );
				if (( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(cf, "params", 1836776262, true)) ))) ).length == 0 )) {
					global::Array<object> tmp = ( (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.getField(cf, "isPublic", 1063066675, true))) ? (new global::Array<object>(new object[]{global::haxe.macro.Access.APublic})) : (new global::Array<object>(new object[]{global::haxe.macro.Access.APrivate})) );
					global::haxe.macro.FieldType tmp1 = null;
					global::haxe.macro.Type _g = ((global::haxe.macro.Type) (global::haxe.lang.Runtime.getField(cf, "type", 1292432058, true)) );
					global::haxe.macro.FieldKind _g1 = ((global::haxe.macro.FieldKind) (global::haxe.lang.Runtime.getField(cf, "kind", 1191829844, true)) );
					switch (_g1.index) {
						case 0:
						{
							tmp1 = global::haxe.macro.FieldType.FProp(global::haxe.lang.Runtime.toString(varAccessToString.__hx_invoke2_o(default(double), ((global::haxe.macro.VarAccess) (_g1.@params[0]) ), default(double), "get")), global::haxe.lang.Runtime.toString(varAccessToString.__hx_invoke2_o(default(double), ((global::haxe.macro.VarAccess) (_g1.@params[1]) ), default(double), "set")), global::haxe.macro.TypeTools.toComplexType(_g), null);
							break;
						}
						
						
						case 1:
						{
							if (( _g.index == 4 )) {
								global::haxe.macro.Type ret = ((global::haxe.macro.Type) (_g.@params[1]) );
								global::Array<object> args = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) );
								global::Array<object> _g2 = new global::Array<object>(new object[]{});
								{
									int _g11 = 0;
									while (( _g11 < args.length )) {
										object a = args[_g11];
										 ++ _g11;
										object __temp_stmt9 = null;
										{
											string __temp_odecl1 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(a, "name", 1224700491, true));
											bool __temp_odecl2 = global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.getField(a, "opt", 5545011, true));
											global::haxe.macro.ComplexType __temp_odecl3 = global::haxe.macro.TypeTools.toComplexType(((global::haxe.macro.Type) (global::haxe.lang.Runtime.getField(a, "t", 116, true)) ));
											__temp_stmt9 = new global::haxe.lang.DynamicObject(new int[]{5545011, 1224700491, 1292432058}, new object[]{__temp_odecl2, __temp_odecl1, __temp_odecl3}, new int[]{}, new double[]{});
										}
										
										_g2.push(__temp_stmt9);
									}
									
								}
								
								object __temp_stmt10 = null;
								{
									global::haxe.macro.ComplexType __temp_odecl4 = global::haxe.macro.TypeTools.toComplexType(ret);
									__temp_stmt10 = new global::haxe.lang.DynamicObject(new int[]{5691745, 1081380189, 1126038837}, new object[]{__temp_odecl4, _g2, null}, new int[]{}, new double[]{});
								}
								
								tmp1 = global::haxe.macro.FieldType.FFun(__temp_stmt10);
							}
							else {
								throw global::haxe.lang.HaxeException.wrap("Invalid TAnonymous");
							}
							
							break;
						}
						
						
					}
					
					{
						string __temp_odecl5 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(cf, "name", 1224700491, true));
						string __temp_odecl6 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(cf, "doc", 4997752, true));
						object __temp_odecl7 = global::haxe.lang.Runtime.getField(cf, "pos", 5594516, true);
						global::Array<object> __temp_odecl8 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.callField(global::haxe.lang.Runtime.getField(cf, "meta", 1213811397, true), "get", 5144726, null)) ))) );
						return new global::haxe.lang.DynamicObject(new int[]{4997752, 5594516, 184980900, 1191829844, 1213811397, 1224700491}, new object[]{__temp_odecl6, __temp_odecl7, tmp, tmp1, __temp_odecl8, __temp_odecl5}, new int[]{}, new double[]{});
					}
					
				}
				else {
					throw global::haxe.lang.HaxeException.wrap("Invalid TAnonymous");
				}
				
			}
		}
		
		
		public static global::haxe.macro.ComplexType toComplexType(global::haxe.macro.Type type) {
			unchecked {
				if (( type == null )) {
					return null;
				}
				else {
					switch (type.index) {
						case 0:
						{
							global::haxe.macro.Type _hx_tmp = ((global::haxe.macro.Type) (global::haxe.lang.Runtime.callField(type.@params[0], "get", 5144726, null)) );
							if (( _hx_tmp == null )) {
								return null;
							}
							else {
								return global::haxe.macro.TypeTools.toComplexType(_hx_tmp);
							}
							
						}
						
						
						case 1:
						{
							return global::haxe.macro.ComplexType.TPath(global::haxe.macro.TypeTools.toTypePath(((object) (global::haxe.lang.Runtime.callField(type.@params[0], "get", 5144726, null)) ), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (type.@params[1]) ))) )));
						}
						
						
						case 2:
						{
							object _hx_tmp1 = ((object) (global::haxe.lang.Runtime.callField(type.@params[0], "get", 5144726, null)) );
							global::Array<object> @params = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (type.@params[1]) ))) );
							if (( ((global::haxe.macro.ClassKind) (global::haxe.lang.Runtime.getField(_hx_tmp1, "kind", 1191829844, true)) ).index == 1 )) {
								object __temp_stmt3 = null;
								{
									string __temp_odecl1 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(_hx_tmp1, "name", 1224700491, true));
									__temp_stmt3 = new global::haxe.lang.DynamicObject(new int[]{1224700491, 1246877401}, new object[]{__temp_odecl1, new global::Array<object>(new object[]{})}, new int[]{}, new double[]{});
								}
								
								return global::haxe.macro.ComplexType.TPath(__temp_stmt3);
							}
							else {
								return global::haxe.macro.ComplexType.TPath(global::haxe.macro.TypeTools.toTypePath(_hx_tmp1, @params));
							}
							
						}
						
						
						case 3:
						{
							return global::haxe.macro.ComplexType.TPath(global::haxe.macro.TypeTools.toTypePath(((object) (global::haxe.lang.Runtime.callField(type.@params[0], "get", 5144726, null)) ), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (type.@params[1]) ))) )));
						}
						
						
						case 4:
						{
							global::haxe.macro.Type ret = ((global::haxe.macro.Type) (type.@params[1]) );
							global::Array<object> args = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (type.@params[0]) ))) );
							global::Array<object> _g = new global::Array<object>(new object[]{});
							{
								int _g1 = 0;
								while (( _g1 < args.length )) {
									object a = args[_g1];
									 ++ _g1;
									_g.push(( (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.getField(a, "opt", 5545011, true))) ? (global::haxe.macro.TypeTools.nullable(global::haxe.macro.TypeTools.toComplexType(((global::haxe.macro.Type) (global::haxe.lang.Runtime.getField(a, "t", 116, true)) )))) : (global::haxe.macro.TypeTools.toComplexType(((global::haxe.macro.Type) (global::haxe.lang.Runtime.getField(a, "t", 116, true)) ))) ));
								}
								
							}
							
							return global::haxe.macro.ComplexType.TFunction(_g, global::haxe.macro.TypeTools.toComplexType(ret));
						}
						
						
						case 5:
						{
							global::Array<object> fields = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(((object) (global::haxe.lang.Runtime.callField(type.@params[0], "get", 5144726, null)) ), "fields", 9342585, true)) ))) );
							global::Array<object> _g2 = new global::Array<object>(new object[]{});
							{
								int _g11 = 0;
								while (( _g11 < fields.length )) {
									object cf = fields[_g11];
									 ++ _g11;
									_g2.push(global::haxe.macro.TypeTools.toField(cf));
								}
								
							}
							
							return global::haxe.macro.ComplexType.TAnonymous(_g2);
						}
						
						
						case 6:
						{
							global::haxe.macro.Type t = ((global::haxe.macro.Type) (type.@params[0]) );
							if (( t == null )) {
								return ((global::haxe.macro.ComplexType) (global::haxe.macro.ComplexType.TPath(new global::haxe.lang.DynamicObject(new int[]{1224700491, 1246877401, 1836776262}, new object[]{"Dynamic", new global::Array<object>(new object[]{}), new global::Array<object>(new object[]{})}, new int[]{}, new double[]{}))) );
							}
							else {
								object __temp_stmt5 = null;
								{
									global::Array<object> __temp_odecl2 = new global::Array<object>(new object[]{global::haxe.macro.TypeParam.TPType(global::haxe.macro.TypeTools.toComplexType(t))});
									__temp_stmt5 = new global::haxe.lang.DynamicObject(new int[]{1224700491, 1246877401, 1836776262}, new object[]{"Dynamic", new global::Array<object>(new object[]{}), __temp_odecl2}, new int[]{}, new double[]{});
								}
								
								global::haxe.macro.ComplexType __temp_stmt4 = global::haxe.macro.ComplexType.TPath(__temp_stmt5);
								return ((global::haxe.macro.ComplexType) (__temp_stmt4) );
							}
							
						}
						
						
						case 7:
						{
							return global::haxe.macro.TypeTools.toComplexType(((global::haxe.macro.Type) (((global::haxe.lang.Function) (type.@params[0]) ).__hx_invoke0_o()) ));
						}
						
						
						case 8:
						{
							return global::haxe.macro.ComplexType.TPath(global::haxe.macro.TypeTools.toTypePath(((object) (global::haxe.lang.Runtime.callField(type.@params[0], "get", 5144726, null)) ), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (type.@params[1]) ))) )));
						}
						
						
					}
					
				}
				
				return null;
			}
		}
		
		
		public static object toTypePath(object baseType, global::Array<object> @params) {
			unchecked {
				string module = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(baseType, "module", 1087583404, true));
				string tmp = global::haxe.lang.StringExt.substring(module, ( global::haxe.lang.StringExt.lastIndexOf(module, ".", default(global::haxe.lang.Null<int>)) + 1 ), default(global::haxe.lang.Null<int>));
				global::Array<object> _g = new global::Array<object>(new object[]{});
				{
					int _g1 = 0;
					while (( _g1 < @params.length )) {
						global::haxe.macro.Type t = ((global::haxe.macro.Type) (@params[_g1]) );
						 ++ _g1;
						_g.push(global::haxe.macro.TypeParam.TPType(global::haxe.macro.TypeTools.toComplexType(t)));
					}
					
				}
				
				{
					global::Array<object> __temp_odecl1 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(baseType, "pack", 1246877401, true)) ))) );
					string __temp_odecl2 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(baseType, "name", 1224700491, true));
					return new global::haxe.lang.DynamicObject(new int[]{5745024, 1224700491, 1246877401, 1836776262}, new object[]{__temp_odecl2, tmp, __temp_odecl1, _g}, new int[]{}, new double[]{});
				}
				
			}
		}
		
		
		public static object findField(object c, string name, global::haxe.lang.Null<bool> isStatic) {
			bool __temp_isStatic89 = ( ( ! (isStatic.hasValue) ) ? (false) : ((isStatic).@value) );
			object field = (global::Lambda.find<object>(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.callField((( (__temp_isStatic89) ? (global::haxe.lang.Runtime.getField(c, "statics", 912604165, true)) : (global::haxe.lang.Runtime.getField(c, "fields", 9342585, true)) )), "get", 5144726, null)) ))) ), ((global::haxe.lang.Function) (new global::haxe.macro.TypeTools_findField_347__Fun(name)) ))).@value;
			if (( field != null )) {
				return field;
			}
			else if (( global::haxe.lang.Runtime.getField(c, "superClass", 671590589, true) != null )) {
				return global::haxe.macro.TypeTools.findField(((object) (global::haxe.lang.Runtime.callField(global::haxe.lang.Runtime.getField(global::haxe.lang.Runtime.getField(c, "superClass", 671590589, true), "t", 116, true), "get", 5144726, null)) ), name, new global::haxe.lang.Null<bool>(__temp_isStatic89, true));
			}
			else {
				return null;
			}
			
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::haxe.macro.TypeTools(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::haxe.macro.TypeTools();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.macro {
	public class TypeTools_toField_41__Fun : global::haxe.lang.Function {
		
		public TypeTools_toField_41__Fun() : base(2, 0) {
		}
		
		
		public static global::haxe.macro.TypeTools_toField_41__Fun __hx_current;
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				string getOrSet = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.toString(__fn_float2)) : (global::haxe.lang.Runtime.toString(__fn_dyn2)) );
				global::haxe.macro.VarAccess va = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.macro.VarAccess) (((object) (__fn_float1) )) )) : (((global::haxe.macro.VarAccess) (__fn_dyn1) )) );
				switch (va.index) {
					case 0:
					{
						return "default";
					}
					
					
					case 1:
					{
						return "null";
					}
					
					
					case 2:
					{
						return "never";
					}
					
					
					case 3:
					{
						throw global::haxe.lang.HaxeException.wrap("Invalid TAnonymous");
					}
					
					
					case 4:
					{
						return getOrSet;
					}
					
					
					case 5:
					{
						return "default";
					}
					
					
					case 6:
					{
						return "default";
					}
					
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.macro {
	public class TypeTools_findField_347__Fun : global::haxe.lang.Function {
		
		public TypeTools_findField_347__Fun(string name) : base(1, 0) {
			this.name = name;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object field1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field1, "name", 1224700491, true)), this.name);
		}
		
		
		public string name;
		
	}
}


