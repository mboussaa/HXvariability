// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.macro {
	public class Printer : global::haxe.lang.HxObject {
		
		public Printer(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Printer(string tabString) {
			global::haxe.macro.Printer.__hx_ctor_haxe_macro_Printer(this, tabString);
		}
		
		
		public static void __hx_ctor_haxe_macro_Printer(global::haxe.macro.Printer __temp_me88, string tabString) {
			if (string.Equals(tabString, null)) {
				tabString = "\t";
			}
			
			__temp_me88.tabs = "";
			__temp_me88.tabString = tabString;
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::haxe.macro.Printer(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::haxe.macro.Printer(global::haxe.lang.Runtime.toString(arr[0]));
		}
		
		
		public string tabs;
		
		public string tabString;
		
		public virtual string printUnop(global::haxe.macro.Unop op) {
			unchecked {
				switch (op.index) {
					case 0:
					{
						return "++";
					}
					
					
					case 1:
					{
						return "--";
					}
					
					
					case 2:
					{
						return "!";
					}
					
					
					case 3:
					{
						return "-";
					}
					
					
					case 4:
					{
						return "~";
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public virtual string printBinop(global::haxe.macro.Binop op) {
			unchecked {
				switch (op.index) {
					case 0:
					{
						return "+";
					}
					
					
					case 1:
					{
						return "*";
					}
					
					
					case 2:
					{
						return "/";
					}
					
					
					case 3:
					{
						return "-";
					}
					
					
					case 4:
					{
						return "=";
					}
					
					
					case 5:
					{
						return "==";
					}
					
					
					case 6:
					{
						return "!=";
					}
					
					
					case 7:
					{
						return ">";
					}
					
					
					case 8:
					{
						return ">=";
					}
					
					
					case 9:
					{
						return "<";
					}
					
					
					case 10:
					{
						return "<=";
					}
					
					
					case 11:
					{
						return "&";
					}
					
					
					case 12:
					{
						return "|";
					}
					
					
					case 13:
					{
						return "^";
					}
					
					
					case 14:
					{
						return "&&";
					}
					
					
					case 15:
					{
						return "||";
					}
					
					
					case 16:
					{
						return "<<";
					}
					
					
					case 17:
					{
						return ">>";
					}
					
					
					case 18:
					{
						return ">>>";
					}
					
					
					case 19:
					{
						return "%";
					}
					
					
					case 20:
					{
						return global::haxe.lang.Runtime.concat(this.printBinop(((global::haxe.macro.Binop) (op.@params[0]) )), "=");
					}
					
					
					case 21:
					{
						return "...";
					}
					
					
					case 22:
					{
						return "=>";
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public virtual string escapeString(string s, string delim) {
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(delim, global::StringTools.replace(global::StringTools.replace(global::StringTools.replace(global::StringTools.replace(global::StringTools.replace(s, "\n", "\\n"), "\t", "\\t"), "\'", "\\\'"), "\"", "\\\""), "\u0000", "\\x00")), delim);
		}
		
		
		public virtual string printFormatString(string s) {
			return this.escapeString(s, "\'");
		}
		
		
		public virtual string printString(string s) {
			return this.escapeString(s, "\"");
		}
		
		
		public virtual string printConstant(global::haxe.macro.Constant c) {
			unchecked {
				switch (c.index) {
					case 0:
					{
						return global::haxe.lang.Runtime.toString(c.@params[0]);
					}
					
					
					case 1:
					{
						return global::haxe.lang.Runtime.toString(c.@params[0]);
					}
					
					
					case 2:
					{
						return this.printString(global::haxe.lang.Runtime.toString(c.@params[0]));
					}
					
					
					case 3:
					{
						return global::haxe.lang.Runtime.toString(c.@params[0]);
					}
					
					
					case 4:
					{
						return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("~/", global::haxe.lang.Runtime.toString(c.@params[0])), "/"), global::haxe.lang.Runtime.toString(c.@params[1]));
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public virtual string printTypeParam(global::haxe.macro.TypeParam param) {
			unchecked {
				switch (param.index) {
					case 0:
					{
						return this.printComplexType(((global::haxe.macro.ComplexType) (param.@params[0]) ));
					}
					
					
					case 1:
					{
						return this.printExpr(param.@params[0]);
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public virtual string printTypePath(object tp) {
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat((( (( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(tp, "pack", 1246877401, true)) ))) ).length > 0 )) ? (global::haxe.lang.Runtime.concat(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(tp, "pack", 1246877401, true)) ))) ).@join("."), ".")) : ("") )), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tp, "name", 1224700491, true))), (( ( ! (string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tp, "sub", 5745024, true)), null)) ) ? (global::haxe.lang.Runtime.concat(".", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tp, "sub", 5745024, true)))) : ("") ))), (( (( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(tp, "params", 1836776262, true)) ))) ) == null )) ? ("") : (( (( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(tp, "params", 1836776262, true)) ))) ).length > 0 )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("<", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(tp, "params", 1836776262, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypeParam", 1482782086)) )).@join(", ")), ">")) : ("") )) )));
		}
		
		
		public virtual string printComplexType(global::haxe.macro.ComplexType ct) {
			unchecked {
				switch (ct.index) {
					case 0:
					{
						return this.printTypePath(ct.@params[0]);
					}
					
					
					case 1:
					{
						global::haxe.macro.ComplexType ret = ((global::haxe.macro.ComplexType) (ct.@params[1]) );
						global::Array<object> args = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (ct.@params[0]) ))) );
						return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat((( (( args.length > 0 )) ? (args.map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printComplexType", 1209459165)) )).@join(" -> ")) : ("Void") )), " -> "), this.printComplexType(ret));
					}
					
					
					case 2:
					{
						global::Array<object> fields = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (ct.@params[0]) ))) );
						global::Array<object> _g = new global::Array<object>(new object[]{});
						{
							int _g1 = 0;
							while (( _g1 < fields.length )) {
								object f = fields[_g1];
								 ++ _g1;
								_g.push(global::haxe.lang.Runtime.concat(this.printField(f), "; "));
							}
							
						}
						
						return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("{ ", _g.@join("")), "}");
					}
					
					
					case 3:
					{
						return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("(", this.printComplexType(((global::haxe.macro.ComplexType) (ct.@params[0]) ))), ")");
					}
					
					
					case 4:
					{
						return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("{> ", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (ct.@params[0]) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypePath", 1826714316)) )).@join(" >, ")), ", "), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (ct.@params[1]) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printField", 1495656781)) )).@join(", ")), " }");
					}
					
					
					case 5:
					{
						return global::haxe.lang.Runtime.concat("?", this.printComplexType(((global::haxe.macro.ComplexType) (ct.@params[0]) )));
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public virtual string printMetadata(object meta) {
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("@", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(meta, "name", 1224700491, true))), (( (( ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(meta, "params", 1836776262, true)) ))) ) != null ) && ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(meta, "params", 1836776262, true)) ))) ).length > 0 ) )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("(", this.printExprs(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(meta, "params", 1836776262, true)) ))) ), ", ")), ")")) : ("") )));
		}
		
		
		public virtual string printAccess(global::haxe.macro.Access access) {
			unchecked {
				switch (access.index) {
					case 0:
					{
						return "public";
					}
					
					
					case 1:
					{
						return "private";
					}
					
					
					case 2:
					{
						return "static";
					}
					
					
					case 3:
					{
						return "override";
					}
					
					
					case 4:
					{
						return "dynamic";
					}
					
					
					case 5:
					{
						return "inline";
					}
					
					
					case 6:
					{
						return "macro";
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public virtual string printField(object field) {
			unchecked {
				string tmp = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat((( ((  ! (string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "doc", 4997752, true)), null))  &&  ! (string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "doc", 4997752, true)), ""))  )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("/**\n", this.tabs), this.tabString), global::StringTools.replace(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "doc", 4997752, true)), "\n", global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\n", this.tabs), this.tabString))), "\n"), this.tabs), "**/\n"), this.tabs)) : ("") )), (( (( ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(field, "meta", 1213811397, true)) ))) ) != null ) && ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(field, "meta", 1213811397, true)) ))) ).length > 0 ) )) ? (global::haxe.lang.Runtime.concat(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(field, "meta", 1213811397, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printMetadata", 1977512124)) )).@join(global::haxe.lang.Runtime.concat("\n", this.tabs)), (global::haxe.lang.Runtime.concat("\n", this.tabs)))) : ("") ))), (( (( ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(field, "access", 184980900, true)) ))) ) != null ) && ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(field, "access", 184980900, true)) ))) ).length > 0 ) )) ? (global::haxe.lang.Runtime.concat(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(field, "access", 184980900, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printAccess", 847135153)) )).@join(" "), " ")) : ("") )));
				global::haxe.macro.FieldType _g = ((global::haxe.macro.FieldType) (global::haxe.lang.Runtime.getField(field, "kind", 1191829844, true)) );
				string tmp1 = null;
				switch (_g.index) {
					case 0:
					{
						tmp1 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("var ", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "name", 1224700491, true))), this.opt<object>(((global::haxe.macro.ComplexType) (_g.@params[0]) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printComplexType", 1209459165)) ), ((string) (" : ") ))), this.opt<object>(((object) (_g.@params[1]) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printExpr", 1142332418)) ), ((string) (" = ") )));
						break;
					}
					
					
					case 1:
					{
						tmp1 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("function ", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "name", 1224700491, true))), this.printFunction(_g.@params[0]));
						break;
					}
					
					
					case 2:
					{
						tmp1 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("var ", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "name", 1224700491, true))), "("), global::haxe.lang.Runtime.toString(_g.@params[0])), ", "), global::haxe.lang.Runtime.toString(_g.@params[1])), ")"), this.opt<object>(((global::haxe.macro.ComplexType) (_g.@params[2]) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printComplexType", 1209459165)) ), ((string) (" : ") ))), this.opt<object>(((object) (_g.@params[3]) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printExpr", 1142332418)) ), ((string) (" = ") )));
						break;
					}
					
					
				}
				
				return global::haxe.lang.Runtime.concat(tmp, tmp1);
			}
		}
		
		
		public virtual string printTypeParamDecl(object tpd) {
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(tpd, "name", 1224700491, true)), (( (( ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(tpd, "params", 1836776262, true)) ))) ) != null ) && ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(tpd, "params", 1836776262, true)) ))) ).length > 0 ) )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("<", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(tpd, "params", 1836776262, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypeParamDecl", 1404120336)) )).@join(", ")), ">")) : ("") ))), (( (( ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(tpd, "constraints", 397693302, true)) ))) ) != null ) && ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(tpd, "constraints", 397693302, true)) ))) ).length > 0 ) )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(":(", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(tpd, "constraints", 397693302, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printComplexType", 1209459165)) )).@join(", ")), ")")) : ("") )));
		}
		
		
		public virtual string printFunctionArg(object arg) {
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat((( (((global::haxe.lang.Null<object>.ofDynamic<bool>(global::haxe.lang.Runtime.getField(arg, "opt", 5545011, true)))).@value) ? ("?") : ("") )), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(arg, "name", 1224700491, true))), this.opt<object>(((global::haxe.macro.ComplexType) (global::haxe.lang.Runtime.getField(arg, "type", 1292432058, true)) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printComplexType", 1209459165)) ), ((string) (":") ))), this.opt<object>(((object) (global::haxe.lang.Runtime.getField(arg, "value", 834174833, true)) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printExpr", 1142332418)) ), ((string) (" = ") )));
		}
		
		
		public virtual string printFunction(object func) {
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat((( (( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(func, "params", 1836776262, true)) ))) ) == null )) ? ("") : (( (( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(func, "params", 1836776262, true)) ))) ).length > 0 )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("<", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(func, "params", 1836776262, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypeParamDecl", 1404120336)) )).@join(", ")), ">")) : ("") )) )), "("), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(func, "args", 1081380189, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printFunctionArg", 5607153)) )).@join(", ")), ")"), this.opt<object>(((global::haxe.macro.ComplexType) (global::haxe.lang.Runtime.getField(func, "ret", 5691745, true)) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printComplexType", 1209459165)) ), ((string) (":") ))), this.opt<object>(((object) (global::haxe.lang.Runtime.getField(func, "expr", 1126038837, true)) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printExpr", 1142332418)) ), ((string) (" ") )));
		}
		
		
		public virtual string printVar(object v) {
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(v, "name", 1224700491, true)), this.opt<object>(((global::haxe.macro.ComplexType) (global::haxe.lang.Runtime.getField(v, "type", 1292432058, true)) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printComplexType", 1209459165)) ), ((string) (":") ))), this.opt<object>(((object) (global::haxe.lang.Runtime.getField(v, "expr", 1126038837, true)) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printExpr", 1142332418)) ), ((string) (" = ") )));
		}
		
		
		public virtual string printExpr(object e) {
			unchecked {
				global::haxe.macro.Printer _gthis = this;
				if (( e == null )) {
					return "#NULL";
				}
				else {
					global::haxe.macro.ExprDef _g = ((global::haxe.macro.ExprDef) (global::haxe.lang.Runtime.getField(e, "expr", 1126038837, true)) );
					switch (_g.index) {
						case 0:
						{
							return this.printConstant(((global::haxe.macro.Constant) (_g.@params[0]) ));
						}
						
						
						case 1:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", this.printExpr(_g.@params[0])), "["), this.printExpr(_g.@params[1])), "]");
						}
						
						
						case 2:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", this.printExpr(_g.@params[1])), " "), this.printBinop(((global::haxe.macro.Binop) (_g.@params[0]) ))), " "), this.printExpr(_g.@params[2]));
						}
						
						
						case 3:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", this.printExpr(_g.@params[0])), "."), global::haxe.lang.Runtime.toString(_g.@params[1]));
						}
						
						
						case 4:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("(", this.printExpr(_g.@params[0])), ")");
						}
						
						
						case 5:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("{ ", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.macro.Printer_printExpr_177__Fun(_gthis)) )).@join(", ")), " }");
						}
						
						
						case 6:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("[", this.printExprs(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) ), ", ")), "]");
						}
						
						
						case 7:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", this.printExpr(_g.@params[0])), "("), this.printExprs(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) ), ", ")), ")");
						}
						
						
						case 8:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("new ", this.printTypePath(_g.@params[0])), "("), this.printExprs(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) ), ", ")), ")");
						}
						
						
						case 9:
						{
							{
								bool __temp_switch1 = (global::haxe.lang.Runtime.toBool(_g.@params[1]));
								if (( __temp_switch1 == false )) {
									return global::haxe.lang.Runtime.concat(this.printUnop(((global::haxe.macro.Unop) (_g.@params[0]) )), this.printExpr(_g.@params[2]));
								}
								else if (( __temp_switch1 == true )) {
									return global::haxe.lang.Runtime.concat(this.printExpr(_g.@params[2]), this.printUnop(((global::haxe.macro.Unop) (_g.@params[0]) )));
								}
								
							}
							
							break;
						}
						
						
						case 10:
						{
							return global::haxe.lang.Runtime.concat("var ", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printVar", 689690810)) )).@join(", "));
						}
						
						
						case 11:
						{
							object func = _g.@params[1];
							string no = global::haxe.lang.Runtime.toString(_g.@params[0]);
							if ( ! (string.Equals(no, null)) ) {
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("function ", no), this.printFunction(func));
							}
							else {
								return global::haxe.lang.Runtime.concat("function", this.printFunction(_g.@params[1]));
							}
							
						}
						
						
						case 12:
						{
							if (( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) ).length == 0 )) {
								return "{ }";
							}
							else {
								global::Array<object> el = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) );
								string old = this.tabs;
								{
									global::haxe.macro.Printer __temp_dynop1 = this;
									__temp_dynop1.tabs = global::haxe.lang.Runtime.concat(__temp_dynop1.tabs, this.tabString);
								}
								
								string s = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("{\n", this.tabs), this.printExprs(el, global::haxe.lang.Runtime.concat(";\n", this.tabs)));
								this.tabs = old;
								return global::haxe.lang.Runtime.concat(s, (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(";\n", this.tabs), "}")));
							}
							
						}
						
						
						case 13:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("for (", this.printExpr(_g.@params[0])), ") "), this.printExpr(_g.@params[1]));
						}
						
						
						case 14:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", this.printExpr(_g.@params[0])), " in "), this.printExpr(_g.@params[1]));
						}
						
						
						case 15:
						{
							if (( _g.@params[2] == null )) {
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("if (", this.printExpr(_g.@params[0])), ") "), this.printExpr(_g.@params[1]));
							}
							else {
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("if (", this.printExpr(_g.@params[0])), ") "), this.printExpr(_g.@params[1])), " else "), this.printExpr(_g.@params[2]));
							}
							
						}
						
						
						case 16:
						{
							{
								bool __temp_switch2 = (global::haxe.lang.Runtime.toBool(_g.@params[2]));
								if (( __temp_switch2 == false )) {
									return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("do ", this.printExpr(_g.@params[1])), " while ("), this.printExpr(_g.@params[0])), ")");
								}
								else if (( __temp_switch2 == true )) {
									return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("while (", this.printExpr(_g.@params[0])), ") "), this.printExpr(_g.@params[1]));
								}
								
							}
							
							break;
						}
						
						
						case 17:
						{
							object edef = _g.@params[2];
							global::Array<object> cl = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) );
							object e1 = _g.@params[0];
							string old1 = this.tabs;
							{
								global::haxe.macro.Printer __temp_dynop2 = this;
								__temp_dynop2.tabs = global::haxe.lang.Runtime.concat(__temp_dynop2.tabs, this.tabString);
							}
							
							string s1 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("switch ", this.printExpr(e1)), " {\n"), this.tabs), cl.map<object>(((global::haxe.lang.Function) (new global::haxe.macro.Printer_printExpr_203__Fun(_gthis)) )).@join(global::haxe.lang.Runtime.concat("\n", this.tabs)));
							if (( edef != null )) {
								s1 = global::haxe.lang.Runtime.concat(s1, global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\n", this.tabs), "default:"), (( (( ((global::haxe.macro.ExprDef) (global::haxe.lang.Runtime.getField(edef, "expr", 1126038837, true)) ) == null )) ? ("") : (global::haxe.lang.Runtime.concat(this.printExpr(edef), ";")) ))));
							}
							
							this.tabs = old1;
							return global::haxe.lang.Runtime.concat(s1, (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\n", this.tabs), "}")));
						}
						
						
						case 18:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("try ", this.printExpr(_g.@params[0])), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.macro.Printer_printExpr_214__Fun(_gthis)) )).@join(""));
						}
						
						
						case 19:
						{
							return global::haxe.lang.Runtime.concat("return", this.opt<object>(((object) (_g.@params[0]) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printExpr", 1142332418)) ), ((string) (" ") )));
						}
						
						
						case 20:
						{
							return "break";
						}
						
						
						case 21:
						{
							return "continue";
						}
						
						
						case 22:
						{
							return global::haxe.lang.Runtime.concat("untyped ", this.printExpr(_g.@params[0]));
						}
						
						
						case 23:
						{
							return global::haxe.lang.Runtime.concat("throw ", this.printExpr(_g.@params[0]));
						}
						
						
						case 24:
						{
							global::haxe.macro.ComplexType cto = ((global::haxe.macro.ComplexType) (_g.@params[1]) );
							object e11 = _g.@params[0];
							if (( cto != null )) {
								return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("cast(", this.printExpr(e11)), ", "), this.printComplexType(cto)), ")");
							}
							else {
								return global::haxe.lang.Runtime.concat("cast ", this.printExpr(_g.@params[0]));
							}
							
						}
						
						
						case 25:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("#DISPLAY(", this.printExpr(_g.@params[0])), ")");
						}
						
						
						case 26:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("#DISPLAY(", this.printTypePath(_g.@params[0])), ")");
						}
						
						
						case 27:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", this.printExpr(_g.@params[0])), " ? "), this.printExpr(_g.@params[1])), " : "), this.printExpr(_g.@params[2]));
						}
						
						
						case 28:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("(", this.printExpr(_g.@params[0])), " : "), this.printComplexType(((global::haxe.macro.ComplexType) (_g.@params[1]) ))), ")");
						}
						
						
						case 29:
						{
							return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.printMetadata(_g.@params[0]), " "), this.printExpr(_g.@params[1]));
						}
						
						
					}
					
				}
				
				return null;
			}
		}
		
		
		public virtual string printExprs(global::Array<object> el, string sep) {
			return el.map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printExpr", 1142332418)) )).@join(sep);
		}
		
		
		public virtual string printExtension(global::Array<object> tpl, global::Array<object> fields) {
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("{\n", this.tabs), ">"), tpl.map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypePath", 1826714316)) )).@join(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(",\n", this.tabs), ">"))), ","), (( (( fields.length > 0 )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\n", this.tabs), fields.map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printField", 1495656781)) )).@join(global::haxe.lang.Runtime.concat(";\n", this.tabs))), ";\n}")) : ("\n}") )));
		}
		
		
		public virtual string printStructure(global::Array<object> fields) {
			if (( fields.length == 0 )) {
				return "{ }";
			}
			else {
				return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("{\n", this.tabs), fields.map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printField", 1495656781)) )).@join(global::haxe.lang.Runtime.concat(";\n", this.tabs))), ";\n}");
			}
			
		}
		
		
		public virtual string printTypeDefinition(object t, global::haxe.lang.Null<bool> printPackage) {
			unchecked {
				bool __temp_printPackage87 = ( ( ! (printPackage.hasValue) ) ? (true) : ((printPackage).@value) );
				string old = this.tabs;
				this.tabs = this.tabString;
				string str = null;
				if (( t == null )) {
					str = "#NULL";
				}
				else {
					string tmp = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat((( (( ( __temp_printPackage87 && ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "pack", 1246877401, true)) ))) ).length > 0 ) ) &&  ! (string.Equals(global::haxe.lang.Runtime.toString(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "pack", 1246877401, true)) ))) )[0]), ""))  )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("package ", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "pack", 1246877401, true)) ))) ).@join(".")), ";\n")) : ("") )), (( (( ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "meta", 1213811397, true)) ))) ) != null ) && ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "meta", 1213811397, true)) ))) ).length > 0 ) )) ? (global::haxe.lang.Runtime.concat(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "meta", 1213811397, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printMetadata", 1977512124)) )).@join(" "), " ")) : ("") ))), (( (((global::haxe.lang.Null<object>.ofDynamic<bool>(global::haxe.lang.Runtime.getField(t, "isExtern", 528773354, true)))).@value) ? ("extern ") : ("") )));
					global::haxe.macro.TypeDefKind _g = ((global::haxe.macro.TypeDefKind) (global::haxe.lang.Runtime.getField(t, "kind", 1191829844, true)) );
					string tmp1 = null;
					switch (_g.index) {
						case 0:
						{
							string tmp2 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("enum ", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(t, "name", 1224700491, true))), (( (( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "params", 1836776262, true)) ))) ).length > 0 )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("<", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "params", 1836776262, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypeParamDecl", 1404120336)) )).@join(", ")), ">")) : ("") ))), " {\n");
							global::Array<object> _g1 = new global::Array<object>(new object[]{});
							{
								int _g11 = 0;
								global::Array<object> _g2 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "fields", 9342585, true)) ))) );
								while (( _g11 < _g2.length )) {
									object field = _g2[_g11];
									 ++ _g11;
									string tmp3 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.tabs, (( ((  ! (string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "doc", 4997752, true)), null))  &&  ! (string.Equals(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "doc", 4997752, true)), ""))  )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("/**\n", this.tabs), this.tabString), global::StringTools.replace(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "doc", 4997752, true)), "\n", global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\n", this.tabs), this.tabString))), "\n"), this.tabs), "**/\n"), this.tabs)) : ("") ))), (( (( ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(field, "meta", 1213811397, true)) ))) ) != null ) && ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(field, "meta", 1213811397, true)) ))) ).length > 0 ) )) ? (global::haxe.lang.Runtime.concat(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(field, "meta", 1213811397, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printMetadata", 1977512124)) )).@join(" "), " ")) : ("") )));
									global::haxe.macro.FieldType _g3 = ((global::haxe.macro.FieldType) (global::haxe.lang.Runtime.getField(field, "kind", 1191829844, true)) );
									string tmp4 = null;
									switch (_g3.index) {
										case 0:
										{
											tmp4 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "name", 1224700491, true)), this.opt<object>(((global::haxe.macro.ComplexType) (_g3.@params[0]) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printComplexType", 1209459165)) ), ((string) (":") )));
											break;
										}
										
										
										case 1:
										{
											tmp4 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "name", 1224700491, true)), this.printFunction(_g3.@params[0]));
											break;
										}
										
										
										case 2:
										{
											throw global::haxe.lang.HaxeException.wrap("FProp is invalid for TDEnum.");
										}
										
										
									}
									
									_g1.push(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(tmp3, tmp4), ";"));
								}
								
							}
							
							tmp1 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(tmp2, _g1.@join("\n")), "\n}");
							break;
						}
						
						
						case 1:
						{
							string tmp5 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("typedef ", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(t, "name", 1224700491, true))), (( (( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "params", 1836776262, true)) ))) ).length > 0 )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("<", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "params", 1836776262, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypeParamDecl", 1404120336)) )).@join(", ")), ">")) : ("") ))), " = {\n");
							global::Array<object> _g4 = new global::Array<object>(new object[]{});
							{
								int _g12 = 0;
								global::Array<object> _g21 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "fields", 9342585, true)) ))) );
								while (( _g12 < _g21.length )) {
									object f = _g21[_g12];
									 ++ _g12;
									_g4.push(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(this.tabs, this.printField(f)), ";"));
								}
								
							}
							
							tmp1 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(tmp5, _g4.@join("\n")), "\n}");
							break;
						}
						
						
						case 2:
						{
							global::haxe.lang.Null<bool> isInterface = global::haxe.lang.Null<object>.ofDynamic<bool>(_g.@params[2]);
							global::Array<object> interfaces = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) );
							object superClass = _g.@params[0];
							string tmp6 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat((( (((isInterface)).@value) ? ("interface ") : ("class ") )), global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(t, "name", 1224700491, true))), (( (( ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "params", 1836776262, true)) ))) ) != null ) && ( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "params", 1836776262, true)) ))) ).length > 0 ) )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("<", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "params", 1836776262, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypeParamDecl", 1404120336)) )).@join(", ")), ">")) : ("") ))), (( (( superClass != null )) ? (global::haxe.lang.Runtime.concat(" extends ", this.printTypePath(superClass))) : ("") )));
							string tmp7 = null;
							if (( interfaces != null )) {
								global::Array<object> tmp8 = null;
								if (((isInterface)).@value) {
									global::Array<object> _g5 = new global::Array<object>(new object[]{});
									{
										int _g13 = 0;
										while (( _g13 < interfaces.length )) {
											object tp = interfaces[_g13];
											 ++ _g13;
											_g5.push(global::haxe.lang.Runtime.concat(" extends ", this.printTypePath(tp)));
										}
										
									}
									
									tmp8 = _g5;
								}
								else {
									global::Array<object> _g6 = new global::Array<object>(new object[]{});
									{
										int _g14 = 0;
										while (( _g14 < interfaces.length )) {
											object tp1 = interfaces[_g14];
											 ++ _g14;
											_g6.push(global::haxe.lang.Runtime.concat(" implements ", this.printTypePath(tp1)));
										}
										
									}
									
									tmp8 = _g6;
								}
								
								tmp7 = tmp8.@join("");
							}
							else {
								tmp7 = "";
							}
							
							string tmp9 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(tmp6, tmp7), " {\n");
							global::Array<object> _g7 = new global::Array<object>(new object[]{});
							{
								int _g15 = 0;
								global::Array<object> _g22 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "fields", 9342585, true)) ))) );
								while (( _g15 < _g22.length )) {
									object f1 = _g22[_g15];
									 ++ _g15;
									string tmp10 = global::haxe.lang.Runtime.concat(this.tabs, this.printField(f1));
									global::haxe.macro.FieldType _g31 = ((global::haxe.macro.FieldType) (global::haxe.lang.Runtime.getField(f1, "kind", 1191829844, true)) );
									string tmp11 = null;
									switch (_g31.index) {
										case 1:
										{
											if (( global::haxe.lang.Runtime.getField(_g31.@params[0], "expr", 1126038837, true) == null )) {
												tmp11 = ";";
											}
											else if (( ((global::haxe.macro.ExprDef) (global::haxe.lang.Runtime.getField(global::haxe.lang.Runtime.getField(_g31.@params[0], "expr", 1126038837, true), "expr", 1126038837, true)) ).index == 12 )) {
												tmp11 = "";
											}
											else {
												tmp11 = ";";
											}
											
											break;
										}
										
										
										case 0:
										case 2:
										{
											tmp11 = ";";
											break;
										}
										
										
									}
									
									_g7.push(global::haxe.lang.Runtime.concat(tmp10, tmp11));
								}
								
							}
							
							tmp1 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(tmp9, _g7.@join("\n")), "\n}");
							break;
						}
						
						
						case 3:
						{
							global::haxe.macro.ComplexType ct = ((global::haxe.macro.ComplexType) (_g.@params[0]) );
							string tmp12 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("typedef ", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(t, "name", 1224700491, true))), (( (( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "params", 1836776262, true)) ))) ).length > 0 )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("<", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "params", 1836776262, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypeParamDecl", 1404120336)) )).@join(", ")), ">")) : ("") ))), " = ");
							string tmp13 = null;
							switch (ct.index) {
								case 2:
								{
									tmp13 = this.printStructure(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (ct.@params[0]) ))) ));
									break;
								}
								
								
								case 4:
								{
									tmp13 = this.printExtension(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (ct.@params[0]) ))) ), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (ct.@params[1]) ))) ));
									break;
								}
								
								
								default:
								{
									tmp13 = this.printComplexType(ct);
									break;
								}
								
							}
							
							tmp1 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(tmp12, tmp13), ";");
							break;
						}
						
						
						case 4:
						{
							global::Array<object> to = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[2]) ))) );
							global::Array<object> @from = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) );
							global::haxe.macro.ComplexType tthis = ((global::haxe.macro.ComplexType) (_g.@params[0]) );
							string tmp14 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("abstract ", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(t, "name", 1224700491, true))), (( (( ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "params", 1836776262, true)) ))) ).length > 0 )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("<", ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "params", 1836776262, true)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypeParamDecl", 1404120336)) )).@join(", ")), ">")) : ("") ))), (( (( tthis == null )) ? ("") : (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("(", this.printComplexType(tthis)), ")")) )));
							string tmp15 = null;
							if (( @from == null )) {
								tmp15 = "";
							}
							else {
								global::Array<object> _g8 = new global::Array<object>(new object[]{});
								{
									int _g16 = 0;
									while (( _g16 < @from.length )) {
										global::haxe.macro.ComplexType f2 = ((global::haxe.macro.ComplexType) (@from[_g16]) );
										 ++ _g16;
										_g8.push(global::haxe.lang.Runtime.concat(" from ", this.printComplexType(f2)));
									}
									
								}
								
								tmp15 = _g8.@join("");
							}
							
							string tmp16 = global::haxe.lang.Runtime.concat(tmp14, tmp15);
							string tmp17 = null;
							if (( to == null )) {
								tmp17 = "";
							}
							else {
								global::Array<object> _g9 = new global::Array<object>(new object[]{});
								{
									int _g17 = 0;
									while (( _g17 < to.length )) {
										global::haxe.macro.ComplexType t1 = ((global::haxe.macro.ComplexType) (to[_g17]) );
										 ++ _g17;
										_g9.push(global::haxe.lang.Runtime.concat(" to ", this.printComplexType(t1)));
									}
									
								}
								
								tmp17 = _g9.@join("");
							}
							
							string tmp18 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(tmp16, tmp17), " {\n");
							global::Array<object> _g10 = new global::Array<object>(new object[]{});
							{
								int _g18 = 0;
								global::Array<object> _g23 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(t, "fields", 9342585, true)) ))) );
								while (( _g18 < _g23.length )) {
									object f3 = _g23[_g18];
									 ++ _g18;
									string tmp19 = global::haxe.lang.Runtime.concat(this.tabs, this.printField(f3));
									global::haxe.macro.FieldType _g32 = ((global::haxe.macro.FieldType) (global::haxe.lang.Runtime.getField(f3, "kind", 1191829844, true)) );
									string tmp20 = null;
									switch (_g32.index) {
										case 1:
										{
											if (( global::haxe.lang.Runtime.getField(_g32.@params[0], "expr", 1126038837, true) == null )) {
												tmp20 = ";";
											}
											else {
												tmp20 = "";
											}
											
											break;
										}
										
										
										case 0:
										case 2:
										{
											tmp20 = ";";
											break;
										}
										
										
										default:
										{
											tmp20 = "";
											break;
										}
										
									}
									
									_g10.push(global::haxe.lang.Runtime.concat(tmp19, tmp20));
								}
								
							}
							
							tmp1 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(tmp18, _g10.@join("\n")), "\n}");
							break;
						}
						
						
					}
					
					str = global::haxe.lang.Runtime.concat(tmp, tmp1);
				}
				
				this.tabs = old;
				return str;
			}
		}
		
		
		public virtual string opt<T>(T v, global::haxe.lang.Function f, string prefix) {
			if (string.Equals(prefix, null)) {
				prefix = "";
			}
			
			if (global::haxe.lang.Runtime.eq(v, default(T))) {
				return "";
			}
			else {
				return global::haxe.lang.Runtime.concat(prefix, global::haxe.lang.Runtime.toString(f.__hx_invoke1_o(default(double), v)));
			}
			
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1920787718:
					{
						this.tabString = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 1291235454:
					{
						this.tabs = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 5545011:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "opt", 5545011)) );
					}
					
					
					case 201996794:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypeDefinition", 201996794)) );
					}
					
					
					case 495119942:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printStructure", 495119942)) );
					}
					
					
					case 994323858:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printExtension", 994323858)) );
					}
					
					
					case 1337058865:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printExprs", 1337058865)) );
					}
					
					
					case 1142332418:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printExpr", 1142332418)) );
					}
					
					
					case 689690810:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printVar", 689690810)) );
					}
					
					
					case 1243034725:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printFunction", 1243034725)) );
					}
					
					
					case 5607153:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printFunctionArg", 5607153)) );
					}
					
					
					case 1404120336:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypeParamDecl", 1404120336)) );
					}
					
					
					case 1495656781:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printField", 1495656781)) );
					}
					
					
					case 847135153:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printAccess", 847135153)) );
					}
					
					
					case 1977512124:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printMetadata", 1977512124)) );
					}
					
					
					case 1209459165:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printComplexType", 1209459165)) );
					}
					
					
					case 1826714316:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypePath", 1826714316)) );
					}
					
					
					case 1482782086:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printTypeParam", 1482782086)) );
					}
					
					
					case 1533168305:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printConstant", 1533168305)) );
					}
					
					
					case 950523102:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printString", 950523102)) );
					}
					
					
					case 1901896501:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printFormatString", 1901896501)) );
					}
					
					
					case 1384380210:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "escapeString", 1384380210)) );
					}
					
					
					case 194145851:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printBinop", 194145851)) );
					}
					
					
					case 1319267975:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "printUnop", 1319267975)) );
					}
					
					
					case 1920787718:
					{
						return this.tabString;
					}
					
					
					case 1291235454:
					{
						return this.tabs;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 5545011:
					{
						return this.opt<object>(((object) (dynargs[0]) ), ((global::haxe.lang.Function) (dynargs[1]) ), global::haxe.lang.Runtime.toString(dynargs[2]));
					}
					
					
					case 201996794:
					{
						return this.printTypeDefinition(dynargs[0], global::haxe.lang.Null<object>.ofDynamic<bool>(dynargs[1]));
					}
					
					
					case 495119942:
					{
						return this.printStructure(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ));
					}
					
					
					case 994323858:
					{
						return this.printExtension(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ), ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[1]) ))) ));
					}
					
					
					case 1337058865:
					{
						return this.printExprs(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ), global::haxe.lang.Runtime.toString(dynargs[1]));
					}
					
					
					case 1142332418:
					{
						return this.printExpr(dynargs[0]);
					}
					
					
					case 689690810:
					{
						return this.printVar(dynargs[0]);
					}
					
					
					case 1243034725:
					{
						return this.printFunction(dynargs[0]);
					}
					
					
					case 5607153:
					{
						return this.printFunctionArg(dynargs[0]);
					}
					
					
					case 1404120336:
					{
						return this.printTypeParamDecl(dynargs[0]);
					}
					
					
					case 1495656781:
					{
						return this.printField(dynargs[0]);
					}
					
					
					case 847135153:
					{
						return this.printAccess(((global::haxe.macro.Access) (dynargs[0]) ));
					}
					
					
					case 1977512124:
					{
						return this.printMetadata(dynargs[0]);
					}
					
					
					case 1209459165:
					{
						return this.printComplexType(((global::haxe.macro.ComplexType) (dynargs[0]) ));
					}
					
					
					case 1826714316:
					{
						return this.printTypePath(dynargs[0]);
					}
					
					
					case 1482782086:
					{
						return this.printTypeParam(((global::haxe.macro.TypeParam) (dynargs[0]) ));
					}
					
					
					case 1533168305:
					{
						return this.printConstant(((global::haxe.macro.Constant) (dynargs[0]) ));
					}
					
					
					case 950523102:
					{
						return this.printString(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 1901896501:
					{
						return this.printFormatString(global::haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					
					case 1384380210:
					{
						return this.escapeString(global::haxe.lang.Runtime.toString(dynargs[0]), global::haxe.lang.Runtime.toString(dynargs[1]));
					}
					
					
					case 194145851:
					{
						return this.printBinop(((global::haxe.macro.Binop) (dynargs[0]) ));
					}
					
					
					case 1319267975:
					{
						return this.printUnop(((global::haxe.macro.Unop) (dynargs[0]) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("tabString");
			baseArr.push("tabs");
			{
				base.__hx_getFields(baseArr);
			}
			
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.macro {
	public class Printer_printExpr_177__Fun : global::haxe.lang.Function {
		
		public Printer_printExpr_177__Fun(global::haxe.macro.Printer _gthis) : base(1, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object fld = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(fld, "field", 9671866, true))), " : "), this._gthis.printExpr(global::haxe.lang.Runtime.getField(fld, "expr", 1126038837, true)));
		}
		
		
		public global::haxe.macro.Printer _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.macro {
	public class Printer_printExpr_203__Fun : global::haxe.lang.Function {
		
		public Printer_printExpr_203__Fun(global::haxe.macro.Printer _gthis) : base(1, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object c = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("case ", this._gthis.printExprs(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(c, "values", 1337394146, true)) ))) ), ", ")), (( (( global::haxe.lang.Runtime.getField(c, "guard", 468038885, true) != null )) ? (global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" if (", this._gthis.printExpr(global::haxe.lang.Runtime.getField(c, "guard", 468038885, true))), "):")) : (":") ))), (( (( global::haxe.lang.Runtime.getField(c, "expr", 1126038837, true) != null )) ? (global::haxe.lang.Runtime.concat(this._gthis.opt<object>(((object) (global::haxe.lang.Runtime.getField(c, "expr", 1126038837, true)) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this._gthis, "printExpr", 1142332418)) ), ((string) (null) )), ";")) : ("") )));
		}
		
		
		public global::haxe.macro.Printer _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.macro {
	public class Printer_printExpr_214__Fun : global::haxe.lang.Function {
		
		public Printer_printExpr_214__Fun(global::haxe.macro.Printer _gthis) : base(1, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object c1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(" catch(", global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(c1, "name", 1224700491, true))), ":"), this._gthis.printComplexType(((global::haxe.macro.ComplexType) (global::haxe.lang.Runtime.getField(c1, "type", 1292432058, true)) ))), ") "), this._gthis.printExpr(global::haxe.lang.Runtime.getField(c1, "expr", 1126038837, true)));
		}
		
		
		public global::haxe.macro.Printer _gthis;
		
	}
}


