// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.macro {
	public class ExprTools : global::haxe.lang.HxObject {
		
		public ExprTools(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public ExprTools() {
			global::haxe.macro.ExprTools.__hx_ctor_haxe_macro_ExprTools(this);
		}
		
		
		public static void __hx_ctor_haxe_macro_ExprTools(global::haxe.macro.ExprTools __temp_me85) {
		}
		
		
		public static string toString(object e) {
			return new global::haxe.macro.Printer(((string) (null) )).printExpr(e);
		}
		
		
		public static void iter(object e, global::haxe.lang.Function f) {
			unchecked {
				global::haxe.macro.ExprDef _g = ((global::haxe.macro.ExprDef) (global::haxe.lang.Runtime.getField(e, "expr", 1126038837, true)) );
				switch (_g.index) {
					case 1:
					{
						f.__hx_invoke1_o(default(double), _g.@params[0]);
						f.__hx_invoke1_o(default(double), _g.@params[1]);
						break;
					}
					
					
					case 2:
					{
						f.__hx_invoke1_o(default(double), _g.@params[1]);
						f.__hx_invoke1_o(default(double), _g.@params[2]);
						break;
					}
					
					
					case 3:
					{
						f.__hx_invoke1_o(default(double), _g.@params[0]);
						break;
					}
					
					
					case 4:
					{
						f.__hx_invoke1_o(default(double), _g.@params[0]);
						break;
					}
					
					
					case 5:
					{
						global::Array<object> fl = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) );
						{
							int _g1 = 0;
							while (( _g1 < fl.length )) {
								object fd = fl[_g1];
								 ++ _g1;
								f.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.getField(fd, "expr", 1126038837, true));
							}
							
						}
						
						break;
					}
					
					
					case 6:
					{
						global::haxe.macro.ExprArrayTools.iter(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) ), f);
						break;
					}
					
					
					case 7:
					{
						f.__hx_invoke1_o(default(double), _g.@params[0]);
						global::haxe.macro.ExprArrayTools.iter(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) ), f);
						break;
					}
					
					
					case 8:
					{
						global::haxe.macro.ExprArrayTools.iter(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) ), f);
						break;
					}
					
					
					case 9:
					{
						f.__hx_invoke1_o(default(double), _g.@params[2]);
						break;
					}
					
					
					case 10:
					{
						global::Array<object> vl = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) );
						{
							int _g2 = 0;
							while (( _g2 < vl.length )) {
								object v = vl[_g2];
								 ++ _g2;
								{
									object e1 = global::haxe.lang.Runtime.getField(v, "expr", 1126038837, true);
									if (( e1 != null )) {
										f.__hx_invoke1_o(default(double), e1);
									}
									
								}
								
							}
							
						}
						
						break;
					}
					
					
					case 11:
					{
						object func = _g.@params[1];
						{
							{
								int _g3 = 0;
								global::Array<object> _g11 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(func, "args", 1081380189, true)) ))) );
								while (( _g3 < _g11.length )) {
									object arg = _g11[_g3];
									 ++ _g3;
									{
										object e2 = global::haxe.lang.Runtime.getField(arg, "value", 834174833, true);
										if (( e2 != null )) {
											f.__hx_invoke1_o(default(double), e2);
										}
										
									}
									
								}
								
							}
							
							{
								object e3 = global::haxe.lang.Runtime.getField(func, "expr", 1126038837, true);
								if (( e3 != null )) {
									f.__hx_invoke1_o(default(double), e3);
								}
								
							}
							
						}
						
						break;
					}
					
					
					case 12:
					{
						global::haxe.macro.ExprArrayTools.iter(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) ), f);
						break;
					}
					
					
					case 13:
					{
						f.__hx_invoke1_o(default(double), _g.@params[0]);
						f.__hx_invoke1_o(default(double), _g.@params[1]);
						break;
					}
					
					
					case 14:
					{
						f.__hx_invoke1_o(default(double), _g.@params[0]);
						f.__hx_invoke1_o(default(double), _g.@params[1]);
						break;
					}
					
					
					case 15:
					{
						object e31 = _g.@params[2];
						{
							f.__hx_invoke1_o(default(double), _g.@params[0]);
							f.__hx_invoke1_o(default(double), _g.@params[1]);
							if (( e31 != null )) {
								f.__hx_invoke1_o(default(double), e31);
							}
							
						}
						
						break;
					}
					
					
					case 16:
					{
						f.__hx_invoke1_o(default(double), _g.@params[0]);
						f.__hx_invoke1_o(default(double), _g.@params[1]);
						break;
					}
					
					
					case 17:
					{
						object edef = _g.@params[2];
						global::Array<object> cl = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) );
						{
							f.__hx_invoke1_o(default(double), _g.@params[0]);
							{
								int _g4 = 0;
								while (( _g4 < cl.length )) {
									object c = cl[_g4];
									 ++ _g4;
									global::haxe.macro.ExprArrayTools.iter(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(c, "values", 1337394146, true)) ))) ), f);
									{
										object e4 = global::haxe.lang.Runtime.getField(c, "guard", 468038885, true);
										if (( e4 != null )) {
											f.__hx_invoke1_o(default(double), e4);
										}
										
									}
									
									{
										object e5 = global::haxe.lang.Runtime.getField(c, "expr", 1126038837, true);
										if (( e5 != null )) {
											f.__hx_invoke1_o(default(double), e5);
										}
										
									}
									
								}
								
							}
							
							if (( ( edef != null ) && ( ((global::haxe.macro.ExprDef) (global::haxe.lang.Runtime.getField(edef, "expr", 1126038837, true)) ) != null ) )) {
								f.__hx_invoke1_o(default(double), edef);
							}
							
						}
						
						break;
					}
					
					
					case 18:
					{
						global::Array<object> cl1 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) );
						{
							f.__hx_invoke1_o(default(double), _g.@params[0]);
							{
								int _g5 = 0;
								while (( _g5 < cl1.length )) {
									object c1 = cl1[_g5];
									 ++ _g5;
									f.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.getField(c1, "expr", 1126038837, true));
								}
								
							}
							
						}
						
						break;
					}
					
					
					case 19:
					{
						object e6 = _g.@params[0];
						if (( e6 != null )) {
							f.__hx_invoke1_o(default(double), e6);
						}
						
						break;
					}
					
					
					case 0:
					case 20:
					case 21:
					case 26:
					{
						break;
					}
					
					
					case 22:
					{
						f.__hx_invoke1_o(default(double), _g.@params[0]);
						break;
					}
					
					
					case 23:
					{
						f.__hx_invoke1_o(default(double), _g.@params[0]);
						break;
					}
					
					
					case 24:
					{
						f.__hx_invoke1_o(default(double), _g.@params[0]);
						break;
					}
					
					
					case 25:
					{
						f.__hx_invoke1_o(default(double), _g.@params[0]);
						break;
					}
					
					
					case 27:
					{
						object e32 = _g.@params[2];
						{
							f.__hx_invoke1_o(default(double), _g.@params[0]);
							f.__hx_invoke1_o(default(double), _g.@params[1]);
							if (( e32 != null )) {
								f.__hx_invoke1_o(default(double), e32);
							}
							
						}
						
						break;
					}
					
					
					case 28:
					{
						f.__hx_invoke1_o(default(double), _g.@params[0]);
						break;
					}
					
					
					case 29:
					{
						f.__hx_invoke1_o(default(double), _g.@params[1]);
						break;
					}
					
					
				}
				
			}
		}
		
		
		public static object map(object e, global::haxe.lang.Function f) {
			unchecked {
				global::haxe.macro.ExprDef _g = ((global::haxe.macro.ExprDef) (global::haxe.lang.Runtime.getField(e, "expr", 1126038837, true)) );
				global::haxe.macro.ExprDef tmp = null;
				switch (_g.index) {
					case 0:
					{
						tmp = ((global::haxe.macro.ExprDef) (global::haxe.lang.Runtime.getField(e, "expr", 1126038837, true)) );
						break;
					}
					
					
					case 1:
					{
						tmp = global::haxe.macro.ExprDef.EArray(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ), ((object) (f.__hx_invoke1_o(default(double), _g.@params[1])) ));
						break;
					}
					
					
					case 2:
					{
						tmp = global::haxe.macro.ExprDef.EBinop(((global::haxe.macro.Binop) (_g.@params[0]) ), ((object) (f.__hx_invoke1_o(default(double), _g.@params[1])) ), ((object) (f.__hx_invoke1_o(default(double), _g.@params[2])) ));
						break;
					}
					
					
					case 3:
					{
						tmp = global::haxe.macro.ExprDef.EField(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ), global::haxe.lang.Runtime.toString(_g.@params[1]));
						break;
					}
					
					
					case 4:
					{
						tmp = global::haxe.macro.ExprDef.EParenthesis(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ));
						break;
					}
					
					
					case 5:
					{
						global::Array<object> fields = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) );
						global::Array<object> ret = new global::Array<object>(new object[]{});
						{
							int _g1 = 0;
							while (( _g1 < fields.length )) {
								object field = fields[_g1];
								 ++ _g1;
								object __temp_stmt18 = null;
								{
									string __temp_odecl1 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "field", 9671866, true));
									object __temp_odecl2 = ((object) (f.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.getField(field, "expr", 1126038837, true))) );
									__temp_stmt18 = new global::haxe.lang.DynamicObject(new int[]{9671866, 1126038837}, new object[]{__temp_odecl1, __temp_odecl2}, new int[]{}, new double[]{});
								}
								
								ret.push(__temp_stmt18);
							}
							
						}
						
						tmp = global::haxe.macro.ExprDef.EObjectDecl(ret);
						break;
					}
					
					
					case 6:
					{
						tmp = global::haxe.macro.ExprDef.EArrayDecl(global::haxe.macro.ExprArrayTools.map(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) ), f));
						break;
					}
					
					
					case 7:
					{
						tmp = global::haxe.macro.ExprDef.ECall(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ), global::haxe.macro.ExprArrayTools.map(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) ), f));
						break;
					}
					
					
					case 8:
					{
						tmp = global::haxe.macro.ExprDef.ENew(_g.@params[0], global::haxe.macro.ExprArrayTools.map(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) ), f));
						break;
					}
					
					
					case 9:
					{
						tmp = global::haxe.macro.ExprDef.EUnop(((global::haxe.macro.Unop) (_g.@params[0]) ), global::haxe.lang.Runtime.toBool(_g.@params[1]), ((object) (f.__hx_invoke1_o(default(double), _g.@params[2])) ));
						break;
					}
					
					
					case 10:
					{
						global::Array<object> vars = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) );
						global::Array<object> ret1 = new global::Array<object>(new object[]{});
						{
							int _g2 = 0;
							while (( _g2 < vars.length )) {
								object v = vars[_g2];
								 ++ _g2;
								object e1 = global::haxe.lang.Runtime.getField(v, "expr", 1126038837, true);
								object __temp_stmt19 = null;
								{
									string __temp_odecl3 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(v, "name", 1224700491, true));
									global::haxe.macro.ComplexType __temp_odecl4 = ((global::haxe.macro.ComplexType) (global::haxe.lang.Runtime.getField(v, "type", 1292432058, true)) );
									object __temp_odecl5 = ( (( e1 == null )) ? (null) : (((object) (f.__hx_invoke1_o(default(double), e1)) )) );
									__temp_stmt19 = new global::haxe.lang.DynamicObject(new int[]{1126038837, 1224700491, 1292432058}, new object[]{__temp_odecl5, __temp_odecl3, __temp_odecl4}, new int[]{}, new double[]{});
								}
								
								ret1.push(__temp_stmt19);
							}
							
						}
						
						tmp = global::haxe.macro.ExprDef.EVars(ret1);
						break;
					}
					
					
					case 11:
					{
						object func = _g.@params[1];
						string name = global::haxe.lang.Runtime.toString(_g.@params[0]);
						global::Array<object> ret2 = new global::Array<object>(new object[]{});
						{
							int _g3 = 0;
							global::Array<object> _g11 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(func, "args", 1081380189, true)) ))) );
							while (( _g3 < _g11.length )) {
								object arg = _g11[_g3];
								 ++ _g3;
								global::haxe.lang.Null<bool> tmp1 = global::haxe.lang.Null<object>.ofDynamic<bool>(global::haxe.lang.Runtime.getField(arg, "opt", 5545011, true));
								object e2 = global::haxe.lang.Runtime.getField(arg, "value", 834174833, true);
								object __temp_stmt20 = null;
								{
									string __temp_odecl6 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(arg, "name", 1224700491, true));
									global::haxe.macro.ComplexType __temp_odecl7 = ((global::haxe.macro.ComplexType) (global::haxe.lang.Runtime.getField(arg, "type", 1292432058, true)) );
									object __temp_odecl8 = ( (( e2 == null )) ? (null) : (((object) (f.__hx_invoke1_o(default(double), e2)) )) );
									__temp_stmt20 = new global::haxe.lang.DynamicObject(new int[]{5545011, 834174833, 1224700491, 1292432058}, new object[]{(tmp1).toDynamic(), __temp_odecl8, __temp_odecl6, __temp_odecl7}, new int[]{}, new double[]{});
								}
								
								ret2.push(__temp_stmt20);
							}
							
						}
						
						object __temp_stmt21 = null;
						{
							global::haxe.macro.ComplexType __temp_odecl9 = ((global::haxe.macro.ComplexType) (global::haxe.lang.Runtime.getField(func, "ret", 5691745, true)) );
							global::Array<object> __temp_odecl10 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(func, "params", 1836776262, true)) ))) );
							object __temp_odecl11 = ((object) (f.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.getField(func, "expr", 1126038837, true))) );
							__temp_stmt21 = new global::haxe.lang.DynamicObject(new int[]{5691745, 1081380189, 1126038837, 1836776262}, new object[]{__temp_odecl9, ((global::Array<object>) (ret2) ), __temp_odecl11, __temp_odecl10}, new int[]{}, new double[]{});
						}
						
						tmp = global::haxe.macro.ExprDef.EFunction(name, __temp_stmt21);
						break;
					}
					
					
					case 12:
					{
						tmp = global::haxe.macro.ExprDef.EBlock(global::haxe.macro.ExprArrayTools.map(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) ), f));
						break;
					}
					
					
					case 13:
					{
						tmp = global::haxe.macro.ExprDef.EFor(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ), ((object) (f.__hx_invoke1_o(default(double), _g.@params[1])) ));
						break;
					}
					
					
					case 14:
					{
						tmp = global::haxe.macro.ExprDef.EIn(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ), ((object) (f.__hx_invoke1_o(default(double), _g.@params[1])) ));
						break;
					}
					
					
					case 15:
					{
						object eelse = _g.@params[2];
						tmp = global::haxe.macro.ExprDef.EIf(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ), ((object) (f.__hx_invoke1_o(default(double), _g.@params[1])) ), ((object) (( (( eelse == null )) ? (null) : (((object) (f.__hx_invoke1_o(default(double), eelse)) )) )) ));
						break;
					}
					
					
					case 16:
					{
						tmp = global::haxe.macro.ExprDef.EWhile(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ), ((object) (f.__hx_invoke1_o(default(double), _g.@params[1])) ), global::haxe.lang.Runtime.toBool(_g.@params[2]));
						break;
					}
					
					
					case 17:
					{
						object edef = _g.@params[2];
						global::Array<object> cases = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) );
						object e3 = _g.@params[0];
						global::Array<object> ret3 = new global::Array<object>(new object[]{});
						{
							int _g4 = 0;
							while (( _g4 < cases.length )) {
								object c = cases[_g4];
								 ++ _g4;
								object e4 = global::haxe.lang.Runtime.getField(c, "expr", 1126038837, true);
								object tmp2 = ( (( e4 == null )) ? (null) : (((object) (f.__hx_invoke1_o(default(double), e4)) )) );
								object e5 = global::haxe.lang.Runtime.getField(c, "guard", 468038885, true);
								object __temp_stmt22 = null;
								{
									object __temp_odecl12 = ( (( e5 == null )) ? (null) : (((object) (f.__hx_invoke1_o(default(double), e5)) )) );
									global::Array<object> __temp_odecl13 = global::haxe.macro.ExprArrayTools.map(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(c, "values", 1337394146, true)) ))) ), f);
									__temp_stmt22 = new global::haxe.lang.DynamicObject(new int[]{468038885, 1126038837, 1337394146}, new object[]{__temp_odecl12, tmp2, __temp_odecl13}, new int[]{}, new double[]{});
								}
								
								ret3.push(__temp_stmt22);
							}
							
						}
						
						tmp = global::haxe.macro.ExprDef.ESwitch(((object) (f.__hx_invoke1_o(default(double), e3)) ), ret3, ( (( ( edef == null ) || ( ((global::haxe.macro.ExprDef) (global::haxe.lang.Runtime.getField(edef, "expr", 1126038837, true)) ) == null ) )) ? (edef) : (((object) (f.__hx_invoke1_o(default(double), edef)) )) ));
						break;
					}
					
					
					case 18:
					{
						global::Array<object> catches = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[1]) ))) );
						object e6 = _g.@params[0];
						global::Array<object> ret4 = new global::Array<object>(new object[]{});
						{
							int _g5 = 0;
							while (( _g5 < catches.length )) {
								object c1 = catches[_g5];
								 ++ _g5;
								object __temp_stmt23 = null;
								{
									string __temp_odecl14 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(c1, "name", 1224700491, true));
									global::haxe.macro.ComplexType __temp_odecl15 = ((global::haxe.macro.ComplexType) (global::haxe.lang.Runtime.getField(c1, "type", 1292432058, true)) );
									object __temp_odecl16 = ((object) (f.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.getField(c1, "expr", 1126038837, true))) );
									__temp_stmt23 = new global::haxe.lang.DynamicObject(new int[]{1126038837, 1224700491, 1292432058}, new object[]{__temp_odecl16, __temp_odecl14, __temp_odecl15}, new int[]{}, new double[]{});
								}
								
								ret4.push(__temp_stmt23);
							}
							
						}
						
						tmp = global::haxe.macro.ExprDef.ETry(((object) (f.__hx_invoke1_o(default(double), e6)) ), ret4);
						break;
					}
					
					
					case 19:
					{
						object e7 = _g.@params[0];
						tmp = global::haxe.macro.ExprDef.EReturn(((object) (( (( e7 == null )) ? (null) : (((object) (f.__hx_invoke1_o(default(double), e7)) )) )) ));
						break;
					}
					
					
					case 20:
					case 21:
					case 26:
					{
						tmp = ((global::haxe.macro.ExprDef) (global::haxe.lang.Runtime.getField(e, "expr", 1126038837, true)) );
						break;
					}
					
					
					case 22:
					{
						tmp = global::haxe.macro.ExprDef.EUntyped(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ));
						break;
					}
					
					
					case 23:
					{
						tmp = global::haxe.macro.ExprDef.EThrow(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ));
						break;
					}
					
					
					case 24:
					{
						tmp = global::haxe.macro.ExprDef.ECast(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ), ((global::haxe.macro.ComplexType) (_g.@params[1]) ));
						break;
					}
					
					
					case 25:
					{
						tmp = global::haxe.macro.ExprDef.EDisplay(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ), global::haxe.lang.Runtime.toBool(_g.@params[1]));
						break;
					}
					
					
					case 27:
					{
						tmp = global::haxe.macro.ExprDef.ETernary(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ), ((object) (f.__hx_invoke1_o(default(double), _g.@params[1])) ), ((object) (f.__hx_invoke1_o(default(double), _g.@params[2])) ));
						break;
					}
					
					
					case 28:
					{
						tmp = global::haxe.macro.ExprDef.ECheckType(((object) (f.__hx_invoke1_o(default(double), _g.@params[0])) ), ((global::haxe.macro.ComplexType) (_g.@params[1]) ));
						break;
					}
					
					
					case 29:
					{
						tmp = global::haxe.macro.ExprDef.EMeta(_g.@params[0], ((object) (f.__hx_invoke1_o(default(double), _g.@params[1])) ));
						break;
					}
					
					
				}
				
				{
					object __temp_odecl17 = global::haxe.lang.Runtime.getField(e, "pos", 5594516, true);
					return new global::haxe.lang.DynamicObject(new int[]{5594516, 1126038837}, new object[]{__temp_odecl17, tmp}, new int[]{}, new double[]{});
				}
				
			}
		}
		
		
		public static object getValue(object e) {
			unchecked {
				global::haxe.macro.ExprDef _g = ((global::haxe.macro.ExprDef) (global::haxe.lang.Runtime.getField(e, "expr", 1126038837, true)) );
				switch (_g.index) {
					case 0:
					{
						switch (((global::haxe.macro.Constant) (_g.@params[0]) ).index) {
							case 0:
							{
								return (global::Std.parseInt(global::haxe.lang.Runtime.toString(((global::haxe.macro.Constant) (_g.@params[0]) ).@params[0]))).toDynamic();
							}
							
							
							case 1:
							{
								return global::Std.parseFloat(global::haxe.lang.Runtime.toString(((global::haxe.macro.Constant) (_g.@params[0]) ).@params[0]));
							}
							
							
							case 2:
							{
								return global::haxe.lang.Runtime.toString(((global::haxe.macro.Constant) (_g.@params[0]) ).@params[0]);
							}
							
							
							case 3:
							{
								switch (global::haxe.lang.Runtime.toString(((global::haxe.macro.Constant) (_g.@params[0]) ).@params[0])) {
									case "false":
									{
										return false;
									}
									
									
									case "null":
									{
										return null;
									}
									
									
									case "true":
									{
										return true;
									}
									
									
									default:
									{
										throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat("Unsupported expression: ", global::Std.@string(e)));
									}
									
								}
								
							}
							
							
							default:
							{
								throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat("Unsupported expression: ", global::Std.@string(e)));
							}
							
						}
						
					}
					
					
					case 2:
					{
						object e2 = _g.@params[2];
						object e1 = _g.@params[1];
						global::haxe.macro.Binop op = ((global::haxe.macro.Binop) (_g.@params[0]) );
						object e11 = global::haxe.macro.ExprTools.getValue(e1);
						object e21 = global::haxe.macro.ExprTools.getValue(e2);
						switch (op.index) {
							case 0:
							{
								return ((object) (global::haxe.lang.Runtime.plus(e11, e21)) );
							}
							
							
							case 1:
							{
								return ( ((double) (global::haxe.lang.Runtime.toDouble(e11)) ) * ((double) (global::haxe.lang.Runtime.toDouble(e21)) ) );
							}
							
							
							case 2:
							{
								return ( ((double) (global::haxe.lang.Runtime.toDouble(e11)) ) / ((double) (global::haxe.lang.Runtime.toDouble(e21)) ) );
							}
							
							
							case 3:
							{
								return ( ((double) (global::haxe.lang.Runtime.toDouble(e11)) ) - ((double) (global::haxe.lang.Runtime.toDouble(e21)) ) );
							}
							
							
							case 5:
							{
								return global::haxe.lang.Runtime.eq(e11, e21);
							}
							
							
							case 6:
							{
								return ( ! (global::haxe.lang.Runtime.eq(e11, e21)) );
							}
							
							
							case 7:
							{
								return ( global::haxe.lang.Runtime.compare(e11, e21) > 0 );
							}
							
							
							case 8:
							{
								return ( global::haxe.lang.Runtime.compare(e11, e21) >= 0 );
							}
							
							
							case 9:
							{
								return ( global::haxe.lang.Runtime.compare(e11, e21) < 0 );
							}
							
							
							case 10:
							{
								return ( global::haxe.lang.Runtime.compare(e11, e21) <= 0 );
							}
							
							
							case 11:
							{
								return ( ((int) (global::haxe.lang.Runtime.toInt(e11)) ) & ((int) (global::haxe.lang.Runtime.toInt(e21)) ) );
							}
							
							
							case 12:
							{
								return ( ((int) (global::haxe.lang.Runtime.toInt(e11)) ) | ((int) (global::haxe.lang.Runtime.toInt(e21)) ) );
							}
							
							
							case 13:
							{
								return ( ((int) (global::haxe.lang.Runtime.toInt(e11)) ) ^ ((int) (global::haxe.lang.Runtime.toInt(e21)) ) );
							}
							
							
							case 14:
							{
								if (global::haxe.lang.Runtime.toBool((e11))) {
									return e21;
								}
								else {
									return false;
								}
								
							}
							
							
							case 15:
							{
								if (( ! (global::haxe.lang.Runtime.toBool(e11)) )) {
									return e21;
								}
								else {
									return true;
								}
								
							}
							
							
							case 16:
							{
								return ( ((int) (global::haxe.lang.Runtime.toInt(e11)) ) << ((int) (global::haxe.lang.Runtime.toInt(e21)) ) );
							}
							
							
							case 17:
							{
								return ( ((int) (global::haxe.lang.Runtime.toInt(e11)) ) >> ((int) (global::haxe.lang.Runtime.toInt(e21)) ) );
							}
							
							
							case 18:
							{
								return ((int) (( ((uint) (((int) (global::haxe.lang.Runtime.toInt(e11)) )) ) >> ((int) (global::haxe.lang.Runtime.toInt(e21)) ) )) );
							}
							
							
							case 19:
							{
								return ( ((double) (global::haxe.lang.Runtime.toDouble(e11)) ) % ((double) (global::haxe.lang.Runtime.toDouble(e21)) ) );
							}
							
							
							default:
							{
								throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat("Unsupported expression: ", global::Std.@string(e)));
							}
							
						}
						
					}
					
					
					case 4:
					{
						return global::haxe.macro.ExprTools.getValue(_g.@params[0]);
					}
					
					
					case 5:
					{
						global::Array<object> fields = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) );
						object obj = new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{}, new double[]{});
						{
							int _g1 = 0;
							while (( _g1 < fields.length )) {
								object field = fields[_g1];
								 ++ _g1;
								global::Reflect.setField(obj, global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(field, "field", 9671866, true)), global::haxe.macro.ExprTools.getValue(global::haxe.lang.Runtime.getField(field, "expr", 1126038837, true)));
							}
							
						}
						
						return obj;
					}
					
					
					case 6:
					{
						return ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (_g.@params[0]) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::haxe.macro.ExprTools), "getValue", 294620923)) ));
					}
					
					
					case 9:
					{
						if (( global::haxe.lang.Runtime.toBool(_g.@params[1]) == false )) {
							object e12 = _g.@params[2];
							global::haxe.macro.Unop op1 = ((global::haxe.macro.Unop) (_g.@params[0]) );
							object e13 = global::haxe.macro.ExprTools.getValue(e12);
							switch (op1.index) {
								case 2:
								{
									return ( ! (global::haxe.lang.Runtime.toBool(e13)) );
								}
								
								
								case 3:
								{
									return ( - (((int) (global::haxe.lang.Runtime.toInt(e13)) )) );
								}
								
								
								case 4:
								{
									return ( ~ (((int) (global::haxe.lang.Runtime.toInt(e13)) )) );
								}
								
								
								default:
								{
									throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat("Unsupported expression: ", global::Std.@string(e)));
								}
								
							}
							
						}
						else {
							throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat("Unsupported expression: ", global::Std.@string(e)));
						}
						
					}
					
					
					case 15:
					{
						object eelse = _g.@params[2];
						object eif = _g.@params[1];
						object econd = _g.@params[0];
						if (( eelse == null )) {
							throw global::haxe.lang.HaxeException.wrap("If statements only have a value if the else clause is defined");
						}
						else if (global::haxe.lang.Runtime.toBool((global::haxe.macro.ExprTools.getValue(econd)))) {
							return global::haxe.macro.ExprTools.getValue(eif);
						}
						else {
							return global::haxe.macro.ExprTools.getValue(eelse);
						}
						
					}
					
					
					case 22:
					{
						return global::haxe.macro.ExprTools.getValue(_g.@params[0]);
					}
					
					
					case 27:
					{
						object eelse1 = _g.@params[2];
						object eif1 = _g.@params[1];
						object econd1 = _g.@params[0];
						if (( eelse1 == null )) {
							throw global::haxe.lang.HaxeException.wrap("If statements only have a value if the else clause is defined");
						}
						else if (global::haxe.lang.Runtime.toBool((global::haxe.macro.ExprTools.getValue(econd1)))) {
							return global::haxe.macro.ExprTools.getValue(eif1);
						}
						else {
							return global::haxe.macro.ExprTools.getValue(eelse1);
						}
						
					}
					
					
					case 29:
					{
						return global::haxe.macro.ExprTools.getValue(_g.@params[1]);
					}
					
					
					default:
					{
						throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat("Unsupported expression: ", global::Std.@string(e)));
					}
					
				}
				
			}
		}
		
		
		public static object opt(object e, global::haxe.lang.Function f) {
			if (( e == null )) {
				return null;
			}
			else {
				return ((object) (f.__hx_invoke1_o(default(double), e)) );
			}
			
		}
		
		
		public static void opt2(object e, global::haxe.lang.Function f) {
			if (( e != null )) {
				f.__hx_invoke1_o(default(double), e);
			}
			
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::haxe.macro.ExprTools(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::haxe.macro.ExprTools();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe.macro {
	public class ExprArrayTools : global::haxe.lang.HxObject {
		
		public ExprArrayTools(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public ExprArrayTools() {
			global::haxe.macro.ExprArrayTools.__hx_ctor_haxe_macro_ExprArrayTools(this);
		}
		
		
		public static void __hx_ctor_haxe_macro_ExprArrayTools(global::haxe.macro.ExprArrayTools __temp_me86) {
		}
		
		
		public static global::Array<object> map(global::Array<object> el, global::haxe.lang.Function f) {
			global::Array<object> ret = new global::Array<object>(new object[]{});
			{
				int _g = 0;
				while (( _g < el.length )) {
					object e = el[_g];
					 ++ _g;
					ret.push(((object) (f.__hx_invoke1_o(default(double), e)) ));
				}
				
			}
			
			return ret;
		}
		
		
		public static void iter(global::Array<object> el, global::haxe.lang.Function f) {
			int _g = 0;
			while (( _g < el.length )) {
				object e = el[_g];
				 ++ _g;
				f.__hx_invoke1_o(default(double), e);
			}
			
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::haxe.macro.ExprArrayTools(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::haxe.macro.ExprArrayTools();
		}
		
		
	}
}


