// Generated by Haxe 3.3.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe._EntryPoint {
	public class Lock : global::haxe.lang.HxObject {
		
		public Lock(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Lock() {
			global::haxe._EntryPoint.Lock.__hx_ctor_haxe__EntryPoint_Lock(this);
		}
		
		
		public static void __hx_ctor_haxe__EntryPoint_Lock(global::haxe._EntryPoint.Lock __temp_me38) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::haxe._EntryPoint.Lock(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::haxe._EntryPoint.Lock();
		}
		
		
		public void release() {
		}
		
		
		public void wait(global::haxe.lang.Null<double> t) {
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1324505717:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "wait", 1324505717)) );
					}
					
					
					case 1491961287:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "release", 1491961287)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1324505717:
					{
						this.wait(global::haxe.lang.Null<object>.ofDynamic<double>(dynargs[0]));
						break;
					}
					
					
					case 1491961287:
					{
						this.release();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe._EntryPoint {
	public class Mutex : global::haxe.lang.HxObject {
		
		public Mutex(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Mutex() {
			global::haxe._EntryPoint.Mutex.__hx_ctor_haxe__EntryPoint_Mutex(this);
		}
		
		
		public static void __hx_ctor_haxe__EntryPoint_Mutex(global::haxe._EntryPoint.Mutex __temp_me39) {
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::haxe._EntryPoint.Mutex(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::haxe._EntryPoint.Mutex();
		}
		
		
		public void acquire() {
		}
		
		
		public void release() {
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1491961287:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "release", 1491961287)) );
					}
					
					
					case 887376854:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "acquire", 887376854)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1491961287:
					{
						this.release();
						break;
					}
					
					
					case 887376854:
					{
						this.acquire();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe._EntryPoint {
	public class Thread : global::haxe.lang.HxObject {
		
		public Thread(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Thread() {
			global::haxe._EntryPoint.Thread.__hx_ctor_haxe__EntryPoint_Thread(this);
		}
		
		
		public static void __hx_ctor_haxe__EntryPoint_Thread(global::haxe._EntryPoint.Thread __temp_me40) {
		}
		
		
		public static void create(global::haxe.lang.Function f) {
			f.__hx_invoke0_o();
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::haxe._EntryPoint.Thread(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::haxe._EntryPoint.Thread();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class EntryPoint : global::haxe.lang.HxObject {
		
		static EntryPoint() {
			global::haxe.EntryPoint.sleepLock = new global::haxe._EntryPoint.Lock();
			global::haxe.EntryPoint.mutex = new global::haxe._EntryPoint.Mutex();
			global::haxe.EntryPoint.pending = new global::Array<object>();
			global::haxe.EntryPoint.threadCount = 0;
		}
		
		
		public EntryPoint(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public EntryPoint() {
			global::haxe.EntryPoint.__hx_ctor_haxe_EntryPoint(this);
		}
		
		
		public static void __hx_ctor_haxe_EntryPoint(global::haxe.EntryPoint __temp_me41) {
		}
		
		
		public static global::haxe._EntryPoint.Lock sleepLock;
		
		public static global::haxe._EntryPoint.Mutex mutex;
		
		public static global::Array<object> pending;
		
		public static int threadCount;
		
		public static void wakeup() {
		}
		
		
		public static void runInMainThread(global::haxe.lang.Function f) {
			global::haxe.EntryPoint.pending.push(f);
			global::haxe.EntryPoint.wakeup();
		}
		
		
		public static void addThread(global::haxe.lang.Function f) {
			global::haxe.EntryPoint.threadCount++;
			global::haxe._EntryPoint.Thread.create(new global::haxe.EntryPoint_addThread_78__Fun(f));
		}
		
		
		public static double processEvents() {
			unchecked {
				while (true) {
					global::haxe.lang.Function f = ((global::haxe.lang.Function) ((global::haxe.EntryPoint.pending.shift()).@value) );
					if (( f == null )) {
						break;
					}
					
					f.__hx_invoke0_o();
				}
				
				if (( ( global::haxe.MainLoop.pending == null ) && ( global::haxe.EntryPoint.threadCount == 0 ) )) {
					return ((double) (-1) );
				}
				
				return global::haxe.MainLoop.tick();
			}
		}
		
		
		public static void run() {
			while (true) {
				double nextTick = global::haxe.EntryPoint.processEvents();
				if (( nextTick < 0 )) {
					break;
				}
				
			}
			
		}
		
		
		public static new object __hx_createEmpty() {
			return new global::haxe.EntryPoint(global::haxe.lang.EmptyObject.EMPTY);
		}
		
		
		public static new object __hx_create(global::Array arr) {
			return new global::haxe.EntryPoint();
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace haxe {
	public class EntryPoint_addThread_78__Fun : global::haxe.lang.Function {
		
		public EntryPoint_addThread_78__Fun(global::haxe.lang.Function f) : base(0, 0) {
			this.f = f;
		}
		
		
		public override object __hx_invoke0_o() {
			this.f.__hx_invoke0_o();
			global::haxe.EntryPoint.threadCount--;
			if (( global::haxe.EntryPoint.threadCount == 0 )) {
				global::haxe.EntryPoint.wakeup();
			}
			
			return null;
		}
		
		
		public global::haxe.lang.Function f;
		
	}
}


