<?php

// Generated by Haxe 3.3.0
class thx_promise__Promise_Promise_Impl_ {
	public function __construct(){}
	static function _new($future) {
		return $future;
	}
	static function fromFuture($future) {
		$future1 = $future->map(array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__0"), 'execute'));
		return $future1;
	}
	static $nil;
	static function all($arr) {
		$tmp = $arr->length === 0;
		if($tmp) {
			return thx_promise__Promise_Promise_Impl_::value((new _hx_array(array())));
		} else {
			return thx_promise__Promise_Promise_Impl_::create(array(new _hx_lambda(array(&$arr), "thx_promise__Promise_Promise_Impl__1"), 'execute'));
		}
	}
	static function afterAll($arr) {
		$tmp = thx_promise__Promise_Promise_Impl_::sequence($arr);
		return thx_promise__Promise_Promise_Impl_::map($tmp, thx_fp_Functions::hconst(thx_Nil::$nil));
	}
	static function sequence($arr) {
		$tmp = thx_promise__Promise_Promise_Impl_::value((new _hx_array(array())));
		return thx_Arrays::reduce($arr, array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__2"), 'execute'), $tmp);
	}
	static function allSequence($arr) {
		return thx_promise__Promise_Promise_Impl_::sequence($arr);
	}
	static function create($callback) {
		$future = thx_promise_Future::create(array(new _hx_lambda(array(&$callback), "thx_promise__Promise_Promise_Impl__3"), 'execute'));
		return $future;
	}
	static function createUnsafe($callback) {
		$future = thx_promise_Future::create(array(new _hx_lambda(array(&$callback), "thx_promise__Promise_Promise_Impl__4"), 'execute'));
		return $future;
	}
	static function createFulfill($callback) {
		$future = thx_promise_Future::create(array(new _hx_lambda(array(&$callback), "thx_promise__Promise_Promise_Impl__5"), 'execute'));
		return $future;
	}
	static function fail($message, $pos = null) {
		return thx_promise__Promise_Promise_Impl_::error(new thx_Error($message, null, $pos));
	}
	static function error($err) {
		return thx_promise__Promise_Promise_Impl_::create(array(new _hx_lambda(array(&$err), "thx_promise__Promise_Promise_Impl__6"), 'execute'));
	}
	static function value($v) {
		return thx_promise__Promise_Promise_Impl_::create(array(new _hx_lambda(array(&$v), "thx_promise__Promise_Promise_Impl__7"), 'execute'));
	}
	static function always($this1, $handler) {
		$future = thx_promise_Future::create(array(new _hx_lambda(array(&$handler, &$this1), "thx_promise__Promise_Promise_Impl__8"), 'execute'));
		return $future;
	}
	static function either($this1, $success, $failure) {
		return thx_promise__Promise_Promise_Impl_::createUnsafe(array(new _hx_lambda(array(&$failure, &$success, &$this1), "thx_promise__Promise_Promise_Impl__9"), 'execute'));
	}
	static function isFailure($this1) {
		$_g = $this1->state;
		switch(Type::enumIndex($_g)) {
		case 0:{
			if(Type::enumIndex(_hx_deref($_g)->params[0]) === 1) {
				return false;
			} else {
				return true;
			}
		}break;
		case 1:{
			return false;
		}break;
		}
	}
	static function isResolved($this1) {
		$_g = $this1->state;
		switch(Type::enumIndex($_g)) {
		case 0:{
			if(Type::enumIndex(_hx_deref($_g)->params[0]) === 0) {
				return false;
			} else {
				return true;
			}
		}break;
		case 1:{
			return false;
		}break;
		}
	}
	static function failure($this1, $failure) {
		return thx_promise__Promise_Promise_Impl_::either($this1, array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__10"), 'execute'), $failure);
	}
	static function mapAlways($this1, $handler) {
		return thx_promise__Promise_Promise_Impl_::map($this1, array(new _hx_lambda(array(&$handler), "thx_promise__Promise_Promise_Impl__11"), 'execute'));
	}
	static function mapAlwaysAsyncFuture($this1, $handler) {
		return $this1->mapAsync(array(new _hx_lambda(array(&$handler), "thx_promise__Promise_Promise_Impl__12"), 'execute'));
	}
	static function mapAlwaysFuture($this1, $handler) {
		return $this1->flatMap(array(new _hx_lambda(array(&$handler), "thx_promise__Promise_Promise_Impl__13"), 'execute'));
	}
	static function mapEither($this1, $success, $failure) {
		return thx_promise__Promise_Promise_Impl_::flatMapEither($this1, array(new _hx_lambda(array(&$success), "thx_promise__Promise_Promise_Impl__14"), 'execute'), array(new _hx_lambda(array(&$failure), "thx_promise__Promise_Promise_Impl__15"), 'execute'));
	}
	static function mapEitherFuture($this1, $success, $failure) {
		return thx_promise__Promise_Promise_Impl_::flatMapEitherFuture($this1, array(new _hx_lambda(array(&$success), "thx_promise__Promise_Promise_Impl__16"), 'execute'), array(new _hx_lambda(array(&$failure), "thx_promise__Promise_Promise_Impl__17"), 'execute'));
	}
	static function flatMapEitherFuture($this1, $success, $failure) {
		return $this1->flatMap(array(new _hx_lambda(array(&$failure, &$success), "thx_promise__Promise_Promise_Impl__18"), 'execute'));
	}
	static function flatMapEither($this1, $success, $failure) {
		return thx_promise__Promise_Promise_Impl_::createUnsafe(array(new _hx_lambda(array(&$failure, &$success, &$this1), "thx_promise__Promise_Promise_Impl__19"), 'execute'));
	}
	static function mapFailure($this1, $failure) {
		return thx_promise__Promise_Promise_Impl_::mapEitherFuture($this1, array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__20"), 'execute'), $failure);
	}
	static function mapFailureFuture($this1, $failure) {
		return thx_promise__Promise_Promise_Impl_::flatMapEitherFuture($this1, array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__21"), 'execute'), $failure);
	}
	static function mapFailurePromise($this1, $failure) {
		return thx_promise__Promise_Promise_Impl_::recover($this1, $failure);
	}
	static function recover($this1, $failure) {
		return thx_promise__Promise_Promise_Impl_::flatMapEither($this1, array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__22"), 'execute'), $failure);
	}
	static function recoverAsFuture($this1, $failure) {
		return thx_promise__Promise_Promise_Impl_::mapEitherFuture($this1, array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__23"), 'execute'), $failure);
	}
	static function map($this1, $success) {
		return thx_promise__Promise_Promise_Impl_::flatMapEither($this1, array(new _hx_lambda(array(&$success), "thx_promise__Promise_Promise_Impl__24"), 'execute'), array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__25"), 'execute'));
	}
	static function ap($this1, $pf) {
		return thx_promise__Promise_Promise_Impl_::flatMapEither($this1, array(new _hx_lambda(array(&$pf), "thx_promise__Promise_Promise_Impl__26"), 'execute'), array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__27"), 'execute'));
	}
	static function mapSuccess($this1, $success) {
		return thx_promise__Promise_Promise_Impl_::map($this1, $success);
	}
	static function flatMap($this1, $success) {
		return thx_promise__Promise_Promise_Impl_::flatMapEither($this1, $success, array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__28"), 'execute'));
	}
	static function append($this1, $success) {
		return thx_promise__Promise_Promise_Impl_::flatMapEither($this1, array(new _hx_lambda(array(&$success), "thx_promise__Promise_Promise_Impl__29"), 'execute'), array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__30"), 'execute'));
	}
	static function andThen($this1, $next) {
		return thx_promise__Promise_Promise_Impl_::flatMapEither($this1, array(new _hx_lambda(array(&$next), "thx_promise__Promise_Promise_Impl__31"), 'execute'), array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__32"), 'execute'));
	}
	static function foreachM($this1, $f) {
		return thx_promise__Promise_Promise_Impl_::flatMapEither($this1, array(new _hx_lambda(array(&$f), "thx_promise__Promise_Promise_Impl__33"), 'execute'), array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__34"), 'execute'));
	}
	static function mapSuccessPromise($this1, $success) {
		return thx_promise__Promise_Promise_Impl_::flatMapEither($this1, $success, array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__35"), 'execute'));
	}
	static function mapNull($this1, $handler) {
		return thx_promise__Promise_Promise_Impl_::recoverNull($this1, $handler);
	}
	static function recoverNull($this1, $handler) {
		return thx_promise__Promise_Promise_Impl_::flatMapEither($this1, array(new _hx_lambda(array(&$handler), "thx_promise__Promise_Promise_Impl__36"), 'execute'), array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__37"), 'execute'));
	}
	static function success($this1, $success) {
		return thx_promise__Promise_Promise_Impl_::either($this1, $success, array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__38"), 'execute'));
	}
	static function throwFailure($this1) {
		$future = $this1->then(array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__39"), 'execute'));
		return $future;
	}
	static function toString($this1) {
		return "Promise";
	}
	static function toFuture($this1) {
		return $this1;
	}
	function __toString() { return 'thx.promise._Promise.Promise_Impl_'; }
}
thx_promise__Promise_Promise_Impl_::$nil = thx_promise__Promise_Promise_Impl_::value(thx_Nil::$nil);
function thx_promise__Promise_Promise_Impl__0($v) {
	{
		return thx_Either::Right($v);
	}
}
function thx_promise__Promise_Promise_Impl__1(&$arr, $resolve, $reject) {
	{
		$results = (new _hx_array(array()));
		$counter = 0;
		$hasError = false;
		{
			$_g1 = 0;
			$_g = $arr->length;
			while($_g1 < $_g) {
				$i = $_g1++;
				thx_promise__Promise_Promise_Impl_::either($arr[$i], array(new _hx_lambda(array(&$arr, &$counter, &$hasError, &$i, &$resolve, &$results), "thx_promise__Promise_Promise_Impl__40"), 'execute'), array(new _hx_lambda(array(&$hasError, &$reject), "thx_promise__Promise_Promise_Impl__41"), 'execute'));
				unset($i);
			}
		}
	}
}
function thx_promise__Promise_Promise_Impl__2($acc, $p) {
	{
		return thx_promise__Promise_Promise_Impl_::flatMapEither($acc, array(new _hx_lambda(array(&$p), "thx_promise__Promise_Promise_Impl__42"), 'execute'), array(new _hx_lambda(array(), "thx_promise__Promise_Promise_Impl__43"), 'execute'));
	}
}
function thx_promise__Promise_Promise_Impl__3(&$callback, $cb) {
	{
		try {
			call_user_func_array($callback, array(array(new _hx_lambda(array(&$cb), "thx_promise__Promise_Promise_Impl__44"), 'execute'), array(new _hx_lambda(array(&$cb), "thx_promise__Promise_Promise_Impl__45"), 'execute')));
		}catch(Exception $__hx__e) {
			$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
			$e1 = $_ex_;
			{
				$tmp = thx_Error::fromDynamic($e1, _hx_anonymous(array("fileName" => "Promise.hx", "lineNumber" => 87, "className" => "thx.promise._Promise.Promise_Impl_", "methodName" => "create")));
				call_user_func_array($cb, array(thx_Either::Left($tmp)));
			}
		}
	}
}
function thx_promise__Promise_Promise_Impl__4(&$callback, $cb) {
	{
		call_user_func_array($callback, array(array(new _hx_lambda(array(&$cb), "thx_promise__Promise_Promise_Impl__46"), 'execute'), array(new _hx_lambda(array(&$cb), "thx_promise__Promise_Promise_Impl__47"), 'execute')));
	}
}
function thx_promise__Promise_Promise_Impl__5(&$callback, $cb) {
	{
		try {
			call_user_func_array($callback, array($cb));
		}catch(Exception $__hx__e) {
			$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
			$e = $_ex_;
			{
				$tmp = thx_Error::fromDynamic($e, _hx_anonymous(array("fileName" => "Promise.hx", "lineNumber" => 104, "className" => "thx.promise._Promise.Promise_Impl_", "methodName" => "createFulfill")));
				$tmp1 = thx_Either::Left($tmp);
				call_user_func_array($cb, array($tmp1));
			}
		}
	}
}
function thx_promise__Promise_Promise_Impl__6(&$err, $_, $reject) {
	{
		call_user_func_array($reject, array($err));
	}
}
function thx_promise__Promise_Promise_Impl__7(&$v, $resolve, $_) {
	{
		call_user_func_array($resolve, array($v));
	}
}
function thx_promise__Promise_Promise_Impl__8(&$handler, &$this1, $cb) {
	{
		$this1->then(array(new _hx_lambda(array(&$cb, &$handler), "thx_promise__Promise_Promise_Impl__48"), 'execute'));
	}
}
function thx_promise__Promise_Promise_Impl__9(&$failure, &$success, &$this1, $resolve, $reject) {
	{
		$this1->then(array(new _hx_lambda(array(&$failure, &$reject, &$resolve, &$success), "thx_promise__Promise_Promise_Impl__49"), 'execute'));
	}
}
function thx_promise__Promise_Promise_Impl__10($_) {
	{}
}
function thx_promise__Promise_Promise_Impl__11(&$handler, $_) {
	{
		return call_user_func($handler);
	}
}
function thx_promise__Promise_Promise_Impl__12(&$handler, $_, $cb) {
	{
		call_user_func_array($handler, array($cb));
		return;
	}
}
function thx_promise__Promise_Promise_Impl__13(&$handler, $_) {
	{
		return call_user_func($handler);
	}
}
function thx_promise__Promise_Promise_Impl__14(&$success, $v) {
	{
		$tmp = call_user_func_array($success, array($v));
		return thx_promise__Promise_Promise_Impl_::value($tmp);
	}
}
function thx_promise__Promise_Promise_Impl__15(&$failure, $e) {
	{
		$tmp1 = call_user_func_array($failure, array($e));
		return thx_promise__Promise_Promise_Impl_::value($tmp1);
	}
}
function thx_promise__Promise_Promise_Impl__16(&$success, $v) {
	{
		$tmp = call_user_func_array($success, array($v));
		return thx_promise_Future::value($tmp);
	}
}
function thx_promise__Promise_Promise_Impl__17(&$failure, $e) {
	{
		$tmp1 = call_user_func_array($failure, array($e));
		return thx_promise_Future::value($tmp1);
	}
}
function thx_promise__Promise_Promise_Impl__18(&$failure, &$success, $result) {
	{
		switch(Type::enumIndex($result)) {
		case 0:{
			$e = _hx_deref($result)->params[0];
			return call_user_func_array($failure, array($e));
		}break;
		case 1:{
			$v = _hx_deref($result)->params[0];
			return call_user_func_array($success, array($v));
		}break;
		}
	}
}
function thx_promise__Promise_Promise_Impl__19(&$failure, &$success, &$this1, $resolve, $reject) {
	{
		$this1->then(array(new _hx_lambda(array(&$failure, &$reject, &$resolve, &$success), "thx_promise__Promise_Promise_Impl__50"), 'execute'));
	}
}
function thx_promise__Promise_Promise_Impl__20($v) {
	{
		return $v;
	}
}
function thx_promise__Promise_Promise_Impl__21($v) {
	{
		return thx_promise_Future::value($v);
	}
}
function thx_promise__Promise_Promise_Impl__22($v) {
	{
		return thx_promise__Promise_Promise_Impl_::value($v);
	}
}
function thx_promise__Promise_Promise_Impl__23($v) {
	{
		return $v;
	}
}
function thx_promise__Promise_Promise_Impl__24(&$success, $v) {
	{
		$tmp = call_user_func_array($success, array($v));
		return thx_promise__Promise_Promise_Impl_::value($tmp);
	}
}
function thx_promise__Promise_Promise_Impl__25($err) {
	{
		return thx_promise__Promise_Promise_Impl_::error($err);
	}
}
function thx_promise__Promise_Promise_Impl__26(&$pf, $t) {
	{
		$_e = $pf;
		$tmp = array(new _hx_lambda(array(&$_e), "thx_promise__Promise_Promise_Impl__51"), 'execute');
		return call_user_func_array($tmp, array(array(new _hx_lambda(array(&$t), "thx_promise__Promise_Promise_Impl__52"), 'execute')));
	}
}
function thx_promise__Promise_Promise_Impl__27($err) {
	{
		return thx_promise__Promise_Promise_Impl_::error($err);
	}
}
function thx_promise__Promise_Promise_Impl__28($err) {
	{
		return thx_promise__Promise_Promise_Impl_::error($err);
	}
}
function thx_promise__Promise_Promise_Impl__29(&$success, $_) {
	{
		return call_user_func($success);
	}
}
function thx_promise__Promise_Promise_Impl__30($err) {
	{
		return thx_promise__Promise_Promise_Impl_::error($err);
	}
}
function thx_promise__Promise_Promise_Impl__31(&$next, $_) {
	{
		return call_user_func($next);
	}
}
function thx_promise__Promise_Promise_Impl__32($err) {
	{
		return thx_promise__Promise_Promise_Impl_::error($err);
	}
}
function thx_promise__Promise_Promise_Impl__33(&$f, $t) {
	{
		$tmp = call_user_func_array($f, array($t));
		return thx_promise__Promise_Promise_Impl_::map($tmp, thx_fp_Functions::hconst($t));
	}
}
function thx_promise__Promise_Promise_Impl__34($err) {
	{
		return thx_promise__Promise_Promise_Impl_::error($err);
	}
}
function thx_promise__Promise_Promise_Impl__35($err) {
	{
		return thx_promise__Promise_Promise_Impl_::error($err);
	}
}
function thx_promise__Promise_Promise_Impl__36(&$handler, $v) {
	{
		if(null === $v) {
			return call_user_func($handler);
		} else {
			return thx_promise__Promise_Promise_Impl_::value($v);
		}
	}
}
function thx_promise__Promise_Promise_Impl__37($err) {
	{
		return thx_promise__Promise_Promise_Impl_::error($err);
	}
}
function thx_promise__Promise_Promise_Impl__38($_) {
	{}
}
function thx_promise__Promise_Promise_Impl__39($r) {
	{
		if(Type::enumIndex($r) === 0) {
			$err = _hx_deref($r)->params[0];
			throw new HException($err);
		}
	}
}
function thx_promise__Promise_Promise_Impl__40(&$arr, &$counter, &$hasError, &$i, &$resolve, &$results, $v) {
	{
		if(!$hasError) {
			$results[$i] = $v;
			++$counter;
			$tmp1 = $counter === $arr->length;
			if($tmp1) {
				call_user_func_array($resolve, array($results));
			}
		}
	}
}
function thx_promise__Promise_Promise_Impl__41(&$hasError, &$reject, $err) {
	{
		if(!$hasError) {
			$hasError = true;
			call_user_func_array($reject, array($err));
		}
	}
}
function thx_promise__Promise_Promise_Impl__42(&$p, $arr1) {
	{
		return thx_promise__Promise_Promise_Impl_::map($p, array(new _hx_lambda(array(&$arr1), "thx_promise__Promise_Promise_Impl__53"), 'execute'));
	}
}
function thx_promise__Promise_Promise_Impl__43($err) {
	{
		return thx_promise__Promise_Promise_Impl_::error($err);
	}
}
function thx_promise__Promise_Promise_Impl__44(&$cb, $v) {
	{
		call_user_func_array($cb, array(thx_Either::Right($v)));
	}
}
function thx_promise__Promise_Promise_Impl__45(&$cb, $e) {
	{
		call_user_func_array($cb, array(thx_Either::Left($e)));
	}
}
function thx_promise__Promise_Promise_Impl__46(&$cb, $v) {
	{
		call_user_func_array($cb, array(thx_Either::Right($v)));
	}
}
function thx_promise__Promise_Promise_Impl__47(&$cb, $e) {
	{
		call_user_func_array($cb, array(thx_Either::Left($e)));
	}
}
function thx_promise__Promise_Promise_Impl__48(&$cb, &$handler, $v) {
	{
		try {
			call_user_func($handler);
			call_user_func_array($cb, array($v));
		}catch(Exception $__hx__e) {
			$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
			$e = $_ex_;
			{
				$tmp = thx_Error::fromDynamic($e, _hx_anonymous(array("fileName" => "Promise.hx", "lineNumber" => 124, "className" => "thx.promise._Promise.Promise_Impl_", "methodName" => "always")));
				$tmp1 = thx_Either::Left($tmp);
				call_user_func_array($cb, array($tmp1));
			}
		}
	}
}
function thx_promise__Promise_Promise_Impl__49(&$failure, &$reject, &$resolve, &$success, $r) {
	{
		try {
			switch(Type::enumIndex($r)) {
			case 0:{
				$e = _hx_deref($r)->params[0];
				{
					call_user_func_array($failure, array($e));
					call_user_func_array($reject, array($e));
				}
			}break;
			case 1:{
				$v = _hx_deref($r)->params[0];
				{
					call_user_func_array($success, array($v));
					call_user_func_array($resolve, array($v));
				}
			}break;
			}
		}catch(Exception $__hx__e) {
			$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
			$e1 = $_ex_;
			{
				$tmp = thx_Error::fromDynamic($e1, _hx_anonymous(array("fileName" => "Promise.hx", "lineNumber" => 143, "className" => "thx.promise._Promise.Promise_Impl_", "methodName" => "either")));
				call_user_func_array($reject, array($tmp));
			}
		}
	}
}
function thx_promise__Promise_Promise_Impl__50(&$failure, &$reject, &$resolve, &$success, $result) {
	{
		switch(Type::enumIndex($result)) {
		case 0:{
			$e = _hx_deref($result)->params[0];
			try {
				$tmp = call_user_func_array($failure, array($e));
				thx_promise__Promise_Promise_Impl_::either($tmp, $resolve, $reject);
			}catch(Exception $__hx__e) {
				$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
				$e1 = $_ex_;
				{
					$tmp1 = thx_Error::fromDynamic($e1, _hx_anonymous(array("fileName" => "Promise.hx", "lineNumber" => 201, "className" => "thx.promise._Promise.Promise_Impl_", "methodName" => "flatMapEither")));
					call_user_func_array($reject, array($tmp1));
				}
			}
		}break;
		case 1:{
			$v = _hx_deref($result)->params[0];
			try {
				$tmp2 = call_user_func_array($success, array($v));
				thx_promise__Promise_Promise_Impl_::either($tmp2, $resolve, $reject);
			}catch(Exception $__hx__e) {
				$_ex_ = ($__hx__e instanceof HException) && $__hx__e->getCode() == null ? $__hx__e->e : $__hx__e;
				$e2 = $_ex_;
				{
					$tmp3 = thx_Error::fromDynamic($e2, _hx_anonymous(array("fileName" => "Promise.hx", "lineNumber" => 200, "className" => "thx.promise._Promise.Promise_Impl_", "methodName" => "flatMapEither")));
					call_user_func_array($reject, array($tmp3));
				}
			}
		}break;
		}
	}
}
function thx_promise__Promise_Promise_Impl__51(&$_e, $success) {
	{
		return thx_promise__Promise_Promise_Impl_::map($_e, $success);
	}
}
function thx_promise__Promise_Promise_Impl__52(&$t, $_) {
	{
		return call_user_func_array($_, array($t));
	}
}
function thx_promise__Promise_Promise_Impl__53(&$arr1, $t) {
	{
		return $arr1->concat((new _hx_array(array($t))));
	}
}
